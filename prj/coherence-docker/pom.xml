<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2000, 2020, Oracle and/or its affiliates.

  Licensed under the Universal Permissive License v 1.0 as shown at
  http://oss.oracle.com/licenses/upl.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.oracle.coherence.ce</groupId>
    <artifactId>main</artifactId>
    <version>${revision}</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>coherence-docker</artifactId>
  <packaging>jar</packaging>
  <name>Coherence Docker Distribution</name>

  <properties>
    <project.version.pom>${project.version.official}-b${project.build.number}</project.version.pom>
    <docker.image.name>oracle/coherence-ce:${project.version}</docker.image.name>
    <docker.skip.tests>false</docker.skip.tests>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-management</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-metrics</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- jline -->
    <dependency>
      <groupId>jline</groupId>
      <artifactId>jline</artifactId>
    </dependency>

    <!-- JAX-RS API -->

    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
    </dependency>

    <!-- JDK 8 javax.annotation missing Priority, required by jakarata.ws.rs:jakarta.ws.rs-api -->
    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
    </dependency>

    <!-- test dependencies -->
    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-rest</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-testing-support</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.bedrock</groupId>
      <artifactId>bedrock-runtime</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.bedrock</groupId>
      <artifactId>bedrock-testing-support</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.bedrock.coherence</groupId>
      <artifactId>coherence-12.2.1-testing-support</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle.bedrock</groupId>
      <artifactId>bedrock-runtime-docker</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>docker</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>project.docker</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>distribution</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>docker-build</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <descriptors>
                    <descriptor>src/main/assemble/coherence.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.20.1</version>
            <configuration>
              <images>
                <image>
                  <name>${docker.image.name}</name>
                  <build>
                    <compression>bzip2</compression>
                    <dockerFileDir>${project.build.directory}/docker-build</dockerFileDir>
                    <nocache>true</nocache>
                    <optimise>true</optimise>
                  </build>
                </image>
              </images>
            </configuration>
            <executions>
              <execution>
                <id>package</id>
                <phase>package</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>docker-test</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>project.docker</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <skip>false</skip>
              <systemProperties>
                <project.version.dist>${project.version.dist}</project.version.dist>
                <project.version.pom>${project.version.pom}</project.version.pom>
                <project.version.release>${project.version.release}</project.version.release>
                <project.version.short>${project.version.short}</project.version.short>
                <docker.image.name>${docker.image.name}</docker.image.name>
                <maven.executable.location>${root.path}/tools/maven/bin</maven.executable.location>
                <console.output.folder>${project.build.directory}/test-output/functional</console.output.folder>
              </systemProperties>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skip>false</skip>
              <systemProperties>
                <project.version.dist>${project.version.dist}</project.version.dist>
                <project.version.pom>${project.version.pom}</project.version.pom>
                <project.version.release>${project.version.release}</project.version.release>
                <project.version.short>${project.version.short}</project.version.short>
                <docker.image.name>${docker.image.name}</docker.image.name>
                <maven.executable.location>${root.path}/tools/maven/bin</maven.executable.location>
                <console.output.folder>${project.build.directory}/test-output/functional</console.output.folder>
              </systemProperties>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
