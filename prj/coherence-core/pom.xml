<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2000, 2020, Oracle and/or its affiliates.

  Licensed under the Universal Permissive License v 1.0 as shown at
  http://oss.oracle.com/licenses/upl.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.oracle.coherence.ce</groupId>
    <artifactId>main</artifactId>
    <version>${revision}</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>coherence-core</artifactId>
  <name>Coherence Core</name>
  <packaging>jar</packaging>

  <properties>
    <skip.sources>false</skip.sources>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-discovery</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- asm -->
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-commons</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- bdb -->
    <dependency>
      <groupId>com.sleepycat</groupId>
      <artifactId>je</artifactId>
    </dependency>

    <!-- codemodel -->
    <dependency>
      <groupId>com.sun.codemodel</groupId>
      <artifactId>codemodel</artifactId>
    </dependency>

    <!-- graal -->
    <dependency>
      <groupId>org.graalvm.sdk</groupId>
      <artifactId>graal-sdk</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.graalvm.js</groupId>
      <artifactId>js</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.graalvm.js</groupId>
      <artifactId>js-scriptengine</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.graalvm.js</groupId>
      <artifactId>js-launcher</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- hamcrest -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- javaee -->
    <dependency>
      <groupId>javaee</groupId>
      <artifactId>javaee-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Jakarta Inject API -->
    <dependency>
      <groupId>jakarta.inject</groupId>
      <artifactId>jakarta.inject-api</artifactId>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>

    <!-- JSON-B -->
    <dependency>
      <groupId>jakarta.json.bind</groupId>
      <artifactId>jakarta.json.bind-api</artifactId>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>

    <!-- JSON-P -->
    <dependency>
      <groupId>jakarta.json</groupId>
      <artifactId>jakarta.json-api</artifactId>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>jakarta.json</artifactId>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>

    <!-- junit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- jackson -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Jersey (optional dependency for http server) -->
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-server</artifactId>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <!-- include the standard maven resources directory -->
      <resource>
        <directory>src/main/resources</directory>
      </resource>

      <!-- include the licenses -->
      <resource>
        <directory>../../ext/license</directory>
        <includes>
          <include>coherence-client.xml</include>
          <include>coherence-community.xml</include>
          <include>coherence-enterprise.xml</include>
          <include>coherence-grid.xml</include>
          <include>coherence-rtc.xml</include>
          <include>coherence-standard.xml</include>
          <include>processor-dictionary.xml</include>
        </includes>
      </resource>

      <!-- include the public license keys -->
      <resource>
        <directory>../../ext/license/keys</directory>
        <includes>
          <include>tangosol.cer</include>
          <include>tangosol.dat</include>
        </includes>
      </resource>

      <!-- include resources in the source tree not in the resources folder -->
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>com/tangosol/net/security/*.xml</include>
          <include>com/tangosol/util/*.xml</include>
        </includes>
      </resource>
    </resources>

    <plugins>
      <!-- produce test-jar for this module -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
