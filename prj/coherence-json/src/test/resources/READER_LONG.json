{"direction":"ltr","id":"feed/http://feeds.feedburner.com/blogspot/hsDu","title":"Android Developers Blog","description":"An Open Handset Alliance Project.","continuation":"CKaN0uio-6MC","self":[{"href":"http://www.google.com/reader/api/0/stream/contents/feed/http://feeds.feedburner.com/blogspot/hsDu?outpu\u003djson"}],"alternate":[{"href":"http://android-developers.blogspot.com/","type":"text/html"}],"updated":1293057774,"items":[{"isReadStateLocked":true,"crawlTimeMsec":"1293057774590","id":"tag:google.com,2005:reader/item/d2371ebb2a51459b",
"categories":["user/06278703451334277493/state/com.google/read"],"title":"More Payment Options in Android Market","published":1293056520,"updated":1293061609,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/b-ApBwqzDgA/more-payment-options-in-android-market_22.html","type":"text/html"}],"content":{"direction":"ltr","content":"\u003cp\u003e\u003cspan style\u003d\"font-style:italic\"\u003e[This post is by Eric Chu, Android Developer Ecosystem. â€”Dirk Dougherty]\u003c/span\u003e\u003c/p\u003e\n\u003ca href\u003d\"http://2.bp.blogspot.com/_Mm75bF7VYrE/TRJT0fnQx4I/AAAAAAAAABs/_1C9tobqyM8/s1600/market-att.png\"\u003e\u003cimg style\u003d\"float:right;display:block;border:5px solid #ddd;margin:.5em 10px 10px;text-align:center;width:240px;height:400px\" src\u003d\"http://2.bp.blogspot.com/_Mm75bF7VYrE/TRJT0fnQx4I/AAAAAAAAABs/_1C9tobqyM8/s400/market-att.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\n\u003cp\u003eA key to a great purchasing experience is providing users with simple and fast payment methods. The Android Market team has been working hard to deliver more forms of payment to further reduce purchase friction.\u003c/p\u003e\n\u003cp\u003eToday, I am pleased to announce the availability of AT\u0026amp;T Direct Carrier Billing for Android users on the AT\u0026amp;T network.  AT\u0026amp;T Android users can now easily charge their Android Market purchases to their monthly accounts with only a few clicks.  With the combination of Android Marketâ€™s new \u003ca href\u003d\"http://android-developers.blogspot.com/2010/12/android-market-client-update.html\"\u003eapp discovery features\u003c/a\u003e and a carrier-backed frictionless payment method, users will find it significantly easier to discover and purchase applications of their choice.\u003c/p\u003e\n\u003cp\u003eWeâ€™ve been rolling out Direct Carrier Billing to all AT\u0026amp;T users over the past several days, as part of a general update to the Market service. Also in the update, please watch for the arrival of new features we \u003ca href\u003d\"http://android-developers.blogspot.com/2010/12/android-market-client-update.html\"\u003eannounced recently\u003c/a\u003e, including the 15-minute refund window, dynamic Wallpaper and Widget categories, new 50MB max .apk size, and more. In addition, weâ€™ve added even more categories to make it easier to find great apps in popular categories, such as â€œMedia \u0026amp; Videoâ€, â€œMusic \u0026amp; Audioâ€, â€œBusinessâ€, â€œSportsâ€ (in \u0026quot;Games\u0026quot;), and more. If you have one or more published apps on Android Market,  please take a look at these new categories and decide if they are more suitable for your products.\u003c/p\u003e\n\u003cp\u003eWe strongly believe carrier billing is a great way to make it easy for users to purchase and pay for applications.  In addition to the availability of AT\u0026amp;T and T-Mobile US carrier billing, weâ€™ll continue to partner with more carriers to offer carrier billing options for their subscribers.\u003c/p\u003e\n\u003cp\u003e2010 has been an awesome year for Android due in large part to your support.  We have seen tremendous growth in Android Market both in terms of application volume and quality.  In 2011, we remain committed to making Android Market the best mobile application store possible. As always, please donâ€™t hesitate to continue giving us feedback through \u003ca href\u003d\"http://www.google.com/support/androidmarket/bin/request.py?contact_type\u003dpublisher\"\u003eMarket Help Center\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eBest wishes for the new year!\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-2467100907163790381?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003db-ApBwqzDgA:QBXnX3GRLGI:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003db-ApBwqzDgA:QBXnX3GRLGI:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003db-ApBwqzDgA:QBXnX3GRLGI:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/b-ApBwqzDgA\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Dirk Dougherty","likingUsers":[{"userId":"09879977286868249236"},{"userId":"11612649584011442359"},{"userId":"14445124357603332182"},{"userId":"13868012778758107980"},{"userId":"11320963709709929773"},{"userId":"00961274886824306615"},{"userId":"17543352286955354688"},{"userId":"17618782820034880795"},{"userId":"14468489300867091839"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu","title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"
}},{"isReadStateLocked":true,"crawlTimeMsec":"1292870458974","id":"tag:google.com,2005:reader/item/c71ce0790d469c65","categories":["user/06278703451334277493/state/com.google/read"],"title":"Itâ€™s not â€œrootingâ€, itâ€™s openness","published":1292869020,"updated":1292870022,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/GQg4GabpqNw/its-not-rooting-its-openness.html","type":"text/html"}],"content":{"direction":"ltr","content":"\u003ca href\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TFnmnPrBzFI/AAAAAAAAAJU/AtgoDZN_1o8/s1600/nickblog.jpg\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;float:right;margin:0 0 10px 10px;width:200px;height:200px\" src\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TFnmnPrBzFI/AAAAAAAAAJU/AtgoDZN_1o8/s200/nickblog.jpg\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003e\u003ci\u003e[This post is by Nick Kralevich, an engineer  on the Android Security Team. â€” Tim Bray]\u003c/i\u003e\u003c/p\u003e\u003cp\u003eâ€œNexus S has been rooted, let the madness commence!â€ proclaims \u003ccite\u003eEngadget\u003c/cite\u003e.  â€œThis is only possible because Android's security is crap and it's exploited easily to gain root priviledges \u003ci\u003e[sic]\u003c/i\u003eâ€ adds a commenter.\u003c/p\u003e\u003cp\u003eYouâ€™ll have to excuse me if I strongly disagree.\u003c/p\u003e\u003cp\u003eThe Nexus S, like the Nexus One before it, is designed to allow enthusiasts to install custom operating systems.  Allowing your own boot image on a pure Nexus S is as simple as running \u003ca href\u003d\"http://www.redmondpie.com/unlock-nexus-s-bootloader-how-to-guide/\"\u003e\u003ccode\u003efastbootÂ oemÂ unlock\u003c/code\u003e\u003c/a\u003e.  It should be no surprise that modifying the operating system can give you root access to your phone.  Hopefully thatâ€™s just the beginning of the changes you might make.\u003c/p\u003e\u003cp\u003eLegitimately gaining root access to your device is a far cry from most rooting exploits.  Traditional rooting attacks are typically performed by exploiting an unpatched security hole on the device.  Rooting is not a feature of a device; rather, it is \u003cem\u003ethe active exploitation of a known security hole\u003c/em\u003e.\u003c/p\u003e\u003cp\u003eAndroid has a strong security strategy, backed by a solid implementation. By default, all Android applications \u003ca href\u003d\"http://developer.android.com/guide/topics/security/security.html#arch\"\u003eare sandboxed\u003c/a\u003e from each other, helping to ensure that a malicious or buggy application cannot interfere with another.  All applications are required to \u003ca href\u003d\"http://developer.android.com/guide/topics/security/security.html#declaring\"\u003edeclare the permissions\u003c/a\u003e they use, ensuring the user is in control of the information they share.  And yes, we aggressively fix known security holes, including those that can be used for rooting.  Our peers in the security community have recognized \u003ca href\u003d\"http://blogs.adobe.com/asset/2010/12/leveraging-the-android-sandbox-with-adobe-reader.html\"\u003eour contribution\u003c/a\u003e to mobile security, and for that, we are extremely grateful.\u003c/p\u003e\u003cp\u003eUnfortunately, until carriers and manufacturers provide an easy method to legitimately unlock devices, there will be a natural tension between the rooting and security communities.  We can only hope that carriers and manufacturers will recognize this, and not force users to choose between device openness and security.  Itâ€™s possible to design unlocking techniques that protect the integrity of the mobile network, the rights of content providers, and the rights of application developers, while at the same time giving users choice.  Users should demand no less.\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-5133946425561665735?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dGQg4GabpqNw:uVaSGx7Q-F4:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dGQg4GabpqNw:uVaSGx7Q-F4:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003dGQg4GabpqNw:uVaSGx7Q-F4:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/GQg4GabpqNw\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"16712154826025604224"},{"userId":"13609873120653289725"},{"userId":"11612649584011442359"},{"userId":"13815360914583643094"},{"userId":"05563924790028363141"},{"userId":"03552833013083248876"},{"userId":"14274384500514150963"},{"userId":"04534820401090351227"},{"userId":"06995249533271832335"},{"userId":"02619972974043865132"},{"userId":"00596128509145101012"},{"userId":"12336678869150546781"},{"userId":"17506024087165441043"},{"userId":"15508911498378695480"
},{"userId":"18119811097128389217"},{"userId":"02493361864459897726"},{"userId":"09541460009842512711"},{"userId":"18078788385534166172"},{"userId":"10665922302959903068"},{"userId":"00598316935303789322"},{"userId":"02462295483119090213"},{"userId":"07589453580393254434"},{"userId":"15176492652780725554"},{"userId":"01777670490940047683"},{"userId":"08321458860961574310"},{"userId":"16548713399318794433"},{"userId":"02783806191223088164"},{"userId":"03560200052926293134"},{"userId":"14191678617461161845"
},{"userId":"16745487981723953095"},{"userId":"00162858525007745910"},{"userId":"17917669631006186641"},{"userId":"00843588555575210225"},{"userId":"04012409181852828134"},{"userId":"00482552954856396633"},{"userId":"07459412189161288922"},{"userId":"12003135666519766822"},{"userId":"16245353708721835061"},{"userId":"01858788270068194280"},{"userId":"12827101999364511384"},{"userId":"01856445770795437540"},{"userId":"02308393929803639872"},{"userId":"09803735434411992155"},{"userId":"06001985769532929896"
},{"userId":"04629270294794435383"},{"userId":"09484937584837995548"},{"userId":"10644767478080387137"},{"userId":"09474152940201721002"},{"userId":"10045027373140262936"},{"userId":"10698857186788444055"},{"userId":"15638623306692727372"},{"userId":"11088838922446449759"},{"userId":"05438472752954509767"},{"userId":"12569231160583982433"},{"userId":"10971299441617968664"},{"userId":"17775666386044392488"},{"userId":"04576282046737218176"},{"userId":"14383001784017419680"},{"userId":"13037775774475607074"
},{"userId":"00285525823836440842"},{"userId":"06951221133234202405"},{"userId":"12972648725658948827"},{"userId":"09954514970959033461"},{"userId":"13236389836239072361"},{"userId":"09861010378999536985"},{"userId":"03894615137980382424"},{"userId":"16481035324829052913"},{"userId":"03859410434978780874"},{"userId":"17405139145289424453"},{"userId":"01680425984639677310"},{"userId":"04535817411886700367"},{"userId":"17028476595848419075"},{"userId":"11939176234140397227"},{"userId":"10247686741432321456"
},{"userId":"04810846747023171466"},{"userId":"15555881987074499246"},{"userId":"01280440147462572682"},{"userId":"00801425738619648459"},{"userId":"14123329659084735865"},{"userId":"01945776438904737208"},{"userId":"17669445519297280524"},{"userId":"01157934382385370472"},{"userId":"06787430982147835875"},{"userId":"00363647479470519434"},{"userId":"11675645409186158838"},{"userId":"14445124357603332182"},{"userId":"15316723648533920038"},{"userId":"02345579413163193966"},{"userId":"15614667187734348379"
},{"userId":"16504796222193378642"},{"userId":"17481313524217510319"},{"userId":"17445159381967870315"},{"userId":"01109837173276724275"},{"userId":"08738464821127025106"},{"userId":"15605441614050575928"},{"userId":"14548827955052233644"},{"userId":"02799142056382232960"},{"userId":"14736731329877173492"},{"userId":"17877134458206686774"},{"userId":"09688823324302544181"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu","title":"Android Developers Blog",
"htmlUrl":"http://android-developers.blogspot.com/"}},{"isReadStateLocked":true,"crawlTimeMsec":"1292550079756","id":"tag:google.com,2005:reader/item/8647a02192ccb099","categories":["user/06278703451334277493/state/com.google/read"],"title":"Android Browser User-Agent Issues","published":1292547300,"updated":1292548424,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/NTO0ynDnf6M/android-browser-user-agent-issues.html","type":"text/html"}],"content":{"direction":"ltr","content":"\u003ca href\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TQq4Q-NZSBI/AAAAAAAAAPc/BVuf8C8aFk4/s1600/bart.png\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;float:right;margin:0 0 10px 10px;width:185px;height:227px\" src\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TQq4Q-NZSBI/AAAAAAAAAPc/BVuf8C8aFk4/s400/bart.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003e\u003ci\u003e[This post is by Bart Sears, who manages the Android Browser team.Â â€”Tim Bray]\u003c/i\u003e\u003c/p\u003e\u003cp\u003eThis posting describes some issues when browsing websites with mobile variants using large-form-factor Android devices.  This posting will be of interest both to OEMs (with recommendations on how to set the User Agent string for the device) and to web site designers/administrators (with recommendations on how to decide to provide either a mobile version, a desktop version, or a large-form-factor touch device version of the site).\u003c/p\u003e\u003ch3\u003eDetails\u003c/h3\u003e\u003cp\u003eWith the advent of Android devices with larger form factors, weâ€™ve been evaluating the best way for web sites to provide a UI appropriate for the various Android devices that are now available to consumers.  We have received feedback that consumers using larger-form-factor devices often prefer the â€œfullâ€ or â€œdesktopâ€ version of the site over the â€œmobileâ€ version.  Most websites providing â€œmobileâ€ versions key off of the HTTP User-Agent header field to determine whether to provide the full site or a mobile version.\u003c/p\u003e\u003cp\u003eWhile large-form-factor Android devices could use â€œUser Agent Spoofingâ€ to provide a desktop User Agent in the HTTP header, we recommend against this.  There may be site customizations needed for Android devices (for example changes in the way that mouseover is used) and the site would be unable to provide these customizations if it receives a spoofed User Agent that did not indicate that this was an Android device.\u003c/p\u003e\u003cp\u003eCurrently, Android devices provide the following (in addition to standard info) in the User-Agent: \"Android\", a version number, a device name, a specific build, Webkit version info, and \"Mobile\".  For example, Froyo on a Nexus One has the following User Agent:\u003c/p\u003e\u003cp\u003e\u003ccode\u003eMozilla/5.0 (Linux; U; Android 2.2.1; en-us; Nexus One Build/FRG83) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1\u003c/code\u003e\u003c/p\u003e\u003cp\u003eThe \"Mobile\" string in the User Agent indicates that this device would prefer a version of the website optimized for Mobile (small form factor devices), if available.\u003c/p\u003e\u003cp\u003eWe recommend that manufactures of large-form-factor devices (where the user may prefer the standard web site over a mobile optimized version) remove \"Mobile\" from the User Agent (and keep the rest of the User Agent as currently implemented).  Web sites can then key off \"Mobile\" in the User Agent to decide on which UI version to present to the device.  So a large screen device running Froyo would have a User Agent similar to:\u003c/p\u003e\u003cp\u003e\u003ccode\u003eMozilla/5.0 (Linux; U; Android 2.2.1; en-us; device Build/FRG83) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Safari/533.1\u003c/code\u003e\u003c/p\u003e\u003cp\u003eWhere \"device\" would be replaced with the actual name of the new device.  Sites can continue to use â€œAndroidâ€ in the User Agent to optimize for Android specific features and can also key off of â€œMobileâ€ to determine which UI to present.\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-7704340851847032101?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dNTO0ynDnf6M:u3XVKHT7rV4:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dNTO0ynDnf6M:u3XVKHT7rV4:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003dNTO0ynDnf6M:u3XVKHT7rV4:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/NTO0ynDnf6M\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"10093505905734668045"},{"userId":"17213093275657985174"},{"userId":"16745487981723953095"},{"userId":"04576282046737218176"},{"userId":"09238653987182460472"},{"userId":"17669445519297280524"},{"userId":"00363647479470519434"},{"userId":"15316723648533920038"},{"userId":"10961316654879340122"},{"userId":"12320565859131388573"},{"userId":"08683740215049247725"},{"userId":"11320963709709929773"},{"userId":"00961274886824306615"},{"userId":"12277507429233591293"
},{"userId":"00140280722313790817"},{"userId":"16550694058995556713"},{"userId":"02978694593234869704"},{"userId":"02027418846516918260"},{"userId":"01078909911975297443"},{"userId":"00320933387269203904"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu","title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"}},{"isReadStateLocked":true,"crawlTimeMsec":"1292370000442","id":"tag:google.com,2005:reader/item/3ac75ec1427a3409",
"categories":["user/06278703451334277493/state/com.google/read"],"title":"Analytics for Android Apps","published":1292367480,"updated":1292369866,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/HFtm9SN5Oss/analytics-for-android-apps.html","type":"text/html"}],"content":{"direction":"ltr","content":"\u003ca href\u003d\"http://2.bp.blogspot.com/_GTM_W5mVPTU/TQf98KOwFtI/AAAAAAAAAPU/GAn3Efe53UM/s1600/alexlucas.png\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;float:right;margin:0 0 10px 10px;width:185px;height:227px\" src\u003d\"http://2.bp.blogspot.com/_GTM_W5mVPTU/TQf98KOwFtI/AAAAAAAAAPU/GAn3Efe53UM/s400/alexlucas.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003e\u003ci\u003e[This post is by Alexander Lucas, an Android Developer Advocate bent on saving the world 5 minutes.Â â€”Tim Bray]\u003c/i\u003e\u003c/p\u003e\u003cp\u003eWith the \u003ca href\u003d\"http://analytics.blogspot.com/2010/12/custom-variables-for-your-android.html\"\u003eaddition\u003c/a\u003e of custom variables to the \u003ca href\u003d\"http://code.google.com/mobile/analytics/docs/android/\"\u003eMobile Analytics SDK for Android\u003c/a\u003e, it strikes me as a good time to cover something many of you might not have known was possibleÂ â€”Â using Google Analytics to easily track app usage.  Using the mobile SDK is a handy way to get real data on how users interact with your Android apps.  So today I'm going to explain how to track usage of your application with Google Analytics.\u003c/p\u003e\u003ch3\u003ePrereqs Ahoy!\u003c/h3\u003e\u003cp\u003eBefore you take off running with this shiny new toy, thereâ€™s a few things youâ€™ll need to set up first:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cp\u003eDownload the mobile SDK.  Download and installation instructions are available in the \u003ca href\u003d\"http://code.google.com/mobile/analytics/docs/android/#gettingStarted\"\u003egetting started section\u003c/a\u003e of the Mobile SDK docs, but the summarized version is:\u003c/p\u003e\u003c/li\u003e\u003cul\u003e\u003cli\u003e\u003cp\u003eDownload the zip file from the download page\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003ePut the libGoogleAnalytics.jar file in your projectâ€™s /libs directory\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eBe sure the following lines are in your AndroidManifest.XML file:\u003cbr\u003e\u003ccode\u003e\u0026lt;uses-permission android:name\u003d\u0026quot;android.permission.INTERNET\u0026quot; /\u0026gt;\n\u0026lt;uses-permission android:name\u003d\u0026quot;android.permission.ACCESS_NETWORK_STATE\u0026quot; /\u0026gt;\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003cli\u003e\u003cp\u003eYouâ€™re going to need a Google Analytics account.  Go to \u003ca href\u003d\"http://www.google.com/analytics\"\u003egoogle.com/analytics\u003c/a\u003e and set up an account if you donâ€™t already have one. Then set up a profile for your Android application.  When youâ€™re done youâ€™ll see a javascript snippet to insert into your â€œsiteâ€. Copy the part that looks like UA-XXXXXXX-X.  Youâ€™ll use this in the Android application to tell Analytics which profile the data is being sent for.\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3\u003eGet Tracking\u003c/h3\u003e\u003cp\u003ePrevious Google Analytics users are going to find a lot of this familiar.  In fact, weâ€™ve made a point of keeping the interface as familiar as possible.\u003c/p\u003e\u003cp\u003eFirst, get your tracker object, and initialize it using the UA code for the Analytics profile you want to track.  It makes the most sense to do this in the \u003ccode\u003eonCreate()\u003c/code\u003e method for your activity main, so it only fires when your application starts up.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eGoogleAnalyticsTracker tracker;\nprotected void onCreate(Bundle savedInstanceState) {\n  ...\n  tracker \u003d GoogleAnalyticsTracker.getInstance();\n  tracker.start(â€œUA-1234-1â€, this); \n  â€¦\n}\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe mobile SDK provides support for the 3 main types of data sent to the Google Analytics servers:  Pageviews, events, and custom variables.\u003c/p\u003e\u003ch3\u003ePageviews\u003c/h3\u003e\u003cp\u003eA pageview is a standard means to measure traffic volume to a traditional website.  Given that this is going into an Android app and not a website, itâ€™s going to be up to you to decide what a â€œpageviewâ€ means.  Depending on the type of app, each Activity or different views within the same activity (for instance, different tabs within a TabActivity) could count as a pageview.\u003c/p\u003e\u003cp\u003eWhenever you want to trigger a pageview, call the \u003ccode\u003etrackPageView()\u003c/code\u003e method.  It only takes one parameter, the URL you want a pageview counted towards.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003etracker.trackPageView(\"/HomeScreen\");\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ePageviews make the most sense as full screen transitions, which in most cases will mean â€œone pageview per Activity.â€  Therefor it makes the most sense to put the call to trackPageView in the \u003ccode\u003eonCreate()\u003c/code\u003e method for each activity in your application.  An exception would be if you were using a TabActivity, or other scenario where there were multiple full-screen transitions which all occurred within the same Activity, and conceptually mapped to seperate full-screen â€œpagesâ€ being viewed.\u003c/p\u003e\u003ch3\u003eEvents\u003c/h3\u003e\u003cp\u003eIn Analytics, events are designed to track user interaction to that doesnâ€™t map to pageviews, like hitting play/pause/stop in a multimedia app.  This maps very well to Android usageÂ â€”Â Any form of interaction, from hitting certain buttons to adding/removing data from the datastore, can be tracked using Events.\u003c/p\u003e\u003cp\u003eEvents are a little more complicated than pageviews, but just slightly.  Instead of 1 parameter, you have 4: Category, Action, Label (optional), Value (optional).\u003c/p\u003e\u003cp\u003eTo see how to make use of these, letâ€™s imagine you had a media player application, and wanted to track how many times play, pause, and stop were clicked.  The code would look like this:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e   playButton.setOnClickListener(new OnClickListener() {\n     @Override\n     public void onClick(View v) {\n     ...\n       tracker.trackEvent(\n           \"Media Player\",  // Category\n           \"Click\",  // Action\n           \"Play\", // Label\n           0);       // Value\n     }\n   });\n\n   pauseButton.setOnClickListener(new OnClickListener() {\n     @Override\n     public void onClick(View v) {\n     ...\n       tracker.trackEvent(\n           \"Media Player\",  // Category\n           \"Click\",  // Action\n           \"Pause\", // Label\n           0);       // Value      \n   });\n\n   stopEventButton.setOnClickListener(new OnClickListener() {\n     @Override\n     public void onClick(View v) {\n     ...\n       tracker.trackEvent(\n           \"Media Player\",  // Category\n           \"Click\",  // Action\n           \"Stop\", // Label\n           currentVideo.getPositionInSeconds());       // Value      \n   });\n\n   myMediaPlayer.setFinishedListener(new FinishedListener() {\n     @Override\n     public void onFinished(View v) {\n     ...\n       tracker.trackEvent(\n           \"Media Player\",  // Category\n           \"Video Finished\",  // Action\n           \"Stop\", // Label\n           currentVideo.getLengthInSeconds());       // Value      \n   });\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eRemember that in the Google Analytics web interface, this data is displayed hierarchicallyÂ â€”Â For instance, if you click on Categories in the left nav, and then on â€œMedia Playerâ€, youâ€™ll see a list of all the different possible values of â€œActionâ€ which have happened in the â€œmedia Playerâ€ category.  Clicking on â€œClickâ€ will show all the labels which were sent in the Media Player category with an action of â€œClickâ€.\u003c/p\u003e\u003cp\u003eThe 4th parameter, â€œvalueâ€, is optional, and behaves differently from the others.  Itâ€™s meant to be cumulative; In this example, Iâ€™m sending the amount of video watched when a video is either stopped or allowed to finish.  This is aggregated server-side, and when I go to look at my data Iâ€™ll be able to see the total time people have spent watching videos using my application.\u003c/p\u003e\u003ch3\u003eCustom Variables\u003c/h3\u003e\u003cp\u003eThe new hotness!  Custom variables are name-value pair tags that you can insert in your tracking code in order to refine Google Analytics tracking.  The easiest way to think of this is as meta-data accompanying your pageviews and events.  Using this metadata, it becomes easy to split off and look at segments of your data, much the same way you use labels in Gmail.  One Android-specific example would be to have a â€œAppTypeâ€ status with â€œFullâ€ or â€œLiteâ€ depending on whether the user has the full version of the app or not.  You could then use the Analytics web interface to look at only the â€œLiteâ€ users, and see how their usage / userbase differs from the â€œFullâ€ segment.  Custom variables are a ridiculously powerful analytical tool, but theyâ€™re also a \u003ca href\u003d\"http://code.google.com/apis/analytics/docs/tracking/gaTrackingCustomVariables.html\"\u003edeep topic\u003c/a\u003e.  I heartily recommend giving the docs a once-through before implementing them in your Android application.  Especially make sure to read the section on scoping.  Twice.  Iâ€™m mean it...  Iâ€™ll wait.\u003c/p\u003e\u003cp\u003eThere are 4 parameters in a custom variable: Index (1 to 5 inclusive), Name, Value, and Scope (Optional, defaults to Page Scope).\u003c/p\u003e\u003cp\u003eThe place in your code where \u003ccode\u003esetCustomVar()\u003c/code\u003e will be called depends largely on what scope that variable will be:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cp\u003eVisitor scope:  Call once the first time your application is run on a device.  Donâ€™t create any custom variables at the same index, or they will overwrite the first one.  Useful for sending data about which version of the app is being used, what kind of phone, lite vs full version of the app, or anything that wonâ€™t change during the lifetime of the installation of that application.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eSession scope:  Call once at the beginning of every Activity startup.  Will apply to all pageviews and events for the lifecycle of the activity, unless a different custom variable is created at the same index.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003ePage scope:  Call right before trackEvent or trackPageView that the custom variable should apply to, every time that method is called.  If no scope is specified, this is the default.\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eThe call to set a custom variable will look like the following:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e// Scopes are encoded to integers:  Visitor\u003d1, Session\u003d2, Page\u003d3\ntracker.setCustomVar(1, \"Navigation type\", \"Button click\", 3);\u003c/code\u003e\u003c/pre\u003e\u003ch3\u003eChoose a Dispatch Mode\u003c/h3\u003e\u003cp\u003eIn order to optimize for battery life, a request isnâ€™t actually sent out to the server every time you fire a pageview or custom variable.  Instead, all the pageviews, events, and their associated custom variables are stored in a local SQLITE database until theyâ€™re dispatched as a group to the server.  You can set this up to happen one of two ways:  Either have the dispatch occur automatically every n seconds, or manually when you call â€œdispatchâ€ in code.  The mode is chosen when you call the start method on your tracker.\u003c/p\u003e\u003cp\u003eManual dispatch looks like this:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e// No time increment sent as a parameter\ntracker.start(â€œUA-1234-1â€, this);\nâ€¦\n// Call this when you want to send the entire event queue to the server\ntracker.dispatch();\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe timed automatic dispatch looks similar, but sends an extra parameter (the number of seconds between dispatches).  In timed dispatch, you never have to manually call dispatch.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e// Dispatch all queued pagevies/events every 300 seconds (5 minutes)\ntracker.start(\"UA-YOUR-ACCOUNT-HERE\", 300, this);\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eItâ€™s important to remember that Google Analytics uses the timestamp for when it receives your data, not when the actual pageview/event occurred.  This can potentially lead to inaccurate Analytics data, since events can be sent on different days than when they occurred, so take care to dispatch regularly.\u003c/p\u003e\u003ch3\u003eThe end result\u003c/h3\u003e\u003cp\u003eLetâ€™s go back to that \u003ccode\u003eonCreate()\u003c/code\u003e method we used to instantiate the tracker earlier, and see what it looks like with all the pieces in place:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eGoogleAnalyticsTracker tracker;\n\nprotected void onCreate(Bundle savedInstanceState) {\nsuper.onCreate(savedInstanceState);\n\ntracker \u003d GoogleAnalyticsTracker.getInstance();\ntracker.start(â€œUA-1234-1â€, this);\n\nif(isFirstTimeRunningApplication()) {\n tracker.setCustomVar(1, â€œApp Typeâ€, â€œDemoâ€, 1);\n}\ntracker.trackPageView(\"/HomeScreen\");\n\nâ€¦\n}\u003c/code\u003e\u003c/pre\u003e\u003ch3\u003eHow to look at all this data\u003c/h3\u003e\u003cp\u003eThere are two ways you can approach this.  First, Google Analytics has a pretty snazzy web interface, which does a very good job of surfacing useful information for you.  If youâ€™re new to Analytics and donâ€™t really know what youâ€™re looking for yet, the web interface is a great way to explore your data and understand your users.\u003c/p\u003e\u003cp\u003eIf you already have a strong idea of the questions you want to ask (app usage across versions of the Android platform, growth rates, time-in-app per demo user vs full user, how many people beat level 3 on their first try, etc), and just want to automate the asking, Google Analytics also has a swanky \u003ca href\u003d\"http://code.google.com/apis/analytics/docs/gdata/home.html\"\u003edata export API\u003c/a\u003e, with \u003ca href\u003d\"http://code.google.com/apis/analytics/docs/gdata/gdataLibraries.html\"\u003eclient libraries\u003c/a\u003e to facilitate the querying of your data in Java, Python, JavaScript, and C#.\u003c/p\u003e\u003ch3\u003eAbiding by the TOS\u003c/h3\u003e\u003cp\u003eGoogle Analytics comes with its own \u003ca href\u003d\"http://www.google.com/analytics/tos.html\"\u003eTOS\u003c/a\u003e, and itâ€™s important to read and abide by it.  The important bit, especially since this will be used inside Android applications, is that you \u003cstrong\u003ecannot send personally identifying information\u003c/strong\u003e to Analytics servers.  This is a big deal.  It means, for instance, that a visitor-level custom variable cannot contain a phone number, first name, or email address.  Less intuitively, but still important, it means that if this application is a client to a web application (say, CRM software or a shopping site), you also cannot store information in Analytics which can be combined with your own backend software to identify the user, such as user ID or a transaction ID identical to the one stored on your web backend.\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-6791787813571156746?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dHFtm9SN5Oss:Q3DFidhZUBQ:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dHFtm9SN5Oss:Q3DFidhZUBQ:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003dHFtm9SN5Oss:Q3DFidhZUBQ:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/HFtm9SN5Oss\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"18012391610902179339"},{"userId":"11612649584011442359"},{"userId":"03552833013083248876"},{"userId":"18119811097128389217"},{"userId":"10054106539899372378"},{"userId":"00482552954856396633"},{"userId":"11624566267464550211"},{"userId":"13702574774112915618"},{"userId":"08015523313658160569"},{"userId":"00294112008842397963"},{"userId":"04576282046737218176"},{"userId":"09238653987182460472"},{"userId":"17905618791332783611"},{"userId":"03782332022124745973"
},{"userId":"18401255483127615305"},{"userId":"13080846433475106520"},{"userId":"10071513426413084146"},{"userId":"05170551104564550926"},{"userId":"11733485919480935644"},{"userId":"11610095653180947506"},{"userId":"18389745378117804959"},{"userId":"17669445519297280524"},{"userId":"00495778129693025490"},{"userId":"06461488888678539743"},{"userId":"17143658295997411148"},{"userId":"13043744024677688902"},{"userId":"17445159381967870315"},{"userId":"09018500881417635014"},{"userId":"18223438983460470521"
},{"userId":"15119679607770460213"},{"userId":"04921595388836482081"},{"userId":"14728690862436236450"},{"userId":"03873512692807339240"},{"userId":"16838919667548345589"},{"userId":"08854659178715462472"},{"userId":"10739965437509563238"},{"userId":"17535725116474393634"},{"userId":"06220307273217246553"},{"userId":"02531670696913349373"},{"userId":"01014446539998601099"},{"userId":"09318702010703989872"},{"userId":"11943075464925292908"},{"userId":"09786846393768371219"},{"userId":"02666374124691296395"
},{"userId":"03647295969831490601"},{"userId":"01078909911975297443"},{"userId":"07855810646520008013"},{"userId":"11929666565872477042"},{"userId":"00107253116706991616"},{"userId":"00986143265412994466"},{"userId":"02292542562457090493"},{"userId":"07963296814341172679"},{"userId":"17839273362508023430"},{"userId":"17618782820034880795"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu","title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"
}},{"isReadStateLocked":true,"crawlTimeMsec":"1292261557932","id":"tag:google.com,2005:reader/item/7a7d1b5d6ad8e6ba","categories":["user/06278703451334277493/state/com.google/read"],"title":"New Gingerbread API: StrictMode","published":1292223720,"updated":1292261301,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/aUYFpwOj5TU/new-gingerbread-api-strictmode.html","type":"text/html"}],"content":{"direction":"ltr","content":"\u003ca href\u003d\"http://3.bp.blogspot.com/_GTM_W5mVPTU/TQXOK0eQZOI/AAAAAAAAAPM/KQVEh877FUk/s1600/bradfitz.png\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;float:right;margin:0 0 10px 10px;width:184px;height:226px\" src\u003d\"http://3.bp.blogspot.com/_GTM_W5mVPTU/TQXOK0eQZOI/AAAAAAAAAPM/KQVEh877FUk/s400/bradfitz.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003e\u003ci\u003e[This post is by \u003ca href\u003d\"http://bradfitz.com/\"\u003eBrad Fitzpatrick\u003c/a\u003e, an Android Software Engineer who worries unreasonably about responsiveness.Â â€”Tim Bray]\u003c/i\u003e\u003c/p\u003e\u003ch3\u003eBack Story\u003c/h3\u003e\u003cp\u003eOne great thing about Google is â€œ20% timeâ€: spending 20% of your time working on projects outside your main focus area.  When I joined Google, I bounced all over the place, often joking that I had seven 20% projects.  One project I kept coming back to was Android.  I loved its open nature, giving me access to do whatever I wanted, including opening my garage door when I approached my house on my motorcycle.  I really wanted it to succeed but I worried about one thing:  It wasnâ€™t always super smooth.  Animations would sometimes stutter and UI elements werenâ€™t always immediately responsive to input.  It was pretty obvious that things were sometimes happening on the wrong thread.\u003c/p\u003e\u003cp\u003eAs a heavy SMS user, one of my 20% projects during the Cupcake (Android 1.5) release was speeding up the Messaging app and making it feel smoother.  I got the app to a happy state and then continued bouncing between other 20% projects.  When the Donut (Android 1.6) release came out, I noticed that a few of my Messaging optimizations had been accidentally broken.  I was sad for a bit but then I realized what Android really needed was always-on, built-in, pervasive performance monitoring.\u003c/p\u003e\u003cp\u003eI joined the Android team full-time just over a year ago and spent a lot of time investigating Froyo performance issues, in particular debugging \u003ca href\u003d\"http://developer.android.com/guide/practices/design/responsiveness.html\"\u003eANRs\u003c/a\u003e (those annoying dialogs you get when an application stalls its main threadâ€™s \u003ca href\u003d\"http://developer.android.com/reference/android/os/Looper.html\"\u003eLooper\u003c/a\u003e).  Debugging ANRs with the tools at hand was painful and boring.  There wasnâ€™t enough instrumentation to find the causes, especially when multiple processes were involved (doing \u003ca href\u003d\"http://developer.android.com/reference/android/os/Binder.html\"\u003eBinder\u003c/a\u003e or \u003ca href\u003d\"http://developer.android.com/reference/android/content/ContentResolver.html\"\u003eContentResolver\u003c/a\u003e operations to \u003ca href\u003d\"http://developer.android.com/reference/android/app/Service.html\"\u003eServices\u003c/a\u003e or \u003ca href\u003d\"http://developer.android.com/reference/android/content/ContentProvider.html\"\u003eContentProviders\u003c/a\u003e in other processes).  There had to be a better way to track down latency hiccups and ANRs...\u003c/p\u003e\u003ch3\u003eEnter StrictMode\u003c/h3\u003e\u003ca href\u003d\"http://3.bp.blogspot.com/_GTM_W5mVPTU/TQXMWee-tdI/AAAAAAAAAPE/txz_87_Zqbs/s1600/strictdroid.png\"\u003e\u003cimg style\u003d\"display:block;margin:0px auto 10px;text-align:center;width:358px;height:400px\" src\u003d\"http://3.bp.blogspot.com/_GTM_W5mVPTU/TQXMWee-tdI/AAAAAAAAAPE/txz_87_Zqbs/s400/strictdroid.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cdiv style\u003d\"text-align:center\"\u003e\u003cp\u003eâ€œI see you were doing 120 ms in a 16 ms zone...â€\u003c/p\u003e\u003c/div\u003e\u003cp\u003eStrictMode is a new API in Gingerbread which primarily lets you set a \u003ca href\u003d\"http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.html\"\u003epolicy on a thread\u003c/a\u003e declaring what youâ€™re not allowed to do on that thread, and what the penalty is if you violate the policy.  Implementation-wise, this policy is simply a thread-local integer bitmask.\u003c/p\u003e\u003cp\u003eBy default everything is allowed and it wonâ€™t get in your way unless you want it to.  The flags you can enable in the thread policy include:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cp\u003edetect disk writes\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003edetect disk reads\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003edetect network usage\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eon a violation: log\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eon a violation: crash\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eon a violation: dropbox\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eon a violation: show an annoying dialog\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eIn addition, StrictMode has about a dozen hooks around most of the places that hit the disk (in \u003ccode\u003ejava.io.*\u003c/code\u003e, \u003ccode\u003eandroid.database.sqlite.*\u003c/code\u003e, etc) and network (\u003ccode\u003ejava.net.*\u003c/code\u003e) which check the current threadâ€™s policy, reacting as youâ€™ve asked.\u003c/p\u003e\u003cp\u003eStrictModeâ€™s powerful part is that the per-thread policies are propagated whenever \u003ca href\u003d\"http://developer.android.com/reference/android/os/Binder.html\"\u003eBinder\u003c/a\u003e IPC calls are made to other Services or Providers, and stack traces are stitched together across any number of processes.\u003c/p\u003e\u003ch3\u003eNobody wants to be slow\u003c/h3\u003e\u003cp\u003eYou might know all the places where your app does disk I/O, but do you know all the places where the system services and providers do?  I donâ€™t.  Iâ€™m learning, but itâ€™s a lot of code.  Weâ€™re continually working to clarify performance implications in the SDK docs, but I usually rely on StrictMode to help catch calls that inadvertently hit the disk.\u003c/p\u003e\u003ch3\u003eBackground on disks on phones\u003c/h3\u003e\u003cp\u003eWait, whatâ€™s wrong with hitting the disk?  Android devices are all running flash memory, right?  Thatâ€™s like a super-fast SSD with no moving parts?  I shouldnâ€™t have to care?  Unfortunately, you do.\u003c/p\u003e\u003cp\u003eYou canâ€™t depend on the flash components or filesystems used in most Android devices to be consistently fast.  The YAFFS filesystem used on many Android devices, for instance, has a global lock around all its operations.  Only one disk operation can be in-flight across the entire device.  Even a simple â€œstatâ€ operation can take quite a while if you are unlucky.  Other devices with more traditional block device-based filesystems still occasionally suffer when the block rotation layer decides to garbage collect and do some slow internal flash erase operations.  (For some good geeky background reading, see \u003ca href\u003d\"http://lwn.net/Articles/353411/\"\u003elwn.net/Articles/353411\u003c/a\u003e)\u003c/p\u003e\u003cp\u003eThe take-away is that the â€œdiskâ€ (or filesystem) on mobile devices is usually fast, but the 90th percentile latencies are often quite poor.  Also, most filesystems slow down quite a bit as they get more full.  (See slides from Google I/O Zippy Android apps talk, linked off \u003ca href\u003d\"http://code.google.com/p/zippy-android/\"\u003ecode.google.com/p/zippy-android\u003c/a\u003e)\u003c/p\u003e\u003ch3\u003eThe â€œmainâ€ Thread\u003c/h3\u003e\u003cp\u003eAndroid callbacks and lifecycle events all \u003ca href\u003d\"http://developer.android.com/guide/topics/fundamentals.html#procthread\"\u003etypically happen on the main thread\u003c/a\u003e (aka â€œUI threadâ€).  This makes life easier most of the time, but itâ€™s also something you need to be careful of because all animations, scrolls, and flings process their animations by callbacks on the main thread.\u003c/p\u003e\u003cp\u003eIf you want to run an animation at 60 fps and an input event comes in (also on the main thread), you have 16 ms to run your code reacting to that input event.  If you take longer than 16 ms, perhaps by writing to disk, youâ€™ve now stuttered your animation.  Disk reads are often better, but they can also take longer than 16 ms, especially on YAFFS if youâ€™re waiting for the filesystem lock thatâ€™s held by a process in the middle of a write.\u003c/p\u003e\u003cp\u003eThe network is especially slow and inconsistent, so you should never do network requests on your main thread.  In fact, in the upcoming Honeycomb release weâ€™ve made network requests on the main thread a fatal error, unless your app is targeting an API version before Honeycomb.  So if you want to get ready for the Honeycomb SDK, make sure youâ€™re never doing network requests on your UI thread.  (see â€œTips on being smoothâ€ below.)\u003c/p\u003e\u003ch3\u003eEnabling StrictMode\u003c/h3\u003e\u003cp\u003eThe recommended way to use StrictMode is to turn it on during development, learn from it, and turn it off before you ship your app.\u003c/p\u003e\u003cp\u003eFor example, in your application or componentâ€™s \u003ccode\u003eonCreate()\u003c/code\u003e:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e public void onCreate() {\n     if (DEVELOPER_MODE) {\n         StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()\n                 .detectDiskReads()\n                 .detectDiskWrites()\n                 .detectNetwork()\n                 .penaltyLog()\n                 .build());\n     }\n     super.onCreate();\n }\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOr, simply:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e    public void onCreate() {\n     if (DEVELOPER_MODE) {\n         StrictMode.enableDefaults();\n     }\n     super.onCreate();\n }\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThat latter form was specifically added so you can target pre-Gingerbread API versions but still easily enable StrictMode using reflection or \u003ca href\u003d\"http://android-developers.blogspot.com/2010/07/how-to-have-your-cupcake-and-eat-it-too.html\"\u003eother techniques\u003c/a\u003e.  For instance, you could be targeting Donut (Android 1.6) but still use StrictMode if youâ€™re testing on a Gingerbread device or emulator, as long as you use enough Reflection to call \u003ccode\u003eStrictMode.enableDefaults()\u003c/code\u003e.\u003c/p\u003e\u003ch3\u003eWatching StrictMode\u003c/h3\u003e\u003cp\u003eIf youâ€™re using \u003ccode\u003epenaltyLog()\u003c/code\u003e, the default, just run \u003ccode\u003eadb logcat\u003c/code\u003e and watch the terminal output.  Any violations will be logged to your console, slightly rate-limited for duplicate elimination.\u003c/p\u003e\u003cp\u003eIf you want to get fancier, turn on \u003ccode\u003epenaltyDropbox()\u003c/code\u003e and theyâ€™ll be written to the DropBoxManager, where you can extract them later with\u003cbr\u003e\u003ccode\u003eadb shell dumpsys dropbox data_app_strictmode --print\u003c/code\u003e\u003c/p\u003e\u003ch3\u003eTips on being smooth\u003c/h3\u003e\u003cp\u003eIn addition to \u003ca href\u003d\"http://developer.android.com/reference/java/lang/Thread.html\"\u003eThread\u003c/a\u003e and \u003ca href\u003d\"http://developer.android.com/reference/java/util/concurrent/package-summary.html\"\u003ejava.util.concurrent.*\u003c/a\u003e, check out some of the Android APIs such as \u003ca href\u003d\"http://developer.android.com/reference/android/os/Handler.html\"\u003eHandler\u003c/a\u003e, \u003ca href\u003d\"http://developer.android.com/reference/android/os/AsyncTask.html\"\u003eAsyncTask\u003c/a\u003e, \u003ca href\u003d\"http://developer.android.com/reference/android/content/AsyncQueryHandler.html\"\u003eAsyncQueryHandler\u003c/a\u003e, and \u003ca href\u003d\"http://developer.android.com/reference/android/app/IntentService.html\"\u003eIntentService\u003c/a\u003e.\u003c/p\u003e\u003ch3\u003eOur Experience\u003c/h3\u003e\u003cp\u003eDuring Android development we have a new â€œdogfoodâ€ build each day that the whole team uses.  Throughout the development of Gingerbread we set up our daily dogfood builds to enable StrictMode logging and upload all found violations for analysis.  Every hour a MapReduce job runs and produces an interactive report of all the event loop stalls, their stack traces (including cross-process ones), their latency percentiles, which processes/packages they appear in, etc.\u003c/p\u003e\u003cp\u003eUsing the data from StrictMode we fixed hundreds of responsiveness bugs and animation glitches all across the board.  We made performance optimizations in the Android core (e.g. system services and providers) so all apps on the system will benefit, as well as fixing up tons of app-specific issues (in both \u003ca href\u003d\"http://source.android.com/\"\u003eAOSP\u003c/a\u003e apps and Google apps).  Even if youâ€™re using Froyo today, the recent updates to GMail, Google Maps, and YouTube all benefited from StrictMode data collection gathered on Gingerbread devices.\u003c/p\u003e\u003cp\u003eWhere we couldnâ€™t automatically speed up the system, we instead added APIs to make certain patterns easier to do efficiently.  For example, there is a new method \u003ca href\u003d\"http://developer.android.com/reference/android/content/SharedPreferences.Editor.html#apply()\"\u003eSharedPreferences.Editor.apply()\u003c/a\u003e, which you should be using instead of \u003ccode\u003ecommit()\u003c/code\u003e if you donâ€™t need \u003ccode\u003ecommit()\u003c/code\u003eâ€™s return value.  (It turns out almost nobody ever checks it.)  You can even use reflection to \u003ca href\u003d\"http://code.google.com/p/zippy-android/source/browse/trunk/examples/SharedPreferencesCompat.java\"\u003econditionally use \u003ccode\u003eapply()\u003c/code\u003e vs. \u003ccode\u003ecommit()\u003c/code\u003e\u003c/a\u003e depending on the userâ€™s platform version.\u003c/p\u003e\u003cp\u003eGooglers who switched from Froyo to Gingerbread without seeing all the baby steps between were shocked at how much more responsive the system became.  Our friends on the Chrome team then recently \u003ca href\u003d\"http://neugierig.org/software/chromium/notes/2010/11/thread-restrictions.html\"\u003eadded something similar\u003c/a\u003e.  Of course, StrictMode canâ€™t take all the credit.  The new concurrent garbage collector in Gingerbread also greatly reduces latency hiccups.\u003c/p\u003e\u003ch3\u003eThe Future\u003c/h3\u003e\u003cp\u003eThe StrictMode API and its capabilities will continue to expand.  We have some good stuff lined up for StrictMode in Honeycomb but let us know what else youâ€™d like to see!  Iâ€™ll be answering questions on \u003ca href\u003d\"http://stackoverflow.com\"\u003estackoverflow.com\u003c/a\u003e for questions tagged â€œstrictmodeâ€.  Thanks!\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-2614714514350344287?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003daUYFpwOj5TU:8j3LVc0Ahys:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003daUYFpwOj5TU:8j3LVc0Ahys:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003daUYFpwOj5TU:8j3LVc0Ahys:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/aUYFpwOj5TU\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"09879977286868249236"},{"userId":"18012391610902179339"},{"userId":"05776663229552361032"},{"userId":"11612649584011442359"},{"userId":"17780394325789406450"},{"userId":"17152272935844587165"},{"userId":"03552833013083248876"},{"userId":"14106121256890804583"},{"userId":"09216550340110865425"},{"userId":"08828493571000760702"},{"userId":"03560200052926293134"},{"userId":"16745487981723953095"},{"userId":"15552792864887276399"},{"userId":"10912222832187846674"
},{"userId":"17622079882327619091"},{"userId":"00482552954856396633"},{"userId":"07459412189161288922"},{"userId":"14263662317676937675"},{"userId":"16457481057757858296"},{"userId":"17775666386044392488"},{"userId":"04576282046737218176"},{"userId":"01696704101021405305"},{"userId":"09238653987182460472"},{"userId":"00285525823836440842"},{"userId":"13879907331045762769"},{"userId":"02616507929159206983"},{"userId":"04432100925276176071"},{"userId":"04393173737596822805"},{"userId":"12675574226839505552"
},{"userId":"17028476595848419075"},{"userId":"12036414728214257055"},{"userId":"18401255483127615305"},{"userId":"01320433584539212870"},{"userId":"12912579156415481593"},{"userId":"01059345005528369405"},{"userId":"05170551104564550926"},{"userId":"02129489694251017039"},{"userId":"08197949320497128466"},{"userId":"17669445519297280524"},{"userId":"15316723648533920038"},{"userId":"14234073328316582616"},{"userId":"02345579413163193966"},{"userId":"10501797938225882219"},{"userId":"07607191457032118444"
},{"userId":"08937443776570817999"},{"userId":"15007176934711221993"},{"userId":"15119679607770460213"},{"userId":"12733250356068973250"},{"userId":"07585571004934482625"},{"userId":"14728690862436236450"},{"userId":"05638506168816263124"},{"userId":"00893676272680372452"},{"userId":"00146495129263139546"},{"userId":"01347798728151251221"},{"userId":"14773054277985573150"},{"userId":"02978694593234869704"},{"userId":"09318702010703989872"},{"userId":"04147569475913416215"},{"userId":"14573284528657668414"
},{"userId":"06608189238978444520"},{"userId":"02666374124691296395"},{"userId":"18356548388003333905"},{"userId":"06322551553253102976"},{"userId":"03647295969831490601"},{"userId":"01078909911975297443"},{"userId":"10007038248327355005"},{"userId":"05645994962277945339"},{"userId":"07930382363251061142"},{"userId":"01016111639051436880"},{"userId":"00320933387269203904"},{"userId":"15251129649167826718"},{"userId":"11264321125198431179"},{"userId":"17618782820034880795"},{"userId":"07056440055143245177"
}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu","title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"}},{"isReadStateLocked":true,"crawlTimeMsec":"1292041128601","id":"tag:google.com,2005:reader/item/8749cb5240e97d09","categories":["user/06278703451334277493/state/com.google/read"],"title":"Android Market Client Update","published":1292033280,"updated":1292348858,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/rwosF1uahI4/android-market-client-update.html",
"type":"text/html"}],"content":{"direction":"ltr","content":"\u003cp\u003e\u003cspan style\u003d\"font-style:italic\"\u003e[This post is by Eric Chu, Android Developer Ecosystem. â€”Dirk Dougherty]\u003c/span\u003e\u003c/p\u003e\u003cp\u003eThe Android Market engineering team has been hard at work on improving the Android Market experience for users and developers. Today, Iâ€™m pleased to announce a significant update to the Android Market client. Over the next two weeks, weâ€™ll be rolling out a new Android Market client to all devices running Android 1.6 or higher.\u003c/p\u003e\u003cp\u003eThis new Market client introduces important features that improve merchandising of applications, streamline the browse-to-purchase experience, and make it easier for developers to distribute their applications.\u003c/p\u003e\u003cp\u003eWith a focus on improving discoverability and merchandising, weâ€™ve introduced a new carousel on the home and category screens. Users can quickly flip through the carousel to view promoted applications and immediately go to the download page for the application they want. Developers have been very active in creating great Widgets and Live Wallpapers. To make it easier for users to find their favorites, weâ€™re introducing two new categories for Widgets and Live Wallpapers. Applications that include Widgets and Wallpapers will be automatically added to those new categories. Weâ€™ll also be adding more categories for popular applications and games in the weeks ahead. In addition, the app details page now includes Related content, which makes it easier for users to quickly find apps of similar interest.\u003c/p\u003e\u003cdiv style\u003d\"text-align:center\"\u003e\u003ca href\u003d\"http://4.bp.blogspot.com/_Mm75bF7VYrE/TQesdYkRV-I/AAAAAAAAABU/9tvph0Zo_pg/s1600/market-home.png\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;width:253px;height:400px\" src\u003d\"http://4.bp.blogspot.com/_Mm75bF7VYrE/TQesdYkRV-I/AAAAAAAAABU/9tvph0Zo_pg/s400/market-home.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003c/div\u003e\u003cbr\u003e\n\n\u003cp\u003eTo streamline the browse-to-purchase experience, users can now access all the information about an application on a single page without the need to navigate across different tabs.  Weâ€™re also introducing application content rating to provide users with more information about applications they are interested in.  Since most users who request a refund do so within minutes of purchase, we will reduce the refund window on Market to 15 minutes. This change will be largely transparent to buyers, but will help developers manage their businesses more effectively.\u003c/p\u003e\u003cdiv style\u003d\"text-align:center\"\u003e\u003ca href\u003d\"http://4.bp.blogspot.com/_Mm75bF7VYrE/TQLxX9U8CFI/AAAAAAAAABM/i-y0vqtUz3w/s1600/market-details%2B%25281%2529.png\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;width:253px;height:400px\" src\u003d\"http://4.bp.blogspot.com/_Mm75bF7VYrE/TQLxX9U8CFI/AAAAAAAAABM/i-y0vqtUz3w/s400/market-details%2B%25281%2529.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cp\u003eTo make it easier for developers to distribute and manage their products, we will introduce support for device targeting based on screen sizes and densities, as well as on GL texture compression formats. We are also increasing the maximum size for .apk files on Market to 50MB, to better support richer games.\u003c/p\u003e\u003cp\u003eWith this release, we aimed to deliver features that are most requested by users and developers.  However, weâ€™re not done yet.  We plan to continue to rapidly enhance Android Market for both users and developers and make it the best content distribution service for the Android ecosystem.\u003c/p\u003e\u003cp\u003ePlease stay tuned as we continue to deliver new capabilities in the coming weeks and months.\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-3284834062646436607?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003drwosF1uahI4:YpMl27uvUgs:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003drwosF1uahI4:YpMl27uvUgs:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003drwosF1uahI4:YpMl27uvUgs:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/rwosF1uahI4\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Dirk Dougherty","likingUsers":[{"userId":"02229757710438706599"},{"userId":"09879977286868249236"},{"userId":"06823531160344383153"},{"userId":"08809661958864809391"},{"userId":"16712154826025604224"},{"userId":"11023500412719935781"},{"userId":"02662677875167709787"},{"userId":"12029585750162886972"},{"userId":"09273765339304887311"},{"userId":"11612649584011442359"},{"userId":"11298845051441482967"},{"userId":"13195080000100454228"},{"userId":"07010341635866792108"},{"userId":"02032500995098633626"
},{"userId":"05563924790028363141"},{"userId":"17572401968890039075"},{"userId":"08399466049010567489"},{"userId":"09851787813836514669"},{"userId":"15417947548844622119"},{"userId":"09866344778777127341"},{"userId":"04797873954361954103"},{"userId":"08728771845022634617"},{"userId":"08755524668035128005"},{"userId":"13050191327282990962"},{"userId":"05109728855050309257"},{"userId":"10373537159486665528"},{"userId":"09283792997547075900"},{"userId":"07891735105269286226"},{"userId":"02315119429981412733"
},{"userId":"10319847606979801919"},{"userId":"07246945493338297783"},{"userId":"00934664277410042978"},{"userId":"17061338019488065760"},{"userId":"01715995076374810316"},{"userId":"03560200052926293134"},{"userId":"03095175285957696080"},{"userId":"10013414058620475056"},{"userId":"13561922100851511874"},{"userId":"06313895731216105929"},{"userId":"12171841849949592085"},{"userId":"14611706088965102899"},{"userId":"16747867458140726146"},{"userId":"08965672400647455705"},{"userId":"00334306902787369801"
},{"userId":"05359724857043586056"},{"userId":"04943706566864599547"},{"userId":"02103864680157236255"},{"userId":"07803955114778986351"},{"userId":"12072409110489410975"},{"userId":"01000831377675282146"},{"userId":"14041616475704093119"},{"userId":"04417379443516009981"},{"userId":"09802040387755365544"},{"userId":"09868192080818709109"},{"userId":"09151245808942846572"},{"userId":"05438472752954509767"},{"userId":"09362234092358820597"},{"userId":"04898490635154798155"},{"userId":"09739728846279337826"
},{"userId":"11999178884850448485"},{"userId":"08653309641043028387"},{"userId":"06966721798470613809"},{"userId":"17358354603511616589"},{"userId":"06706649562866351151"},{"userId":"07925881488259500906"},{"userId":"17237582765075999750"},{"userId":"14975065172879228702"},{"userId":"12841490245962154731"},{"userId":"03486586838770820273"},{"userId":"12756098708232125774"},{"userId":"04587850349777023314"},{"userId":"10207475781962677500"},{"userId":"17905618791332783611"},{"userId":"08051083926767734436"
},{"userId":"13236389836239072361"},{"userId":"15698436166185553721"},{"userId":"08828136294948450549"},{"userId":"09861010378999536985"},{"userId":"01116792342059265388"},{"userId":"13176047145478140954"},{"userId":"02661863721937411873"},{"userId":"01191703423907866105"},{"userId":"16907365230842891790"},{"userId":"09256091717570018040"},{"userId":"04157154194736025046"},{"userId":"10025503703273862759"},{"userId":"01748422027894747721"},{"userId":"01680425984639677310"},{"userId":"14240853069860674553"
},{"userId":"08049736263032724582"},{"userId":"03155948554831760520"},{"userId":"11529689417426855922"},{"userId":"03741828604569098592"},{"userId":"16839103350854257905"},{"userId":"03782332022124745973"},{"userId":"00863796485469340618"},{"userId":"13796248972363174923"},{"userId":"08284689541917620000"},{"userId":"15555881987074499246"},{"userId":"01358081364816786190"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu","title":"Android Developers Blog",
"htmlUrl":"http://android-developers.blogspot.com/"}},{"isReadStateLocked":true,"crawlTimeMsec":"1291931471842","id":"tag:google.com,2005:reader/item/6be7606033775699","categories":["user/06278703451334277493/state/com.google/read"],"title":"Saving Data Safely","published":1291921860,"updated":1291932821,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/YIW11OFyRTs/saving-data-safely.html","type":"text/html"}],"content":{"direction":"ltr","content":"\u003cp\u003eWith the advent of Gingerbread, weâ€™re going to be running a series of posts in this space about the aspects of Android 2.3 that developers should care about.  One thing that developers should care about more than anything else is not losing data.  The rules are changing slightly as Gingerbread arrives, so I thought that would be a good starting point.  I didnâ€™t write this; I pulled it together from the contents of an email thread involving Android engineers Brad Fitzpatrick, Dianne Hackborn, Brian Swetland, and Chris Tate.\u003c/p\u003e\u003ca href\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TQEqll0TmHI/AAAAAAAAAO0/Rx8Fh0xVvtw/s1600/PS081401.jpg\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;float:right;margin:0 0 10px 10px;width:320px;height:289px\" src\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TQEqll0TmHI/AAAAAAAAAO0/Rx8Fh0xVvtw/s320/PS081401.jpg\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003eThe question is: how do you make really sure your dataâ€™s been written to persistent storage?  The answer involves a low-level system call named \u003ccode\u003efsync()\u003c/code\u003e.  Old C programmers like me mostly learned this the hard way back in the Bad Old Days; in 2008 at OSCON I immensely enjoyed \u003ca href\u003d\"http://www.tbray.org/ongoing/When/200x/2008/07/27/OSCON-Pix#p-2\"\u003eEat My Data: How Everybody Gets File IO Wrong\u003c/a\u003e by Stewart Smith; I've included a picture I took of one of his slides.\u003c/p\u003e\u003cp\u003eThe reason this should be of concern to Android developers is that with 2.3, an increasing proportion of devices, notably including the Nexus S, are going to be moving from \u003ca href\u003d\"http://www.yaffs.net/\"\u003eYAFFS\u003c/a\u003e to the \u003ca href\u003d\"http://en.wikipedia.org/wiki/Ext4\"\u003eext4 filesystem\u003c/a\u003e, which buffers much more aggressively; thus you need to be more assertive about making sure your data gets to permanent storage when you want it to.\u003c/p\u003e\u003cp\u003eIf you just use \u003ca href\u003d\"http://developer.android.com/reference/android/content/SharedPreferences.html\"\u003eSharedPreferences\u003c/a\u003e or \u003ca href\u003d\"http://developer.android.com/reference/android/database/sqlite/SQLiteDatabase.html\"\u003eSQLite\u003c/a\u003e, you can relax, because weâ€™ve made sure they Do The Right Thing about buffering.  But if you have your own on-disk format, keep in mind that your data doesn't actually consistently reach the flash chip when you \u003ccode\u003ewrite()\u003c/code\u003e it or even when you \u003ccode\u003eclose()\u003c/code\u003e it.  There are several layers of buffering between you and the hardware!  And because of ext4 buffering policy, any POSIX guarantees that you thought you had before (but actually didn't), you especially don't have now.\u003c/p\u003e\u003cp\u003eSome Android devices are already running non-YAFFS filesystems, but as we brought up the Nexus S, buffering issues have actually bitten us a couple of times in framework code.  When the Gingerbread source code becomes available, youâ€™ll find lots of examples of how file I/O should be done.\u003c/p\u003e\u003cp\u003eTo start with, for raw data consider using one of the synchronous modes of \u003ccode\u003ejava.io.RandomAccessFile\u003c/code\u003e, which take care of calling \u003ccode\u003efsync()\u003c/code\u003e for you in the appropriate way.  If you canâ€™t, youâ€™ll want Java code that looks something like this.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e     public static boolean sync(FileOutputStream stream) {\n         try {\n             if (stream !\u003d null) {\n                 stream.getFD().sync();\n             }\n             return true;\n         } catch (IOException e) {\n         }\n         return false;\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn some applications, you might even want to check the return status of the \u003ccode\u003eclose()\u003c/code\u003e call.\u003c/p\u003e\u003cp\u003eNow of course, there are two sides to this story.  When you call \u003ccode\u003efsync()\u003c/code\u003e and force the data onto storage, that can be slow; worse, unpredictably slow.  So be sure to call it when you need it, but be careful not to call it carelessly.\u003c/p\u003e\u003cp\u003eBackground reading if you want to know more:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cp\u003e\u003ca href\u003d\"http://lwn.net/Articles/322823/\"\u003eext4 and data loss\u003c/a\u003e by Jonathan Corbet.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003e\u003ca href\u003d\"http://blogs.gnome.org/alexl/2009/03/16/ext4-vs-fsync-my-take/\"\u003eext4 vs fsync, my take\u003c/a\u003e by Alexander Larsson.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003e\u003ca href\u003d\"http://thunk.org/tytso/blog/2009/03/15/dont-fear-the-fsync/\"\u003eDonâ€™t fear the fsync!\u003c/a\u003e by Ted Tsâ€™o.\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-3784314236365081641?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dYIW11OFyRTs:PDJG_kTp6Ls:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dYIW11OFyRTs:PDJG_kTp6Ls:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003dYIW11OFyRTs:PDJG_kTp6Ls:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/YIW11OFyRTs\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"03724865596443184208"},{"userId":"07941501893233493325"},{"userId":"07818666226442824659"},{"userId":"17569337725600040336"},{"userId":"12530014656727033485"},{"userId":"04576282046737218176"},{"userId":"13457246262039636256"},{"userId":"11673482026151256729"},{"userId":"15316723648533920038"},{"userId":"14234073328316582616"},{"userId":"02345579413163193966"},{"userId":"06325346313997665518"},{"userId":"01489060580275119364"},{"userId":"13440859927054719372"
},{"userId":"10739965437509563238"},{"userId":"17535725116474393634"},{"userId":"14773054277985573150"},{"userId":"07789580079194047804"},{"userId":"17126309482888334237"},{"userId":"07623301555818180058"},{"userId":"02666374124691296395"},{"userId":"06322551553253102976"},{"userId":"01078909911975297443"},{"userId":"03434649020729933420"},{"userId":"00320933387269203904"},{"userId":"17618782820034880795"},{"userId":"07056440055143245177"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu",
"title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"}},{"isReadStateLocked":true,"crawlTimeMsec":"1291652199489","id":"tag:google.com,2005:reader/item/3abaa8ba0b95cb44","categories":["user/06278703451334277493/state/com.google/read","SDK updates","NDK","Announcements","Android 2.3"],"title":"Android 2.3 Platform and Updated SDK Tools","published":1291651200,"updated":1291651215,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/8whPegEn0og/android-23-platform-and-updated-sdk.html",
"type":"text/html"}],"content":{"direction":"ltr","content":"\u003cp\u003e\u003cimg style\u003d\"margin:0pt 10px 10px 0pt;float:right;width:250px;height:250px\" src\u003d\"http://3.bp.blogspot.com/_kNUIczJH1OM/TPWnTpPpv-I/AAAAAAAAABc/KS-JDa4RcUI/s1600/gingerdroid.png\" alt\u003d\"\" border\u003d\"0\"\u003eToday we're announcing a new version of the Android platform â€” Android 2.3 (Gingerbread).  It includes many new platform technologies and APIs to help developers create great apps. Some of the highlights include:\u003c/p\u003e\u003cdl\u003e\u003cdd\u003e\u003cp\u003e\u003ci\u003eEnhancements for game development:\u003c/i\u003e To improve overall responsiveness, weâ€™ve added a new concurrent garbage collector and optimized the platformâ€™s overall event handling. Weâ€™ve also given developers native access to more parts of the system by exposing a broad set of native APIs.  From native code, applications can now access input and sensor events, EGL/OpenGL ES, OpenSL ES, and assets, as well a new framework for managing lifecycle and windows. For precise motion processing, developers can use several new sensor types, including gyroscope.\u003c/p\u003e\u003cp\u003e\u003ci\u003eRich multimedia:\u003c/i\u003e To provide a great multimedia environment for games and other applications, weâ€™ve added support for the new video formats VP8 and WebM, as well as support for AAC and AMR-wideband encoding. The platform also provides new audio effects such as reverb, equalization, headphone virtualization, and bass boost.\u003c/p\u003e\u003cp\u003e\u003ci\u003eNew forms of communication:\u003c/i\u003e The platform now includes support for front-facing camera, SIP/VOIP, and Near Field Communications (NFC), to let developers include new capabilities in their applications.\u003c/p\u003e\u003c/dd\u003e\u003c/dl\u003e\u003cp\u003eFor a complete overview of whatâ€™s new in the platform, see the \u003ca href\u003d\"http://developer.android.com/sdk/android-2.3-highlights.html\" title\u003d\"Android 2.3 Platform Highlights\"\u003eAndroid 2.3 Platform Highlights\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eAlongside the new platform, we are releasing updates to the SDK Tools (r8), NDK, and ADT Plugin for Eclipse (8.0.0). New features include:\u003c/p\u003e\u003cdl\u003e\u003cdd\u003e\u003cp\u003e\u003ci\u003eSimplified debug builds:\u003c/i\u003e Developers can easily generate debug packages without having to manually configure the applicationâ€™s manifest, making workflow more efficient.\u003c/p\u003e\u003cp\u003e\u003ci\u003eIntegrated ProGuard support:\u003c/i\u003e ProGuard is now packaged with the SDK Tools. Developers can now obfuscate their code as an integrated part of a release build.\u003c/p\u003e\u003cp\u003e\u003ci\u003eHierarchyViewer improvements:\u003c/i\u003e The HierarchyViewer tool includes an updated UI and is now accessible directly from the ADT Plugin.\u003c/p\u003e\u003cp\u003e\u003ci\u003ePreview of new UI Builder:\u003c/i\u003e An early release of a new visual layout editor lets developers create layouts in ADT by dragging and dropping UI elements from contextual menus. Itâ€™s a work in progress and we intend to iterate quickly on it.\u003c/p\u003e\u003c/dd\u003e\u003c/dl\u003e\u003cp\u003eTo get started developing or testing applications on Android 2.3, visit the \u003ca href\u003d\"http://developer.android.com/sdk/index.html\"\u003eAndroid Developers\u003c/a\u003e site for information about the \u003ca href\u003d\"http://developer.android.com/sdk/android-2.3.html\"\u003eAndroid 2.3 platform\u003c/a\u003e, the \u003ca href\u003d\"http://developer.android.com/sdk/tools-notes.html\"\u003eSDK Tools\u003c/a\u003e, the \u003ca href\u003d\"http://developer.android.com/sdk/eclipse-adt.html\"\u003eADT Plugin\u003c/a\u003e and the new \u003ca href\u003d\"http://developer.android.com/sdk/ndk/index.html\"\u003eNDK\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eCheck out the video below to learn more about the new developer features in Android 2.3.\u003c/p\u003e\u003cp style\u003d\"text-align:center\"\u003e\u003cembed src\u003d\"http://www.youtube.com/v/Jx3pdWBlZ34?hl\u003den\u0026amp;fs\u003d1\" allowScriptAccess\u003d\"never\" allowFullScreen\u003d\"true\" width\u003d\"425\" height\u003d\"344\" wmode\u003d\"transparent\" type\u003d\"application/x-shockwave-flash\"\u003e\u003c/embed\u003e\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-3893912513016429745?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003d8whPegEn0og:BJ-6VzurOiQ:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003d8whPegEn0og:BJ-6VzurOiQ:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003d8whPegEn0og:BJ-6VzurOiQ:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/8whPegEn0og\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Xavier Ducrohet, Android SDK Tech Lead","likingUsers":[{"userId":"16144462499047017127"},{"userId":"00855529771444401406"},{"userId":"04462732357663317284"},{"userId":"09879977286868249236"},{"userId":"18012391610902179339"},{"userId":"16712154826025604224"},{"userId":"15352533621080216268"},{"userId":"07354163542495141064"},{"userId":"12029585750162886972"},{"userId":"09273765339304887311"},{"userId":"11612649584011442359"},{"userId":"17253860978999850315"},{"userId":"05563924790028363141"
},{"userId":"14134221629152370433"},{"userId":"03552833013083248876"},{"userId":"02619879655386783868"},{"userId":"15178375767870179511"},{"userId":"13367818593606335589"},{"userId":"12370308203600993812"},{"userId":"10308080099198011824"},{"userId":"00596128509145101012"},{"userId":"12042862703912849252"},{"userId":"01679931650849268734"},{"userId":"18119811097128389217"},{"userId":"06644955699489578510"},{"userId":"09307374418358312964"},{"userId":"15596705493341599443"},{"userId":"08755524668035128005"
},{"userId":"13050191327282990962"},{"userId":"00945570796631992260"},{"userId":"09283792997547075900"},{"userId":"18078788385534166172"},{"userId":"04386350011698025794"},{"userId":"07891735105269286226"},{"userId":"05587503669436719741"},{"userId":"03493041153944538076"},{"userId":"10944306714022793753"},{"userId":"13769218911759970686"},{"userId":"12077242049025977874"},{"userId":"03560200052926293134"},{"userId":"16745487981723953095"},{"userId":"12547025008865202083"},{"userId":"07726584911847543443"
},{"userId":"13561922100851511874"},{"userId":"02369758813356849624"},{"userId":"12171841849949592085"},{"userId":"08870165200832833256"},{"userId":"07459412189161288922"},{"userId":"02779865752056393759"},{"userId":"08965613119060697129"},{"userId":"08524701253972069126"},{"userId":"02084447693547121158"},{"userId":"02990100797190772528"},{"userId":"00315366092707267058"},{"userId":"04494742903187459151"},{"userId":"12812889966534611435"},{"userId":"06957171140004480600"},{"userId":"08253176434750914552"
},{"userId":"11307518047772805949"},{"userId":"00552081016051928957"},{"userId":"04467071616083495112"},{"userId":"05438472752954509767"},{"userId":"03434252874252174299"},{"userId":"17428625595800917051"},{"userId":"08451352140543018244"},{"userId":"11334138426629598638"},{"userId":"00483955226357479729"},{"userId":"09238653987182460472"},{"userId":"09225654118110921456"},{"userId":"12756098708232125774"},{"userId":"09556099084421364964"},{"userId":"17905618791332783611"},{"userId":"02246111743761417452"
},{"userId":"11628817751608901929"},{"userId":"18065374396981715505"},{"userId":"00062837486155348148"},{"userId":"09861010378999536985"},{"userId":"01920646072788127173"},{"userId":"01973188930411557121"},{"userId":"08800179504735393631"},{"userId":"16317261186566908594"},{"userId":"03521248375384195876"},{"userId":"01736632618963733370"},{"userId":"11128100954208886351"},{"userId":"16443985918166346941"},{"userId":"08049736263032724582"},{"userId":"02001471827656121768"},{"userId":"03741828604569098592"
},{"userId":"10675948087460774027"},{"userId":"13023156506078712324"},{"userId":"08284689541917620000"},{"userId":"09424548407973986430"},{"userId":"14569715527684753132"},{"userId":"12027455650420045335"},{"userId":"15515527354808735530"},{"userId":"04440550031984313322"},{"userId":"09610023088378860775"},{"userId":"14688675206234278212"},{"userId":"16789165739944472039"},{"userId":"11966186623426337021"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu",
"title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"}},{"isReadStateLocked":true,"crawlTimeMsec":"1290631454377","id":"tag:google.com,2005:reader/item/ec663bccdef1515a","categories":["user/06278703451334277493/state/com.google/read"],"title":"Content Rating for Android Market","published":1290628140,"updated":1290631293,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/l_TBmTJ7AIg/content-rating-for-android-market.html","type":"text/html"}],"content":{
"direction":"ltr","content":"\u003cp\u003e\u003ci\u003e[This post is by Eric Chu, Android Developer Ecosystem. â€”Tim Bray]\u003c/i\u003e\u003c/p\u003e\u003cp\u003eProviding users with more information about applications on Android Market has been a top request from Android users.  Starting in a few weeks, we will be showing content ratings for all applications on Android Market.  This new capability will provide users with additional information to help them select the best applications for them. \u003c/p\u003e\u003cp\u003eAndroid Marketâ€™s content policy remains the same as before: applications will be rated according to four content rating levels: All, Pre-teen, Teen, \u0026amp; Mature.  Details on the rating levels can be found at \u003ca href\u003d\"http://market.android.com/support/bin/answer.py?answer\u003d188189\"\u003eAndroid Market Help Center\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eTo prepare for this launch, starting next week, developers submitting new or updated applications will be required to include a rating for all applications and games uploaded onto Android Market.  In addition, developers will have the next several weeks to add a rating to their existing applications and games.  Once content rating is visible to users, any applications or games that do not include a rating will be treated as â€œMatureâ€.\u003c/p\u003e\u003cp\u003eWe are working hard to rapidly deliver improvements and upgrades to Android Market.  Please look for more Android Market upgrades in the coming weeks.  Thanks for your continued support and please donâ€™t hesitate to \u003ca href\u003d\"http://www.google.com/support/androidmarket/bin/request.py?contact_type\u003dpublisher\"\u003egive us feedback\u003c/a\u003e on what else we can do to make you more successful with Android and Android Market.\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-6520856294633248526?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dl_TBmTJ7AIg:NWGEBN5gUrk:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dl_TBmTJ7AIg:NWGEBN5gUrk:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003dl_TBmTJ7AIg:NWGEBN5gUrk:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/l_TBmTJ7AIg\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"11802011984717789368"},{"userId":"16712154826025604224"},{"userId":"08013557271619170913"},{"userId":"17905618791332783611"},{"userId":"05170551104564550926"},{"userId":"00363647479470519434"},{"userId":"15316723648533920038"},{"userId":"02345579413163193966"},{"userId":"00457755656738069091"},{"userId":"12837138579596688203"},{"userId":"11320963709709929773"},{"userId":"13512475195819426401"},{"userId":"17543352286955354688"},{"userId":"01014446539998601099"
},{"userId":"04605841360574369872"},{"userId":"01008521771678321645"},{"userId":"02666374124691296395"},{"userId":"05731882395173252288"},{"userId":"01078909911975297443"},{"userId":"00107253116706991616"},{"userId":"16743206710109461437"},{"userId":"00320933387269203904"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu","title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"}},{"isReadStateLocked":true,"crawlTimeMsec":"1289517288626",
"id":"tag:google.com,2005:reader/item/5ec7a6d2f42b0cff","categories":["user/06278703451334277493/state/com.google/read"],"title":"Market Housekeeping Alert","published":1289516040,"updated":1289516467,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/xtjJejYb-CY/market-housekeeping-alert.html","type":"text/html"}],"content":{"direction":"ltr","content":"\u003cp\u003eWeâ€™ve had quite a bit of discussion in this space recently about how to make sure that your app is visible in Android Market to any device that can run it, and only to those devices.  In particular, check out two recent pieces by Reto Meier, \u003ca href\u003d\"http://android-developers.blogspot.com/2010/06/future-proofing-your-app.html\"\u003eFuture-Proofing Your App\u003c/a\u003e and \u003ca href\u003d\"http://android-developers.blogspot.com/2010/10/five-steps-to-future-hardware-happiness.html\"\u003eThe Five Steps to Future Hardware Happiness\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eAs Reto points out, Market used to infer some \u003ccode\u003e\u0026lt;uses-feature\u0026gt;\u003c/code\u003e settings for older apps that were uploaded before certain device features arrived.  This hasnâ€™t been the case for applications uploaded since June of this year; developers have had to be careful about \u003ccode\u003e\u0026lt;uses-feature\u0026gt;\u003c/code\u003e and its \u003ccode\u003eandroid:required\u003c/code\u003e attribute.  From what we see, it looks like most of you have got this sorted out and things are working smoothly.\u003c/p\u003e\u003cp\u003eHowever, there are still apps that havenâ€™t been re-uploaded since June.  In preparation for introducing some new Market features (that we think youâ€™ll like), weâ€™re about to launch a re-scan of all those legacy apps, looking at their Android Manifests and updating Marketâ€™s database.  This means that if you have an app that you havenâ€™t updated since June, and it lacks up-to-date \u003ccode\u003e\u0026lt;uses-feature\u0026gt;\u003c/code\u003e settings, it may stop being visible on certain devices.\u003c/p\u003e\u003cp\u003eWe think the set of apps that will have this problem will be small, if only since most successful apps are updated regularly.  If you want to be sure, check Retoâ€™s advice \u003ca href\u003d\"http://android-developers.blogspot.com/2010/06/future-proofing-your-app.html\"\u003ehere\u003c/a\u003e under \"Android Market Rule #2â€. \u003c/p\u003e\u003cp\u003eWeâ€™ve said it before but it bears repeating: There are a lot of different sizes and shapes and flavors of Android devices in the product pipeline, and you want your app available on every one that can possibly run it.  So this is an area that is going to be requiring attention from developers on a continuing basis.\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-4993089007279679782?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dxtjJejYb-CY:P-9Vgu-Eg18:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dxtjJejYb-CY:P-9Vgu-Eg18:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003dxtjJejYb-CY:P-9Vgu-Eg18:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/xtjJejYb-CY\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"18119811097128389217"},{"userId":"04432100925276176071"},{"userId":"16550723060988844839"},{"userId":"00363647479470519434"},{"userId":"15316723648533920038"},{"userId":"02345579413163193966"},{"userId":"10961316654879340122"},{"userId":"00961274886824306615"},{"userId":"15978273310217162013"},{"userId":"12099599126884799055"},{"userId":"01078909911975297443"},{"userId":"00320933387269203904"},{"userId":"17277342995928736418"}],"comments":[],"annotations":[
],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu","title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"}},{"isReadStateLocked":true,"crawlTimeMsec":"1289434506986","id":"tag:google.com,2005:reader/item/48f6a9ef0ca63e74","categories":["user/06278703451334277493/state/com.google/read"],"title":"Android Market Action","published":1289433600,"updated":1289434462,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/7DozGl7Hy9k/android-market-action.html",
"type":"text/html"}],"content":{"direction":"ltr","content":"\u003cp\u003eAlmost instantly after I joined Google, it became obvious to me that the number-one area where Android developers wanted to see action and progress was in Android Market; your concerns in this area vastly outweighed whatever issues might be bothering you about the handsets and the framework and the programming tools.  In recent months there has been a steady, quiet, incremental flow of improvements and upgrades. They add up. This is by way of a glance back at developments since the arrival of Froyo last summer.\u003c/p\u003e\u003cp\u003e\u003cem\u003eFirst\u003c/em\u003e, we introduced \u003ca href\u003d\"http://android-developers.blogspot.com/2010/05/google-feedback-for-android.html\"\u003eerror reporting\u003c/a\u003e to Market, so developers can see if their apps are locking up or crashing; and if so, exactly where.\u003c/p\u003e\u003cp\u003e\u003cem\u003eSecond\u003c/em\u003e, we upgraded the Market publisher site to include user comments, so you can read what people are saying about you, or at least what theyâ€™re saying in a language you understand.\u003c/p\u003e\u003cp\u003e\u003cem\u003eThird\u003c/em\u003e, we added the \u003ca href\u003d\"http://android-developers.blogspot.com/2010/07/licensing-service-for-android.html\"\u003elicensing server\u003c/a\u003e, which, when \u003ca href\u003d\"http://android-developers.blogspot.com/2010/09/securing-android-lvl-applications.html\"\u003eused\u003c/a\u003e \u003ca href\u003d\"http://android-developers.blogspot.com/2010/09/proguard-android-and-licensing-server.html\"\u003eproperly\u003c/a\u003e, tilts the economics of Android apps toward you, the developer, and against the pirates.\u003c/p\u003e\u003cp\u003e\u003cem\u003eFourth\u003c/em\u003e, we \u003ca href\u003d\"http://android-developers.blogspot.com/2010/09/more-countries-more-sellers-more-buyers.html\"\u003ecranked up\u003c/a\u003e the number of countries people can buy and sell apps in: as of now, you can sell them in 29 countries and buy them in 32.\u003c/p\u003e\u003ca href\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TNs0mVhqY5I/AAAAAAAAANY/xjX_bVKvLA4/s1600/MMap.png\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;display:block;margin:0px auto 10px;text-align:center;width:400px;height:250px\" src\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TNs0mVhqY5I/AAAAAAAAANY/xjX_bVKvLA4/s400/MMap.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003e\u003cem\u003eFifth\u003c/em\u003e, we rolled in a â€œrecent changesâ€ feature, a place for developers to put their release notes.  Android Market has a zero-friction process for app update, and the really great apps have followed the â€œrelease early, release oftenâ€ philosophy.  As a developer, I like having a place to write down whatâ€™s behind an app release, and as a person who downloads lots of apps, I like to know what the goodies are in each new update.\u003c/p\u003e\u003cp\u003e\u003cem\u003eSixth\u003c/em\u003e, Market now has a â€œdraft uploadâ€ feature; this removes a lot of the tension and strain from the app-update process.  Get your screenshots and feature graphics and text and APK all squared away with as much editing as you need to, then update them all with one click.\u003c/p\u003e\u003cp\u003eYouâ€™ll notice that I didnâ€™t say â€œSixth and lastâ€, because this is a team on a roll and I expect lots more goodness from them; if you care about the larger Android ecosystem, or are already a developer, or are thinking of becoming one, stay tuned to this channel.\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-5640970458572467581?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003d7DozGl7Hy9k:9uF_DA8L2UU:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003d7DozGl7Hy9k:9uF_DA8L2UU:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003d7DozGl7Hy9k:9uF_DA8L2UU:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/7DozGl7Hy9k\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"18012391610902179339"},{"userId":"10093505905734668045"},{"userId":"14628806662419495879"},{"userId":"03480044912990352439"},{"userId":"02912357815695297881"},{"userId":"10675948087460774027"},{"userId":"10927895291728692411"},{"userId":"12027455650420045335"},{"userId":"12912579156415481593"},{"userId":"16558009820424632552"},{"userId":"15316723648533920038"},{"userId":"02345579413163193966"},{"userId":"17962961790327471351"},{"userId":"08686061471740452923"
},{"userId":"02800979329047749538"},{"userId":"06629835867134001839"},{"userId":"07031517960338820794"},{"userId":"14773054277985573150"},{"userId":"02978694593234869704"},{"userId":"02164794085197175025"},{"userId":"12099599126884799055"},{"userId":"06608189238978444520"},{"userId":"02666374124691296395"},{"userId":"05731882395173252288"},{"userId":"01078909911975297443"},{"userId":"10007038248327355005"},{"userId":"14842311271839629568"},{"userId":"05027659272546163727"},{"userId":"09859776212908363720"
},{"userId":"16049255886218763532"},{"userId":"00320933387269203904"},{"userId":"17277342995928736418"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu","title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"}},{"isReadStateLocked":true,"crawlTimeMsec":"1287684791720","id":"tag:google.com,2005:reader/item/5b0b461fc5bb683b","categories":["user/06278703451334277493/state/com.google/read"],"title":"Improving App Quality",
"published":1287681420,"updated":1287686364,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/xCzg2orvo-I/improving-app-quality.html","type":"text/html"}],"content":{"direction":"ltr","content":"\u003ca href\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TMB-JMl-xsI/AAAAAAAAANM/kWr3jmU5aO0/s1600/Roman.jpg\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;float:right;margin:0 0 10px 10px;width:320px;height:305px\" src\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TMB-JMl-xsI/AAAAAAAAANM/kWr3jmU5aO0/s320/Roman.jpg\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003e\u003ci\u003e[This post is by \u003ca href\u003d\"http://twitter.com/romannurik\"\u003eRoman Nurik\u003c/a\u003e, who is passionate about icons. â€”Tim Bray]\u003c/i\u003e\u003c/p\u003e\u003cp\u003eWith thousands of new apps being published in Android Market every week, itâ€™s becoming more and more important to proactively work at breaking through the clutter (hooray for marketing jargon!).  One way of improving your appâ€™s visibility in the ecosystem is by deploying well-targeted mobile advertising campaigns and cross-app promotions. However, thereâ€™s another time-tested method of fueling the impression-install-ranking cycle: improve the product!\u003c/p\u003e\u003cp\u003eA better app can go a very long way: a higher quality app will translate to higher user ratings, generally better rankings, more downloads, and higher retention (longer install periods). High-quality apps also have a much higher likelihood of getting some unanticipated positive publicity such as being featured in Android Market or social media buzz.\u003c/p\u003e\u003cp\u003eThe upside to having a higher-quality app is obvious. However, itâ€™s not always clear how to write a so called â€˜better app.â€™ The path to improving app quality isnâ€™t always well-lit. The term â€˜qualityâ€™, and its close cousins â€˜polishâ€™ and â€˜fit and finishâ€™ arenâ€™t always well-defined. In this post, weâ€™ll begin to light the path by looking at a couple of key factors in app quality, and furthermore, look at ways of improving your app along these dimensions.\u003c/p\u003e\u003ch3\u003eListen to your users\u003c/h3\u003e\u003cp\u003eGiven that pretty much any measure of the â€˜successâ€™ of an app involves user-related metrics such as number of downloads, daily actives, retention rates, etc., itâ€™s a good idea to start thinking of your appâ€™s quality as it relates back to your users.\u003c/p\u003e\u003cp\u003eThe most obvious way to listen to users is by reading and addressing comments on your app in Android Market. Although the comments arenâ€™t always productive or constructive, some will provide valuable insight on aspects of your app that you may not have consciously considered before. Itâ€™s important to remember that users have the opportunity to change their ratings and comments about an app as much as theyâ€™d like.\u003c/p\u003e\u003cp\u003eNow, since Android Market doesnâ€™t currently provide a bidirectional communication medium for developers and their users, you should set up your own support and discussion destination(s). There are some great support tools out there that can put you in touch with your users directly such as \u003ca href\u003d\"http://groups.google.com\"\u003eGoogle Groups\u003c/a\u003e, \u003ca href\u003d\"http://discussions.zoho.com/\"\u003eZoho Discussions\u003c/a\u003e, \u003ca href\u003d\"http://getsatisfaction.com\"\u003egetsatisfaction.com\u003c/a\u003e and \u003ca href\u003d\"http://uservoice.com\"\u003euservoice.com\u003c/a\u003e. Once you get set up with such a tool, make sure to fill in the support link in your Android Market listing -- users do click through to these.\u003c/p\u003e\u003cp\u003eAnother way to better listen to your users is by having a public beta or trusted tester program. Itâ€™s crucial to have some amount of real user testing before releasing something in Android Market. Fortunately, you can distribute your apps to users outside of Market via a website; this website can require a login or be publicly accessibleÂ â€”Â itâ€™s entirely up to you. Take advantage of this opportunity by offering your next planned update to some early adopters, before submitting to Market. Youâ€™ll be surprised by how many little, yet impactful, improvements can come out of crowd-sourced, real-user testing.\u003c/p\u003e\u003ch3\u003eImprove stability and eliminate bugs\u003c/h3\u003e\u003cp\u003eI wonâ€™t go into detail about why this is important, because hopefully itâ€™s obvious. And hopefully youâ€™ve been reading this blog and following the best practices outlined in previous posts, so you have a solid idea on how to improve in this arena.\u003c/p\u003e\u003cp\u003eOne noteworthy and yet relatively underused tool for catching stability issues like crashes, is the \u003ca href\u003d\"http://developer.android.com/guide/developing/tools/monkey.html\"\u003eUI/Application Exerciser Monkey\u003c/a\u003e (aka Monkey). Monkey will send random UI events to your appâ€™s activitie, allowing you to trigger user flows that can uncover stability problems.\u003c/p\u003e\u003cp\u003eAlso, with the new \u003ca href\u003d\"http://android-developers.blogspot.com/2010/05/google-feedback-for-android.html\"\u003eerror reporting features\u003c/a\u003e in Android 2.2, users now have the ability to report application crashes to developers. These show up in aggregate in the Android Market developer console. Make sure to read these reports and act on them appropriately.\u003c/p\u003e\u003cp\u003eLastly, keep an external bug and feature request tracker. This will enable your users to engage with the app at a closer level, by following features and bugs that affect them. User frustration with app problems can be effectively managed with diligent issue tracking and communication. Some of the community support tools listed above offer issue tracking features, and if your project is open source, most popular repository hosting sites such as \u003ca href\u003d\"http://code.google.com/hosting\"\u003eGoogle Code\u003c/a\u003e and \u003ca href\u003d\"https://github.com/\"\u003eGitHub\u003c/a\u003e will offer this as well.\u003c/p\u003e\u003ch3\u003eImprove UI Responsiveness\u003c/h3\u003e\u003cp\u003eOne sure-fire way to tick off your users is to have a slow UI. Research has shown that \u003ca href\u003d\"http://googleresearch.blogspot.com/2009/06/speed-matters.html\"\u003espeed matters\u003c/a\u003e... for any interface, be it desktop, web, or mobile. In fact, the importance of speed is amplified on mobile devices since users often need their information on the go and in a hurry.\u003c/p\u003e\u003cp\u003eAs Brad Fitzpatrick mentioned in his Google I/O 2010 talk, \u003ca href\u003d\"http://www.youtube.com/watch?v\u003dc4znvD-7VDA\"\u003eWriting Zippy Android Apps\u003c/a\u003e, you can improve your appsâ€™s UI responsiveness by moving long-running operations off the applicationâ€™s main thread. See the talk for detailed recommendations and debugging tips.\u003c/p\u003e\u003cp\u003eOne way to improve UI performance is to minimize the complexity of your layouts. If you open up \u003ca href\u003d\"http://developer.android.com/guide/developing/tools/hierarchy-viewer.html\"\u003ehierarchyviewer\u003c/a\u003e and see that your layouts are more than 5 levels deep, it may be time to simplify your layout. Consider refactoring those deeply nested LinearLayouts into RelativeLayout. As Romain Guy pointed out in his \u003ca href\u003d\"http://www.youtube.com/watch?v\u003dwDBM6wVEO70\"\u003eWorld of ListView\u003c/a\u003e talk at Google I/O, View objects cost around 1 to 2 KB of memory, so large view hierarchies can be a recipe for disaster, causing frequent VM garbage collection passes which block the main (UI) thread.\u003c/p\u003e\u003cp\u003eLastly, as Tim pointed out in \u003ca href\u003d\"http://android-developers.blogspot.com/2010/10/traceview-war-story.html\"\u003eTraceview War Story\u003c/a\u003e, tools like traceview and ddms can be your best frends for improving performance by profiling method calls and monitoring VM memory allocations, respectively.\u003c/p\u003e\u003cp\u003eMore resources:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cp\u003e\u003ca href\u003d\"http://d.android.com/guide/practices/design/performance.html\"\u003eDesigning for Performance\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003e\u003ca href\u003d\"http://d.android.com/guide/practices/design/responsiveness.html\"\u003eDesigning for Responsiveness\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3\u003eImprove usability\u003c/h3\u003e\u003cp\u003eIâ€™ll say it again here, listen to your users! Ask a handful of real Android device users (friends, family, etc.) to try out your application and observe them as they interact with it. Look for cases where they get confused, are unsure how to proceed, or are surprised by certain behaviors. Minimize these cases by rethinking some of the interactions in your app, perhaps working in some of the \u003ca href\u003d\"http://www.youtube.com/watch?v\u003dM1ZBjlCRfz0\"\u003euser interface patterns\u003c/a\u003e the Android UI team discussed at Google I/O.\u003c/p\u003e\u003cp\u003eIn the same vein, two problems that currently plague Android user interfaces are small tap targets and overly small font sizes. These are generally easy to fix and can make a big impact. As a general rule, optimize for ease of use and legibility, while minimizing, or at least carefully balancing, information density.\u003c/p\u003e\u003cp\u003eAnother way to incrementally improve usability, based on real-world data, is to implement \u003ca href\u003d\"http://code.google.com/mobile/analytics/docs/\"\u003eAnalytics\u003c/a\u003e throughout your app to log usage of particular sections. Consider demoting infrequently used sections to the \u003ca href\u003d\"http://developer.android.com/guide/topics/ui/menus.html#options-menu\"\u003eoptions menu\u003c/a\u003e, or removing them altogether. For oftenly-used sections and UI elements, make sure theyâ€™re immediately obvious and easily accessible in your appâ€™s UI so that users can get to them quickly.\u003c/p\u003e\u003cp\u003eLastly, usability is an extensive and well-documented subject, with close ties to interface design, cognitive science, and other disciplines. If youâ€™re looking for a crash-course, start with \u003ca href\u003d\"http://www.amazon.com/Design-Everyday-Things-Donald-Norman/dp/0385267746\"\u003eDonald Normanâ€™s The Design of Everyday Things\u003c/a\u003e.\u003c/p\u003e\u003ch3\u003eImprove appearance and aesthetics\u003c/h3\u003e\u003cp\u003eThereâ€™s no substitute for a real user interface designerÂ â€”Â ideally one whoâ€™s well-versed in mobile and Android, and ideally handy with both interaction and visual design. One popular venue to post openings for designers is \u003ca href\u003d\"http://jobs.smashingmagazine.com\"\u003ejobs.smashingmagazine.com\u003c/a\u003e, and leveraging social connections on Twitter and LinkedIn can surface great talent.\u003c/p\u003e\u003cp\u003eIf you donâ€™t have the luxury of working with a UI designer, there are some ways in which you can improve your appâ€™s appearance yourself. First, get familiar with Adobe Photoshop, Adobe Fireworks, or some other raster image editing tool. Mastering the art of the pixel in these apps takes time, but honing this skill can help build polish across your interface designs. Also, master the resources framework by studying \u003ca href\u003d\"http://android.git.kernel.org/?p\u003dplatform/frameworks/base.git;a\u003dtree;f\u003dcore/res/res;h\u003da3562fe1af94134486a8a899f02a9c2f7986c8dd;hb\u003dmaster\"\u003ethe framework UI\u003c/a\u003e assets and layouts and reading through the new \u003ca href\u003d\"http://developer.android.com/guide/topics/resources/available-resources.html\"\u003eresources documentation\u003c/a\u003e. Techniques such as 9-patches and resource directory qualifiers are somewhat unique to Android, and are crucial in building flexible yet aesthetic UIs.\u003c/p\u003e\u003cp\u003eThe recently-published \u003ca href\u003d\"http://www.slideshare.net/AndroidDev/android-ui-design-tips\"\u003eAndroid UI Design Tips\u003c/a\u003e slide deck contains a few more best practices for your consideration.\u003c/p\u003e\u003ch3\u003eDeliver the right set of features\u003c/h3\u003e\u003cp\u003eHaving the \u003cem\u003eright\u003c/em\u003e set of features in your app is important. Itâ€™s often easy to fall into the trap of feature-creep, building as much functionality into your app as possible. Providing instant gratification by immediately showing the most important or relevant information is crucial on mobile devices. Providing too much information can be as frustrating (or even more so) than not providing enough of it.\u003c/p\u003e\u003cp\u003eAnd again, listen to your users by collecting and responding to feature requests. Be careful, though, to take feature requests with grains of salt. Requests can be very useful in aggregate, to get a sense of what kinds of functionality you should be working on, but not every feature request needs to be implemented.\u003c/p\u003e\u003ch3\u003eIntegrate with the system and third-party apps\u003c/h3\u003e\u003cp\u003eA great way to deliver a delight user experience is to integrate tightly with the operating system. Features like \u003ca href\u003d\"http://developer.android.com/guide/topics/appwidgets/index.html\"\u003eapp widgets\u003c/a\u003e, \u003ca href\u003d\"http://android-developers.blogspot.com/2009/04/live-folders.html\"\u003elive folders\u003c/a\u003e, \u003ca href\u003d\"http://developer.android.com/guide/topics/search/index.html\"\u003eglobal search integration\u003c/a\u003e, and \u003ca href\u003d\"http://developer.android.com/reference/android/widget/QuickContactBadge.html\"\u003eQuick Contacts badges\u003c/a\u003e are fairly low-hanging fruit in this regard. For some app categories, basic features like app widgets are par for the course. Not including them is a sure-fire way to tarnish an otherwise positive user experience. Some apps can achieve even tighter OS integration with the new \u003ca href\u003d\"http://developer.android.com/resources/articles/contacts.html\"\u003econtacts\u003c/a\u003e, accounts and sync APIs available in Android 2.0 and later. A few sample apps that show how to use these APIs are \u003ca href\u003d\"http://developer.android.com/resources/samples/SampleSyncAdapter/index.html\"\u003eSampleSyncAdapter\u003c/a\u003e (bundled with the SDK samples) and \u003ca href\u003d\"http://code.google.com/p/jumpnote/\"\u003eJumpNote\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eThird-party integrations can provide even more user delight and give the user a feeling of device cohesiveness. Itâ€™s also a really nice way of adding functionality to your app without writing any extra code (by leveraging other appsâ€™ functionalities). For example, if youâ€™re creating a camera app, you can allow users to edit their photos in \u003ca href\u003d\"http://mobile.photoshop.com/android/\"\u003ePhotoshop Express\u003c/a\u003e before saving them to their collection, if they have that third-party application installed. More information on this subject is available in the \u003ca href\u003d\"http://developer.android.com/resources/articles/can-i-use-this-intent.html\"\u003eCan I Use this Intent?\u003c/a\u003e article.\u003c/p\u003e\u003cp\u003eMore resources:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cp\u003e\u003ca href\u003d\"http://developer.android.com/guide/practices/design/seamlessness.html\"\u003eDesigning for seamlessness\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3\u003ePay attention to details...\u003c/h3\u003e\u003cp\u003eOne particular detail Iâ€™ll call out is in icon quality and consistency. Make sure your app icons (especially your launcher icon) are crisp and pixel-perfect at all resolutions, and follow the \u003ca href\u003d\"http://developer.android.com/guide/practices/ui_guidelines/icon_design.html\"\u003eicon guidelines\u003c/a\u003e, at least in spirit if not in letter. If youâ€™re having trouble or donâ€™t have the resources to design the icons yourself, consider using the new \u003ca href\u003d\"http://android-ui-utils.googlecode.com/hg/asset-studio/dist/index.html\"\u003eAndroid Asset Studio\u003c/a\u003e tool (a project Iâ€™ve recently open-sourced) to generate a set.\u003c/p\u003e\u003ch3\u003e...and more...\u003c/h3\u003e\u003cp\u003eAlong with this blog, make sure to follow \u003ca href\u003d\"http://twitter.com/AndroidDev\"\u003e@AndroidDev\u003c/a\u003e on TwitterÂ â€”Â weâ€™re constantly collecting and sharing tips and tricks on Android application development that you wonâ€™t always find anywhere else. And of course, donâ€™t be afraid to ask questions in our support forums on \u003ca href\u003d\"http://stackoverflow.com/questions/tagged/android\"\u003eStack Overflow\u003c/a\u003e and \u003ca href\u003d\"http://groups.google.com/group/android-developers\"\u003eGoogle Groups\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eThanks for reading!\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-4221173841743953495?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dxCzg2orvo-I:ntg8drEo0cU:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dxCzg2orvo-I:ntg8drEo0cU:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003dxCzg2orvo-I:ntg8drEo0cU:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/xCzg2orvo-I\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"08283112647880925214"},{"userId":"15006804079799417323"},{"userId":"18012391610902179339"},{"userId":"11612649584011442359"},{"userId":"03552833013083248876"},{"userId":"09083030013820297769"},{"userId":"08421304145018657106"},{"userId":"11836811123489777030"},{"userId":"07234459707756004238"},{"userId":"03560200052926293134"},{"userId":"11835450126492474112"},{"userId":"15552792864887276399"},{"userId":"10568119872062141399"},{"userId":"16545937381199218543"
},{"userId":"03575109482049422427"},{"userId":"09022222637037420463"},{"userId":"03480044912990352439"},{"userId":"07162374023193504280"},{"userId":"08057853245131166692"},{"userId":"08803257452298979536"},{"userId":"07167945503456896994"},{"userId":"08404285954704972850"},{"userId":"17290175921501075261"},{"userId":"00339251530095400753"},{"userId":"01454779429525660751"},{"userId":"05219902331916559928"},{"userId":"01059345005528369405"},{"userId":"15836234602575309219"},{"userId":"17669445519297280524"
},{"userId":"15234479079602502698"},{"userId":"15316723648533920038"},{"userId":"06461488888678539743"},{"userId":"18339883094476729906"},{"userId":"11147330035775639638"},{"userId":"03053168690926175030"},{"userId":"13034343867882357924"},{"userId":"07607191457032118444"},{"userId":"00006711919025256150"},{"userId":"18223438983460470521"},{"userId":"13804620924722969276"},{"userId":"15218633955327620808"},{"userId":"01161422007006010556"},{"userId":"11892776176183768029"},{"userId":"02269113999882434319"
},{"userId":"14517098433488094546"},{"userId":"06493867627013501272"},{"userId":"12423847431804038971"},{"userId":"00481932552832553517"},{"userId":"02800979329047749538"},{"userId":"11862749313846216332"},{"userId":"17862733380869432977"},{"userId":"14754390403493503702"},{"userId":"04458579394429260567"},{"userId":"08854659178715462472"},{"userId":"02108121426738588366"},{"userId":"13201585167345395810"},{"userId":"15744961248935856687"},{"userId":"09920725947050433472"},{"userId":"17797531230187378283"
},{"userId":"02130057119051313200"},{"userId":"02164794085197175025"},{"userId":"01014446539998601099"},{"userId":"07407860181526927155"},{"userId":"04279787981894731288"},{"userId":"09318702010703989872"},{"userId":"04249382799377263952"},{"userId":"08921988665753059944"},{"userId":"09818920049207206212"},{"userId":"10233976681975525286"},{"userId":"02509748965544130858"},{"userId":"09980461670471846429"},{"userId":"01472927445616419917"},{"userId":"07351481305907052319"},{"userId":"02666374124691296395"
},{"userId":"05599066658505798487"},{"userId":"01078909911975297443"},{"userId":"01856710694028122295"},{"userId":"10007038248327355005"},{"userId":"02516487728175445213"},{"userId":"00608799681554186015"},{"userId":"00320933387269203904"},{"userId":"11087651991147275725"},{"userId":"15605347615714220536"},{"userId":"00431210581262177076"},{"userId":"05199829490055533752"},{"userId":"07056440055143245177"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu",
"title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"}},{"isReadStateLocked":true,"crawlTimeMsec":"1287084984816","id":"tag:google.com,2005:reader/item/96f0e90b253ac5d0","categories":["user/06278703451334277493/state/com.google/read"],"title":"Traceview War Story","published":1287083220,"updated":1287084430,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/OBTaK8zW7dE/traceview-war-story.html","type":"text/html"}],"content":{"direction":"ltr","content":"\u003cp\u003eI recently took my first serious look at \u003ca href\u003d\"http://developer.android.com/guide/developing/tools/traceview.html\"\u003eTraceview\u003c/a\u003e, and it occurred to me, first, that there are probably a few other Android developers who havenâ€™t used it and, second, that this is an opportunity to lecture sternly on one of my favorite subjects: performance improvement and profiling.  This is perhaps a little bit Android-101; If you already know all about Traceview, you can stop here and go back to coding.\u003c/p\u003e\u003ch3\u003eMaking Apps Fast\u003c/h3\u003e\u003cp\u003eHereâ€™s a belief that I think I share with most experienced developers: For any app that is even moderately complex, youâ€™re not smart enough to predict what the slow parts are going to be, because \u003cem\u003enobody\u003c/em\u003e is smart enough to predict where software bottlenecks will turn up.\u003c/p\u003e\u003cp\u003eSo the smart way to write a fast app is to build it in the simplest way that could possibly work, avoiding egregiously-stupid thing like order-N-squared algorithms and doing I/O on the Android UI thread. Who knows, it might be fast enough, and then youâ€™re done!\u003c/p\u003e\u003cp\u003eIf it isnâ€™t fast enough, \u003cem\u003edonâ€™t guess why\u003c/em\u003e.  Measure it and find out, using a profiler.  Actually Iâ€™ve been known to do this, when backed into a corner, using things like \u003ccode\u003eSystem.err.println(\u0026quot;EnteredÂ at\u0026quot;Â +Â System.currentTimeMillis());\u003c/code\u003e  Fortunately, Android comes with a reasonably decent profiler, so you donâ€™t have to get ugly like that.\u003c/p\u003e\u003ch3\u003eCase Study: LifeSaver 2\u003c/h3\u003e\u003cp\u003eI have this little utility in Android Market called LifeSaver 2, the details are on \u003ca href\u003d\"http://www.tbray.org/ongoing/When/201x/2010/04/25/LifeSaver-Lessons\"\u003emy personal blog\u003c/a\u003e.  At one point, it reads the SMS and phone-call logs out of the system and persists them in a JSON text file on the SD card.  Since this is kind of slow, it shows a nice dynamic progress bar.  It occurred to me to wonder \u003cem\u003ewhy\u003c/em\u003e it was kind of slow to write a few hundred records into a text file on a device that, after all, has a gigahertz processor.\u003c/p\u003e\u003cp\u003eSomebody who foolishly disregarded my advice above might assume that the slowdown had to be due to the ContentProvider Cursor machinery reading the system logs, or failing that, the overhead of writing to the SD card.  A wiser person would instrument the code and find out.  Letâ€™s do that.\u003c/p\u003e\u003ch3\u003eTurning On Tracing\u003c/h3\u003e\u003cp\u003eI went into \u003ca href\u003d\"http://code.google.com/p/lifesaver/source/browse/trunk/src/com/textuality/lifesaver2/Saver.java\"\u003eSaver.java\u003c/a\u003e and bracketed the code in its \u003ccode\u003erun()\u003c/code\u003e method like so:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e       public void run() {\n\n            android.os.Debug.startMethodTracing(\"lsd\");\n\n            // ... method body elided\n\n            android.os.Debug.stopMethodTracing();\n        }\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe first call turns tracing on, the argument \u003ccode\u003e\"lsd\"\u003c/code\u003e (stands for Life Saver Debug, of course) tells the system to put the trace log in \u003ccode\u003e/sdcard/lsd.trace\u003c/code\u003e.  Remember that doing this means you have to add the \u003ccode\u003eWRITE_EXTERNAL_STORAGE\u003c/code\u003e permission so you can save the trace info; donâ€˜t forget to remove that before you ship.\u003c/p\u003e\u003cp\u003e\u003ci\u003e[Update:]\u003c/i\u003e Android engineer Xavier Ducrohet writes to remind me: â€œDDMS has a start/stop profiling button in the â€˜device viewâ€™. Upon clicking stop it launches TraceView with the trace file. This is not as fine grained as putting start/stopMethodTracing in your code but can be quite useful. For VMs earlier than froyo, the permission is required as well (DDMS basically automate getting the trace from the sd card and saving it locally before calling traceview). For Froyo+ VMs, the VM is able to send the trace file through the JDWP connection and the permission is not needed anymore (which is really useful).â€ Thanks, Xav!\u003c/p\u003e\u003cp\u003eThen you run your app, then you copy the output over to your computer, and fire up Traceview.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e540\u0026gt; adb pull /sdcard/lsd.trace\n541\u0026gt; traceview lsd\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAt this point, you will have noticed three things.  First, turning tracing on really slows down your app. Second, the tracefile is big; in this case, 8.6M for a run that took like four seconds.  Third, that traceview looks pretty cool.\u003c/p\u003e\u003ca href\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TLah-gMCdTI/AAAAAAAAAMU/AxLCW7Huaig/s1600/big-picture.png\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;display:block;margin:0px auto 10px;text-align:center;width:320px;height:204px\" src\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TLah-gMCdTI/AAAAAAAAAMU/AxLCW7Huaig/s320/big-picture.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003eThe bars across the top show the appâ€™s threads and how they dealt out the time; since the Nexus One is single-threaded CPU, they have to take turns.  Letâ€™s zero in on one 100-msec segment.\u003c/p\u003e\u003ca href\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TLdKbzrQRrI/AAAAAAAAAMc/qJ57d4qZB34/s1600/100-msec.png\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;display:block;margin:0px auto 10px;text-align:center;width:320px;height:204px\" src\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TLdKbzrQRrI/AAAAAAAAAMc/qJ57d4qZB34/s320/100-msec.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003eThe top line is where my app code is running (the red segment is GC happening), the middle line is the UI thread and the bursts of activity are the ProgressBar updating, and I have no idea what the third thread, named HeapWorker, does, but it doesnâ€™t seem a major contributor to the appâ€™s runtime, so letâ€™s ignore it.\u003c/p\u003e\u003cp\u003eThe bottom of the screen is where the really interesting data is; it shows which of your methods burned the time, and can be sorted in a bunch of different ways.  Letâ€™s zero in on the first two lines.\u003c/p\u003e\u003ca href\u003d\"http://3.bp.blogspot.com/_GTM_W5mVPTU/TLdLKmTvcPI/AAAAAAAAAMk/OuL7seNe_r0/s1600/println-1.png\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;display:block;margin:0px auto 10px;text-align:center;width:320px;height:20px\" src\u003d\"http://3.bp.blogspot.com/_GTM_W5mVPTU/TLdLKmTvcPI/AAAAAAAAAMk/OuL7seNe_r0/s320/println-1.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003eTranslated into English, this tells us that the top-level routine consumed 100% of the time if you include everything it called (well, yeah), but only 0.9% of the time itself.  The next line suddenly starts to get real interesting: \u003ccode\u003ejava.io.PrintStream.println(Object)\u003c/code\u003e and whatever it calls are using 65.2% of the appâ€™s time.  This is the code that writes the JSON out to the SD card.  Right away, we know that apparently the task of pulling the data out of the phoneâ€™s ContentProviders doesnâ€™t seem to be very expensive; itâ€™s the output thatâ€™s hurting.\u003c/p\u003e\u003cp\u003eCan we conclude that the app is limited by the sluggish write performance of the SD card?  Letâ€™s drill down, which is done in the most obvious point-and-click way imaginable.\u003c/p\u003e\u003ca href\u003d\"http://2.bp.blogspot.com/_GTM_W5mVPTU/TLdMMeJzGWI/AAAAAAAAAMs/BI4wgLa3MGE/s1600/println-2.png\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;display:block;margin:0px auto 10px;text-align:center;width:320px;height:66px\" src\u003d\"http://2.bp.blogspot.com/_GTM_W5mVPTU/TLdMMeJzGWI/AAAAAAAAAMs/BI4wgLa3MGE/s320/println-2.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003eOoh, thereâ€™s a nasty surprise.  Of course, \u003ccode\u003eprintln\u003c/code\u003e calls (in effect) \u003ccode\u003etoString()\u003c/code\u003e on all its arguments.  It looks like turning the arguments to strings is taking over half the time, before it even dispatches from \u003ccode\u003eprintln(Object)\u003c/code\u003e to \u003ccode\u003eprintln(String)\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eIâ€™ll skip the step of drilling down into \u003ccode\u003eprintln(String)\u003c/code\u003e but it does suggest that yes, there is some slow I/O happening there, to the SD card.  But letâ€™s look inside that \u003ccode\u003eString.valueOf()\u003c/code\u003e call.\u003c/p\u003e\u003ca href\u003d\"http://3.bp.blogspot.com/_GTM_W5mVPTU/TLdOFDT1wEI/AAAAAAAAAM0/A7l51aVRKk0/s1600/string-value-of.png\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;display:block;margin:0px auto 10px;text-align:center;width:320px;height:66px\" src\u003d\"http://3.bp.blogspot.com/_GTM_W5mVPTU/TLdOFDT1wEI/AAAAAAAAAM0/A7l51aVRKk0/s320/string-value-of.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003eThereâ€™s your smoking pistol. It turns out that \u003ccode\u003eorg.json.JSONObject.toString()\u003c/code\u003e is what we professional programmers call a, well, this is a family-friendly operation so I wonâ€™t go there.  You can poke around inside it, but itâ€™s just depressing.\u003c/p\u003e\u003cp\u003eWhat you can do, however, is sort all the routines by their â€œExclusiveâ€ times, as in the number of CPU circles burned right there in the routine.  Here are all of them that use 1% or more of the total execution time.\u003c/p\u003e\u003ca href\u003d\"http://4.bp.blogspot.com/_GTM_W5mVPTU/TLdO1ig0_vI/AAAAAAAAAM8/psdvyiiAWx4/s1600/top-routines.png\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;display:block;margin:0px auto 10px;text-align:center;width:320px;height:148px\" src\u003d\"http://4.bp.blogspot.com/_GTM_W5mVPTU/TLdO1ig0_vI/AAAAAAAAAM8/psdvyiiAWx4/s320/top-routines.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003eThereâ€™s a little bit of GC and Android framework View-wrangling stuff in there, but the display is dominated by \u003ccode\u003eorg.jason\u003c/code\u003e and \u003ccode\u003ejava.lang.StringBuilder\u003c/code\u003e code.\u003c/p\u003e\u003ch3\u003eThe Conclusion\u003c/h3\u003e\u003cp\u003eThe real conclusion is that in the case of this app, I actually donâ€™t care about the performance. A user runs it a grand total of two times, once on the old phone and once on the new phone, and itâ€™s got lots of eye candy, so I just donâ€™t think thereâ€™s a problem.\u003c/p\u003e\u003cp\u003eIf I \u003cem\u003edid\u003c/em\u003e want to speed this up, itâ€™s obvious what to do.  First, either stop using JSON, or find a cheaper way to serialize it. Second, do fewer \u003ccode\u003eprintln()\u003c/code\u003e calls; glom the data together in one big buffer and just blast it out with a single I/O call.  But, and hereâ€™s the key point, if Iâ€™d guessed where the bottlenecks were, Iâ€™d have been wrong, mostly.\u003c/p\u003e\u003cp\u003eTraceview is a nice tool, and if you donâ€™t already know it, you owe it to yourself to learn it.\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-7912268299785783588?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dOBTaK8zW7dE:sWYR-90vaE8:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dOBTaK8zW7dE:sWYR-90vaE8:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003dOBTaK8zW7dE:sWYR-90vaE8:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/OBTaK8zW7dE\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"14109959977541753749"},{"userId":"03560200052926293134"},{"userId":"16545937381199218543"},{"userId":"11761750784773927366"},{"userId":"13806209898207714434"},{"userId":"01856445770795437540"},{"userId":"11088838922446449759"},{"userId":"07536961538892999462"},{"userId":"12972648725658948827"},{"userId":"15749862078653890188"},{"userId":"17028476595848419075"},{"userId":"17669445519297280524"},{"userId":"00363647479470519434"},{"userId":"15234479079602502698"
},{"userId":"15316723648533920038"},{"userId":"02345579413163193966"},{"userId":"15765892812708996319"},{"userId":"18223438983460470521"},{"userId":"05388703901839678979"},{"userId":"16792806529348290695"},{"userId":"15119679607770460213"},{"userId":"01078165029498247813"},{"userId":"18134095512781602296"},{"userId":"13440859927054719372"},{"userId":"07031517960338820794"},{"userId":"09920725947050433472"},{"userId":"09108285278691718767"},{"userId":"15712234028002681488"},{"userId":"09743386109352243996"
},{"userId":"01078909911975297443"},{"userId":"02997108413126178634"},{"userId":"00320933387269203904"},{"userId":"17618782820034880795"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu","title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"}},{"isReadStateLocked":true,"crawlTimeMsec":"1286857094680","id":"tag:google.com,2005:reader/item/96e4bd857c7d7252","categories":["user/06278703451334277493/state/com.google/read"
],"title":"The Five Steps to Future Hardware Happiness","published":1286853540,"updated":1286856967,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/GQ70GqXgpvc/five-steps-to-future-hardware-happiness.html","type":"text/html"}],"content":{"direction":"ltr","content":"\u003ca href\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TB-isY6azZI/AAAAAAAAAHs/OWjs5UgjLD0/s1600/reto.png\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;float:right;margin:0 0 10px 10px;width:185px;height:228px\" src\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TB-isY6azZI/AAAAAAAAAHs/OWjs5UgjLD0/s400/reto.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003e\u003ci\u003e[This post is by \u003ca href\u003d\"http://blog.radioactiveyak.com/\"\u003eReto Meier\u003c/a\u003e AKA \u003ca href\u003d\"http://twitter.com/retomeier\"\u003e@retomeier\u003c/a\u003e, who \u003ca href\u003d\"http://www.amazon.com/gp/product/0470565527?tag\u003dinterventione-20\"\u003ewrote the book\u003c/a\u003e on Android App development. â€”Tim Bray]\u003c/i\u003e\u003c/p\u003e\u003cp\u003eTwo questions I regularly get asked are â€œWhy isnâ€™t my app visible on the Market on the (insert device name here)?â€ and â€œHow can I prepare for GoogleTV and Android tablets?â€ If you care about how broadly your app is available, pay attention now. Seriously. I donâ€™t want to hear anyone telling me they werenâ€™t told. \u003ci\u003e[Seems a little combative? -Ed. Take it up a notch! -RM]\u003c/i\u003e\u003c/p\u003e\u003cp\u003eBy now youâ€™ve probably heard of \u003ca href\u003d\"http://www.google.com/tv\"\u003eGoogle TV\u003c/a\u003e, the \u003ca href\u003d\"http://galaxytab.samsungmobile.com/\"\u003eSamsung Galaxy Tab\u003c/a\u003e, and the Dell Streak. These are only the vanguardÂ â€”Â Android is quickly moving to hardware that is increasingly different from the smartphone devices weâ€™re used to. The variations in hardwareÂ â€”Â including lack of features like GPS, accelerometers, and video camerasÂ â€”Â means itâ€™s time for you to think about what hardware your app needs, and what it can function without.\u003c/p\u003e\u003cp\u003eTo make life easier every API includes a \u003ca href\u003d\"http://developer.android.com/reference/android/content/pm/PackageManager.html#FEATURE_BLUETOOTH\"\u003eFEATURE_*\u003c/a\u003e constant. To control your appâ€™s availability on the Android Market, you specify the features required for your app to work. Iâ€™d like to encourage you to add manifest Feature nodes for \u003cem\u003eevery\u003c/em\u003e API you use, specifying them as optional, or not, as appropriate using a manifest uses-feature nodes as shown below:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u0026lt;uses-feature android:name\u003d\u0026quot;android.hardware.microphone\u0026quot;\n              android:required\u003d\u0026quot;true\u0026quot;/\u0026gt;\u003c/code\u003e\u003c/pre\u003e\u003ch3\u003eMarket wonâ€™t be inferring any future API features\u003c/h3\u003e\u003cp\u003eMy earlier post on \u003ca href\u003d\"http://android-developers.blogspot.com/2010/06/future-proofing-your-app.html\"\u003efuture proofing your apps\u003c/a\u003e describes a process of \u003ci\u003efeature inferring\u003c/i\u003e that used your appâ€™s permissions to help us ensure apps were only visible on the appropriate hardware.\u003c/p\u003e\u003cp\u003eThis process has evolved over time. From now on Market wonâ€™t be inferring future API features and we have no way to infer some previously available APIs (eg. sensors). As a result youâ€™ll need to specify your mandatory and optional feature requirementsÂ â€”Â or risk your app either breaking or not being available for some users.\u003c/p\u003e\u003ch3\u003eThe 5 steps to future hardware happiness\u003c/h3\u003e\u003col\u003e\u003cli\u003e\u003cp\u003eSpecify a \u003ca href\u003d\"http://developer.android.com/guide/topics/manifest/uses-feature-element.html\"\u003euses-feature\u003c/a\u003e node for every API feature used by your app. This forces you to think about what your app uses, allowing you to:\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eDecide which features are necessary for your app to be useful and mark those featured with the attribute \u003ccode\u003erequired\u003dtrue\u003c/code\u003e. This lets Market hide your app from any device that doesnâ€™t support the hardware features your app requires.\u003c/p\u003e\u003cp\u003e\u003ccode\u003e\u0026lt;uses-feature android:name\u003d\u0026quot;android.hardware.telephony\u0026quot;\u003cbr\u003eÂ Â Â Â Â Â Â Â Â Â Â Â Â Â android:required\u003d\u0026quot;true\u0026quot;/\u0026gt;\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eFor features that arenâ€™t strictly required, set \u003ccode\u003erequired\u003dfalse\u003c/code\u003e.\u003c/p\u003e\u003cp\u003e\u003ccode\u003e\u0026lt;uses-feature android:name\u003d\u0026quot;android.hardware.bluetooth\u0026quot;\u003cbr\u003eÂ Â Â Â Â Â Â Â Â Â Â Â Â Â android:required\u003d\u0026quot;false\u0026quot;/\u0026gt;\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eThen go in to your code and find where you have used the optional features. Use the \u003ca href\u003d\"http://developer.android.com/reference/android/content/pm/PackageManager.html#hasSystemFeature(java.lang.String)\"\u003ehasSystemFeature\u003c/a\u003e method from the \u003ca href\u003d\"http://developer.android.com/reference/android/content/pm/PackageManager.html\"\u003ePackageManager\u003c/a\u003e to determine if the hardware is available and provide alternative paths for your code as appropriate.\u003c/p\u003e\u003cp\u003e\u003ccode\u003ePackageManager pm \u003d getPackageManager();\u003cbr\u003eboolean hasCompass \u003d pm.hasSystemFeature(PackageManager.FEATURE_SENSOR_COMPASS);\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eNow you can sleep soundly in the knowledge that no matter what variation in Android compatible hardware comes to market, your app will always (and only) be available on those it supports.\u003c/p\u003e\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eYou can find more details on how the Android Market uses filters to determine whether to show your application  to a user who is browsing or searching for applications on a given device at the \u003ca href\u003d\"http://developer.android.com/guide/appendix/market-filters.html\"\u003eMarket Filters\u003c/a\u003e page on the Android Developer Site.\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-8162911226452244273?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dGQ70GqXgpvc:9VEHMjeZay8:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dGQ70GqXgpvc:9VEHMjeZay8:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003dGQ70GqXgpvc:9VEHMjeZay8:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/GQ70GqXgpvc\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"18012391610902179339"},{"userId":"04488745104218280991"},{"userId":"03560200052926293134"},{"userId":"16745487981723953095"},{"userId":"16545937381199218543"},{"userId":"16457481057757858296"},{"userId":"00327497350668401429"},{"userId":"11529689417426855922"},{"userId":"12912579156415481593"},{"userId":"17669445519297280524"},{"userId":"00363647479470519434"},{"userId":"15234479079602502698"},{"userId":"15316723648533920038"},{"userId":"02603646088933521840"
},{"userId":"06434805859819223870"},{"userId":"12139924522016929304"},{"userId":"11737242689568588235"},{"userId":"01496840266217597073"},{"userId":"02220058273359534291"},{"userId":"02210548376197607358"},{"userId":"09920725947050433472"},{"userId":"06703693396356018616"},{"userId":"11189616487688914429"},{"userId":"02666374124691296395"},{"userId":"01078909911975297443"},{"userId":"05294830963635413987"},{"userId":"03790872424673868308"},{"userId":"00320933387269203904"},{"userId":"17277342995928736418"
}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu","title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"}},{"isReadStateLocked":true,"crawlTimeMsec":"1286494467310","id":"tag:google.com,2005:reader/item/02d99f942d33c7e5","categories":["user/06278703451334277493/state/com.google/read"],"title":"Android Market New Country Roll-out Details","published":1286492400,"updated":1286494456,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/qOlhvfJHxJY/android-market-new-country-roll-out.html",
"type":"text/html"}],"content":{"direction":"ltr","content":"\u003cp\u003e\u003ci\u003e[This post is by the Android Market team. â€” Tim Bray]\u003c/i\u003e\u003c/p\u003e\u003cp\u003eLast week, \u003ca href\u003d\"http://android-developers.blogspot.com/2010/09/more-countries-more-sellers-more-buyers.html\"\u003ewe announced\u003c/a\u003e  that over the next two weeks, users in 18 additional countries would gain the ability to purchase paid apps from Android Market.  Effective today, users can now see paid apps in Argentina, Belgium, Brazil, Czech Republic, Denmark, Finland, Hong Kong, India, Ireland, Israel, Mexico, Norway, Poland, Portugal, Russia, Singapore, Sweden, and Taiwan.\u003c/p\u003e\u003cp\u003eFor users to make a purchase of paid apps in these countries, they must have the latest Android Market client, which we have started to make available as a self-update and should reach all users within the next few days. This is a silent update; users will not see a notification and will not be prompted to do anything.  If you want to accelerate the self-update process, launch Android Market, navigate back to the Home screen, and after 5-10 minutes, relaunch it.  For more details, please refer to the \u003ca href\u003d\"http://market.android.com/support/bin/answer.py?answer\u003d190860\"\u003eHelp Center\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eNo action is necessary if you have targeted your paid apps to be available to â€œAll Locationsâ€ and would like to launch in these additional countries. If you have not selected â€œAll Locationsâ€ and would like to target these additional countries, or if you have selected â€œAll Locationsâ€ and do not want to launch your apps in these additional buyer countries, please visit the Android Market \u003ca href\u003d\"http://market.android.com/publish\"\u003epublisher site\u003c/a\u003e to make the necessary adjustments.\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-3443737655581045218?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dqOlhvfJHxJY:eq0dMAXuecc:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dqOlhvfJHxJY:eq0dMAXuecc:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003dqOlhvfJHxJY:eq0dMAXuecc:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/qOlhvfJHxJY\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"09083030013820297769"},{"userId":"03560200052926293134"},{"userId":"10207475781962677500"},{"userId":"17905618791332783611"},{"userId":"12257144297731287993"},{"userId":"16362449584109172613"},{"userId":"07330157607317898533"},{"userId":"02978694593234869704"},{"userId":"09918727168013413671"},{"userId":"05437631085890566616"},{"userId":"02549829953240589000"},{"userId":"00320933387269203904"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu",
"title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"}},{"isReadStateLocked":true,"crawlTimeMsec":"1285877288638","id":"tag:google.com,2005:reader/item/791a137386dbcf65","categories":["user/06278703451334277493/state/com.google/read"],"title":"More Countries, More sellers, More buyers","published":1285876200,"updated":1285891076,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/z2HbA8X-Wdg/more-countries-more-sellers-more-buyers.html","type":"text/html"
}],"content":{"direction":"ltr","content":"\u003ca href\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TKS5gUU1iRI/AAAAAAAAAL4/tabxGMjzP30/s1600/market-bag-intl4.png\"\u003e\u003cimg style\u003d\"float:right;margin:0 0 10px 10px;width:251px;height:320px\" src\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TKS5gUU1iRI/AAAAAAAAAL4/tabxGMjzP30/s320/market-bag-intl4.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003e\u003ci\u003e[This post is by Eric Chu, Android Developer Ecosystem. â€” Tim Bray]\u003c/i\u003e\u003c/p\u003e\u003cp\u003eSince we launched Android and Android Market, we have seen the population of Android users and devices expand into many countries.  This widespread adoption has brought with it growing interest in Android Marketâ€™s support for the buying and selling of paid applications in these additional countries.\u003c/p\u003e\u003cp\u003eWe have been hard at work on this and it is my pleasure to announce that effective today, developers from 20 more countries can now sell paid apps on Android Market.  Additionally, over the next 2 weeks, users in 18 additional countries will be able to purchase paid apps from Android Market.\u003c/p\u003e\u003cp\u003eSupport for paid application sales is now expanded to developers in 29 countries, with todayâ€™s additions of Argentina, Australia, Belgium, Brazil, Canada, Denmark, Finland, Hong Kong, Ireland, Israel, Mexico, New Zealand, Norway, Portugal, Russia, Singapore, South Korea, Sweden, Switzerland and Taiwan.\u003c/p\u003e\u003cp\u003eIn addition, Android Market users from 32 countries will be able to buy apps, with the addition of Argentina, Belgium, Brazil, Czech Republic, Denmark, Finland, Hong Kong, India, Ireland, Israel, Mexico, Norway, Poland, Portugal, Russia, Singapore, Sweden, and Taiwan. No action is necessary if you have targeted your paid apps to be available to â€œAll Locationsâ€ and would like to launch in these additional countries. If you have not selected â€œAll Locationsâ€ and would like to target these additional countries, or if you have selected â€œAll Locationsâ€ and do not want to launch your apps in these additional buyer countries, please visit the Android Market \u003ca href\u003d\"http://market.android.com/publish\"\u003epublisher site\u003c/a\u003e regularly over the next two weeks to make the necessary adjustments as the new buyer countries launch.\u003c/p\u003e\u003cp\u003eWe remain committed to continuing to improve the buyer and seller experiences on Android Market.  Among other initiatives, we look forward to bringing the Android Market paid apps ecosystem to even more countries in the coming months. Please stay tuned.\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-8548448998339837356?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dz2HbA8X-Wdg:5sC6txbv5oY:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dz2HbA8X-Wdg:5sC6txbv5oY:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003dz2HbA8X-Wdg:5sC6txbv5oY:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/z2HbA8X-Wdg\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"06655203691039044306"},{"userId":"16712154826025604224"},{"userId":"11612649584011442359"},{"userId":"15410000064366398756"},{"userId":"18119811097128389217"},{"userId":"09083030013820297769"},{"userId":"16745487981723953095"},{"userId":"12547025008865202083"},{"userId":"12411605062158117664"},{"userId":"14771639575390201338"},{"userId":"01696704101021405305"},{"userId":"10207475781962677500"},{"userId":"17905618791332783611"},{"userId":"02616507929159206983"
},{"userId":"11529689417426855922"},{"userId":"13255108966757577750"},{"userId":"17442031931704910324"},{"userId":"07235699334774017455"},{"userId":"18089645339731964519"},{"userId":"15316723648533920038"},{"userId":"03734389125807877806"},{"userId":"08633439532731996681"},{"userId":"13146900516953025357"},{"userId":"18362504754238472732"},{"userId":"15391802368816517033"},{"userId":"00457755656738069091"},{"userId":"09294276420575852715"},{"userId":"05514985786053602799"},{"userId":"11320963709709929773"
},{"userId":"18036189924075501037"},{"userId":"13440859927054719372"},{"userId":"05485723458859912767"},{"userId":"06766053063390607171"},{"userId":"04118668244497426507"},{"userId":"17535725116474393634"},{"userId":"08106990756498989616"},{"userId":"08887047508210359990"},{"userId":"07934453738666147378"},{"userId":"01313617766859471227"},{"userId":"16044490963361368027"},{"userId":"04147569475913416215"},{"userId":"09467447366037418140"},{"userId":"05437631085890566616"},{"userId":"11623084231659512677"
},{"userId":"04583075195275333918"},{"userId":"03109174334026072413"},{"userId":"06322551553253102976"},{"userId":"01078909911975297443"},{"userId":"10007038248327355005"},{"userId":"00320933387269203904"},{"userId":"17277342995928736418"},{"userId":"14419981075737423509"},{"userId":"17618782820034880795"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu","title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"}},{"isReadStateLocked":true,
"crawlTimeMsec":"1285726131422","id":"tag:google.com,2005:reader/item/c9b3818aaeac0c1f","categories":["user/06278703451334277493/state/com.google/read"],"title":"Reflections on G-Kenya","published":1285723500,"updated":1285724352,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/FT6vpbGsgj8/reflections-on-g-kenya_28.html","type":"text/html"}],"content":{"direction":"ltr","content":"\u003ca href\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TB-isY6azZI/AAAAAAAAAHs/OWjs5UgjLD0/s1600/reto.png\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;float:right;margin:0 0 10px 10px;width:185px;height:228px\" src\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TB-isY6azZI/AAAAAAAAAHs/OWjs5UgjLD0/s400/reto.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003e\u003ci\u003e[This post is by \u003ca href\u003d\"http://blog.radioactiveyak.com/\"\u003eReto Meier\u003c/a\u003e AKA \u003ca href\u003d\"http://twitter.com/retomeier\"\u003e@retomeier\u003c/a\u003e, who \u003ca href\u003d\"http://www.amazon.com/gp/product/0470565527?tag\u003dinterventione-20\"\u003ewrote the book\u003c/a\u003e on Android App development. â€” Tim Bray]\u003c/i\u003e\u003c/p\u003e\u003cp\u003eRecently I visited Kenya for the three-day \u003ca href\u003d\"http://sitescontent.google.com/gkenya/\"\u003eG-Kenya event\u003c/a\u003e. I was there for two reasons:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cp\u003eTo talk about Android and the emerging mobile opportunities for African developers.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eTo ask questions and find out more about the reality of mobiles and writing code from the people there.\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eOf the countries Iâ€™ve visited to talk about Android, nowhere have people had such a close connection to their mobile phones as in Africa. While most Kenyans own feature phones, those mobiles are already used as much more than simple phones. \u003ca href\u003d\"http://www.safaricom.co.ke/index.php?id\u003d745\"\u003eMobile payments\u003c/a\u003e are already common, and cheap data plans mean that many people access the Internet exclusively through mobile handsets.\u003c/p\u003e\u003cp\u003eThere were two Android announcements while I was in town: a new low-cost Android handset (the \u003ca href\u003d\"http://www.huawei.com/africa/en/catalog.do?id\u003d741\"\u003eHuawei U8220\u003c/a\u003e), and Android Market access for Kenyans. I canâ€™t wait to see the kind of apps that come from developers who live in an environment where mobile is so pervasive.\u003c/p\u003e\u003ch3\u003eDay 1: Students\u003c/h3\u003e\u003cp\u003eG-Kenya was set within the beautiful campus of the Strathmore Business School, so it was fitting that day one was addressed to students.\u003c/p\u003e\u003cp\u003eOf the three groups, the students where the most enthusiastic about Android. This was likely influenced by their confidence that by the time they graduate, modern smartphones in Africa will have become the norm.\u003c/p\u003e\u003cp\u003eI love talking to student developersÂ â€”Â without the commercial pressures of finding customers or a monetization modelÂ â€”Â they\u0026#39;re free to innovate on whatever technology platforms they think are interesting.\u003c/p\u003e\u003ca href\u003d\"http://3.bp.blogspot.com/_GTM_W5mVPTU/TKKXtmakzBI/AAAAAAAAALw/E1e5_c9vnt8/s1600/rk.png\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;display:block;margin:0px auto 10px;text-align:center;width:400px;height:236px\" src\u003d\"http://3.bp.blogspot.com/_GTM_W5mVPTU/TKKXtmakzBI/AAAAAAAAALw/E1e5_c9vnt8/s400/rk.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003ch3\u003eDay 2: Developers\u003c/h3\u003e\u003cp\u003eModern smartphones are not yet prevalent in Africa, so it wasnâ€™t surprising that many of the developers are currently focusing on feature phones. That said, it was generally acknowledged that it was a question of when rather than if smartphones would come to dominate. The trick will be picking the right time to invest in Android so that they're ready to take advantage.\u003c/p\u003e\u003cp\u003ePlenty of developers believe that time is right now. It was a pleasure to meet the guys behind \u003ca href\u003d\"http://www.ushahidi.com/\"\u003eUshahidi\u003c/a\u003e, creators of an Android app created to report and record incidents during the 2008 election violence. Since their launch theyâ€™ve expanded to offer a global platform for crowd-sourced news where timeliness is critical.\u003c/p\u003e\u003cp\u003eI love opportunity the Android Market delivers to developers like the idea of developers like Ushahidi and \u003ca href\u003d\"http://www.littlefluffytoys.com/\"\u003eLittle Fluffy Toys\u003c/a\u003e (of London Cycle Hire fame). An app the solves a problem for your local community can easily be expanded to offer solutions to similar problems across the world.\u003c/p\u003e\u003cp\u003eDeveloper focus in Kenya seemed to follow similar lines:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cp\u003eCreate products and services targeted at local communities (such as the developers creating a distributed system to help health-care workers record medical information in the field.)\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eBuild robust cloud-based services that provide access to users from any mobile platform.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eExpand from feature phones to Android to incorporate features like GPS positioning, maps, and recording video and audio.\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3\u003eDay 3: Entrepreneurs and Marketers\u003c/h3\u003e\u003cp\u003eNo one was surprised to see a lot of the developers from the previous day return for entrepreneur day, and the apparent lack of Android questions from Day 2 was more than made up for on day 3; the â€œAppEngine Challengeâ€ on Day 2 fielded a record 30 entries, so it seems everyone was working on their entries rather than asking questions!\u003c/p\u003e\u003cp\u003eI didnâ€™t speak on Day 3, but spent all day fielding questions from eager mobile developers hoping to catch the Android wave as early innovators and first movers. That included a team who were working to provide real-time public transit tracking of \u003ca href\u003d\"http://www.google.com/images?q\u003dMatatu\u0026amp;um\u003d1\u0026amp;ie\u003dUTF-8\u0026amp;source\u003duniv\u0026amp;ei\u003d206PTNfMCMrj4AbE8fXpDg\u0026amp;sa\u003dX\u0026amp;oi\u003dimage_result_group\u0026amp;ct\u003dtitle\u0026amp;resnum\u003d1\u0026amp;ved\u003d0CCAQsAQwAA\u0026amp;biw\u003d1280\u0026amp;bih\u003d680\"\u003eMatatu\u003c/a\u003e via GPS and Android devices.\u003c/p\u003e\u003ch3\u003eReflections\u003c/h3\u003e\u003cp\u003eItâ€™s an exciting time to be a developer in Kenya. I regularly asked developers how long they thought it would take for Android devices to become common place. Many suggested if I came back this time next year I'd see a flood of Android devices. Even the more pessimistic predicted no more than 3 years.\u003c/p\u003e\u003cp\u003eAs I traveled back towards Jomo Kenyatta International, listening to the radio offering a free Sony Ericsson X10 Mini to one lucky caller, the future didnâ€™t seem very far away.\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-4484948935528975133?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dFT6vpbGsgj8:AGjbCRoqmx8:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dFT6vpbGsgj8:AGjbCRoqmx8:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003dFT6vpbGsgj8:AGjbCRoqmx8:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/FT6vpbGsgj8\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"15471461091989750893"},{"userId":"17669445519297280524"},{"userId":"00363647479470519434"},{"userId":"17962961790327471351"},{"userId":"16792806529348290695"},{"userId":"01078909911975297443"},{"userId":"00320933387269203904"},{"userId":"17277342995928736418"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu","title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"}},{
"isReadStateLocked":true,"crawlTimeMsec":"1285114299266","id":"tag:google.com,2005:reader/item/23398cb80a982135","categories":["user/06278703451334277493/state/com.google/read"],"title":"Proguard, Android, and the Licensing Server","published":1285110300,"updated":1285114708,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/1rFQgR3KFiQ/proguard-android-and-licensing-server.html","type":"text/html"}],"content":{"direction":"ltr","content":"\u003ca href\u003d\"http://4.bp.blogspot.com/_GTM_W5mVPTU/TJk_0I5IKTI/AAAAAAAAALo/8kAVoK6HF4I/s1600/Galpin.png\"\u003e\u003cimg style\u003d\"border:5px solid #ddd;float:right;margin:0 0 10px 10px;width:184px;height:228px\" src\u003d\"http://4.bp.blogspot.com/_GTM_W5mVPTU/TJk_0I5IKTI/AAAAAAAAALo/8kAVoK6HF4I/s400/Galpin.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003e\u003ci\u003e[This post is by Dan Galpin, an Android Developer Advocate specializing in games and comics. â€” Tim Bray]\u003c/i\u003e\u003c/p\u003e\u003cp\u003eThe \u003ca href\u003d\"http://android-developers.blogspot.com/2010/09/securing-android-lvl-applications.html\"\u003eSecuring Android LVL Applications\u003c/a\u003e blog post makes it clear that an Android developer should use an obfuscation tool such as Proguard in order to help safeguard their applications when using License Server.  Of course, this does present another question.  How should one integrate such a tool with the Android build process?  Weâ€™re specifically going to detail integrating Proguard in this post.\u003c/p\u003e\u003ch3\u003eBefore you Begin\u003c/h3\u003e\u003cp\u003eYou must be running the latest version of the Android SDK Tools (at least v7).  The new Ant build rules file included with v7 contains hooks to support user-created pre and post compile steps in order to make it easier to integrate tools such as Proguard into an Android build.  It also integrates a single rules file for building against all versions of the Android SDK.\u003c/p\u003e\u003ch3\u003eAdding an Optimization Step to build.xml\u003c/h3\u003e\u003cp\u003eFirst, youâ€™ll have to \u003ca href\u003d\"http://proguard.sourceforge.net/index.html#/downloads.html\"\u003eget Proguard\u003c/a\u003e if you donâ€™t yet have it.\u003c/p\u003e\u003cp\u003eIf youâ€™ve been using Eclipse to do your development, youâ€™ll have to switch to using the command line.  Android builds are done using Apache Ant.  A version of Ant ships along with Eclipse, but I recommend \u003ca href\u003d\"http://ant.apache.org/bindownload.cgi\"\u003einstalling\u003c/a\u003e your own version.\u003c/p\u003e\u003cp\u003eThe Android SDK \u003ca href\u003d\"http://developer.android.com/guide/developing/other-ide.html\"\u003ecan build you\u003c/a\u003e a starter build.xml file. Here is how itâ€™s done:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eandroid update project --path ./MyAndroidAppProject\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf all works well, youâ€™ll have a shiny new build.xml file sitting in your path.  Letâ€™s try doing a build.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eant release\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou should end up with an unsigned release build.  The command-line tools can also sign your build for you.  Youâ€™ll notice that the android tool created a local.properties file in your directory.  It will contain the sdk.dir property. You can have it make you a signed build by adding the location of your keystore and alias to this file.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003ekey.store\u003d/Path/to/my/keystore/MyKeystore.ks\nkey.alias\u003dmyalias\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSo, now you have a signed build from the command line, but still no obfuscated build.  To make things easy, youâ€™re going to want to get two helper files: \u003ca href\u003d\"http://android-proguard-commandline.googlecode.com/files/add-proguard-release.xml\"\u003eadd-proguard-release.xml\u003c/a\u003e and \u003ca href\u003d\"http://android-proguard-commandline.googlecode.com/files/procfg.txt\"\u003eprocfg.txt\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eCopy these files into your root directory (where the build.xml file sits). To add Proguard to your build, you first need to edit your local properties file to add the location of the directory that Proguard is installed in:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eproguard.dir\u003d/Directory/Proguard/Is/Installed/In\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eFinally... you need to add our script to your build file and have it override a few targets.  To do this, we use the XML â€œentityâ€ construct. At the top of your build.xml file, add an entity that references our script file:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u0026lt;?xml version\u003d\u0026quot;1.0\u0026quot; encoding\u003d\u0026quot;UTF-8\u0026quot;?\u0026gt;\n\u0026lt;!DOCTYPE project [\n       \u0026lt;!ENTITY add-proguard-release SYSTEM \u0026quot;add-proguard-release.xml\u0026quot;\u0026gt;\n]\u0026gt;\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYouâ€™re not done yet.  Somewhere within the project tag add the reference to our entity to include our script.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u0026lt;project name\u003d\u0026quot;MyProjectName\u0026quot; default\u003d\u0026quot;help\u0026quot;\u0026gt;\n\u0026amp;add-proguard-release;\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThatâ€™s it!  In many cases, calling\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eant release\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWill give you an obfuscated build.  Now test and make sure that it hasnâ€™t broken anything.\u003c/p\u003e\u003ch3\u003eBut Wait, My App is Crashing Now\u003c/h3\u003e\u003cp\u003eMost crashes happen because Proguard has obfuscated away something that your application needs, such as a class that is referenced in the AndroidManifest or within a layout, or perhaps something called from JNI or reflection.  The Proguard configuration provided here tries to avoid obfuscating most of these cases, but itâ€™s still possible that in edge cases youâ€™ll end up seeing something like a \u003ccode\u003eClassNotFoundException\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eYou can make edits to the procfg.txt file to keep classes that have been obfuscated away.  Adding: \u003c/p\u003e\u003cpre\u003e\u003ccode\u003e-keep public class * [my classname]\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eshould help. For more information about how to prevent Proguard from obfuscating specific things, see the \u003ca href\u003d\"http://proguard.sourceforge.net/\"\u003eProguard manual\u003c/a\u003e.  Specifically, the keep section.  In the interest of security, try to keep as little of your application unobfuscated as possible.\u003c/p\u003e\u003cp\u003eThe standard settings provided in procfg.txt will be good for many applications, and will catch many common cases, but they are by no means comprehensive.  One of the things that weâ€™ve done is had Proguard create a bunch of output files in the obf directory to help you debug these problems.\u003c/p\u003e\u003cp\u003eThe mapping.txt file explains how your classes have been obfuscated.  Youâ€™ll want to make sure to keep this around once you have submitted your build to Market, as youâ€™ll need this to decipher your stack traces.\u003c/p\u003e\u003ch3\u003eConclusion\u003c/h3\u003e\u003cp\u003eTools such as Proguard make the binary of your application harder to understand, and make your application slightly smaller and more efficient at the same time, at the cost of making it slightly more challenging to debug problems in the field.  For many applications, the tradeoff is more than worthwhile.\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-7512701459510109?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003d1rFQgR3KFiQ:jw3LevlQVYM:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003d1rFQgR3KFiQ:jw3LevlQVYM:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003d1rFQgR3KFiQ:jw3LevlQVYM:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/1rFQgR3KFiQ\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"18012391610902179339"},{"userId":"09216550340110865425"},{"userId":"07616936388433206714"},{"userId":"15552792864887276399"},{"userId":"08057853245131166692"},{"userId":"08017560384033337148"},{"userId":"17669445519297280524"},{"userId":"15234479079602502698"},{"userId":"15316723648533920038"},{"userId":"06434805859819223870"},{"userId":"15119679607770460213"},{"userId":"05194957025748281338"},{"userId":"15391802368816517033"},{"userId":"06703693396356018616"
},{"userId":"01078909911975297443"},{"userId":"16640811373202562039"},{"userId":"00320933387269203904"},{"userId":"17277342995928736418"},{"userId":"00431210581262177076"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu","title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"}},{"isReadStateLocked":true,"crawlTimeMsec":"1284503266977","id":"tag:google.com,2005:reader/item/bf9e6d68747c11bb","categories":["user/06278703451334277493/state/com.google/read"
],"title":"Supporting the new music Voice Action","published":1284501900,"updated":1284502994,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/8eHMiTuJig0/supporting-new-music-voice-action.html","type":"text/html"}],"content":{"direction":"ltr","content":"\u003ca href\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TI_1sY8-RNI/AAAAAAAAALg/ekGl15yRUaI/s1600/Picture+60.png\"\u003e\u003cimg style\u003d\"float:left;margin:0 10px 10px 0;width:188px;height:200px\" src\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TI_1sY8-RNI/AAAAAAAAALg/ekGl15yRUaI/s200/Picture+60.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003e\u003ci\u003e[This post is by Mike LeBeau, the Tech Lead and architect behind Voice Actions. â€” Tim Bray]\u003c/i\u003e\u003c/p\u003e\u003cp\u003eWe recently launched \u003ca href\u003d\"http://googleblog.blogspot.com/2010/08/just-speak-it-introducing-voice-actions.html\"\u003eVoice Actions\u003c/a\u003e in the new Google Voice Search for AndroidÂ â€”Â an awesome new way to search, control, and communicate on your phone faster than ever before, by using your voice.\u003c/p\u003e\u003cp\u003eOne of these new Voice Actions lets users find and automatically play music. By speaking something like â€œlisten to They Might Be Giantsâ€ into the new Voice Search, users can quickly find the music they want online and play it, using any number of different apps. (\u003ca href\u003d\"http://www.pandora.com/android\"\u003ePandora\u003c/a\u003e, \u003ca href\u003d\"http://www.last.fm/hardware/android\"\u003eLast.fm\u003c/a\u003e, \u003ca href\u003d\"http://www.spotify.com/int/mobile/android/\"\u003eSpotify\u003c/a\u003e, \u003ca href\u003d\"http://www.mspot.com/music/learn_mobile\"\u003emSpot\u003c/a\u003e, and \u003ca href\u003d\"http://www.rdio.com/apps/mobile/\"\u003eRdio\u003c/a\u003e are among the first apps to support this.)\u003c/p\u003e\u003cp\u003eTo do this, we leveraged a very common little piece of Android magic: a new \u003ca href\u003d\"http://developer.android.com/reference/android/content/Intent.html\"\u003eIntent\u003c/a\u003e. If you develop a music app that supports open-ended music search, you can make it work with users speaking â€œlisten toâ€ Voice Actions simply by registering for the new intent weâ€™ve defined. This new intent isnâ€™t defined as a constant in the SDK yet, but we wanted to make sure music app developers had all the information needed to use it right away.\u003c/p\u003e\u003cp\u003eHereâ€™s all you should need to know:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cp\u003eIn your \u003ccode\u003eAndroidManifest.xml\u003c/code\u003e, just register one of your activities for the new intent \u003ccode\u003eandroid.media.action.MEDIA_PLAY_FROM_SEARCH\u003c/code\u003e:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u0026lt;application android:label\u003d\u0026quot;@string/app_name\u0026quot; android:icon\u003d\u0026quot;@drawable/icon\u0026quot;\u0026gt;\n    \u0026lt;activity android:name\u003d\u0026quot;MusicActivity\u0026quot; android:label\u003d\u0026quot;@string/app_name\u0026quot;\u0026gt;\n        \u0026lt;intent-filter\u0026gt;\n            \u0026lt;action android:name\u003d\u0026quot;android.media.action.MEDIA_PLAY_FROM_SEARCH\u0026quot; /\u0026gt;\n            \u0026lt;category android:name\u003d\u0026quot;android.intent.category.DEFAULT\u0026quot; /\u0026gt;\n        \u0026lt;/intent-filter\u0026gt;\n    \u0026lt;/activity\u0026gt;\n\u0026lt;/application\u0026gt;\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eWhen your activity receives this intent, you can find the userâ€™s search query inside the \u003ca href\u003d\"http://developer.android.com/reference/android/app/SearchManager.html#QUERY\"\u003eSearchManager.QUERY\u003c/a\u003e string extra:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eimport android.app.Activity;\nimport android.app.SearchManager;\n\npublic class MusicActivity extends Activity {\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        String query \u003d getIntent().getStringExtra(SearchManager.QUERY);\n        // Do something with query...\n    }\n}\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis will represent everything the user spoke after â€œlisten toâ€. This is totally open-ended voice recognition, and it expects very flexible searchÂ â€”Â so, for example, the string could be the name of any artist (â€œthey might be giantsâ€), an album (â€œfactory showroomâ€), a song (â€œmetal detectorâ€), or a combination of any of these (â€œmetal detector by they might be giantsâ€).\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eA few subtle details worth understanding about this intent:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cp\u003eYour app should do its best to quickly find and \u003cem\u003eautomatically play\u003c/em\u003e music corresponding to the userâ€™s search query. The intention here is to get users to their desired result as fast as possible, and in this case, that means playing music quickly.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eThis will really only work well for music apps that can find music across a very large corpus of options. Because our voice recognition doesnâ€™t currently support any way to provide a list of specific songs to be recognized, trying to use it against a small set of music choices will work poorlyÂ â€”Â things which are not in the set will be over-recognized, and things which are in the set may not be recognized well. So if youâ€™re not the developer of a large-scale cloud music application, this intent is probably not for you.\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eWe think youâ€™ll find this new intent can greatly enhance your music appâ€™s experience for users. And we hope you enjoy our new Voice Actions as much as we do!\u003c/p\u003e\n\n\u003cp\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-8853607923511918509?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003d8eHMiTuJig0:NUYx-ilF9Fg:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003d8eHMiTuJig0:NUYx-ilF9Fg:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003d8eHMiTuJig0:NUYx-ilF9Fg:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/8eHMiTuJig0\" height\u003d\"1\" width\u003d\"1\"\u003e\u003c/p\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"14701545461338272501"},{"userId":"01455726627654656550"},{"userId":"08057853245131166692"},{"userId":"17290175921501075261"},{"userId":"17028476595848419075"},{"userId":"01306580593196531574"},{"userId":"13080846433475106520"},{"userId":"17669445519297280524"},{"userId":"00363647479470519434"},{"userId":"15234479079602502698"},{"userId":"15316723648533920038"},{"userId":"11139872131943480212"},{"userId":"15391802368816517033"},{"userId":"01489060580275119364"
},{"userId":"14773054277985573150"},{"userId":"08910737086264477086"},{"userId":"16550694058995556713"},{"userId":"15959654768766345741"},{"userId":"02135420681496492983"},{"userId":"02699524761967876288"},{"userId":"12099599126884799055"},{"userId":"02997108413126178634"},{"userId":"00320933387269203904"},{"userId":"17277342995928736418"},{"userId":"13653775339475947183"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu","title":"Android Developers Blog",
"htmlUrl":"http://android-developers.blogspot.com/"}},{"isReadStateLocked":true,"crawlTimeMsec":"1284399292726","id":"tag:google.com,2005:reader/item/3b22f47b2d546f4a","categories":["user/06278703451334277493/state/com.google/read"],"title":"Screen Geometry Fun","published":1284391200,"updated":1284405933,"alternate":[{"href":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/J3B2wPywoHg/screen-geometry-fun.html","type":"text/html"}],"content":{"direction":"ltr","content":"\u003cp\u003eThe recent announcement of the \u003ca href\u003d\"http://galaxytab.samsungmobile.com/\"\u003eSamsung Galaxy Tab\u003c/a\u003e should be a wake-up call for Android developers. Whatâ€™s scary is that weâ€™ve never seen a screen like this on an Android device before. Whatâ€™s reassuring is that most apps Just Work (in fact, a lot of the ones Iâ€™ve tried so far have looked terrific) and the potential problems are easy to avoid. Hereâ€™s what you need to do to take advantage of not just the Tab, but all the new form factors that are coming down the pipe.\u003c/p\u003e\u003cp\u003eLetâ€™s consider the Tab as a â€œteachable momentâ€:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cp\u003eIts screen is 1024x600; no compatible deviceâ€™s screen has ever had a thousand pixels in any dimension before.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eA lot of people are going to want to hold it sideways, in â€œlandscapeâ€ mode, most of the time.\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eWe recommend spending quality time with the Developersâ€™-guide discussion of \u003ca href\u003d\"http://developer.android.com/guide/practices/screens_support.html\"\u003esupporting multiple screens\u003c/a\u003e; we'll be revising that regularly when required as the device landscape changes.  Also, this blog recently ran Dan Morrillâ€™s \u003ca href\u003d\"http://android-developers.blogspot.com/2010/09/one-screen-turn-deserves-another.html\"\u003eOne Screen Turn Deserves Another\u003c/a\u003e, which should help out in handling the landscape default.\u003c/p\u003e\u003ch3\u003eWhat density means\u003c/h3\u003e\u003cp\u003eWhen you build your app, you can provide layouts and assets (graphics) which vary by screen density, screen size, and landscape or portrait orientation. Clearly, pulling these together is not as much fun as designing groovy layouts and clever Intent filters; but thereâ€™s no way around it.\u003c/p\u003e\u003cp\u003eIn this context, the Samsung has another little surprise: If you do the arithmetic, its screen has 170 DPI, which is far from the densest among Android devices. Still, it declares itself as â€œhdpiâ€ (and as having a â€œlargeâ€ screen size). The reason is simple: It looks better that way.\u003c/p\u003e\u003cp\u003eSamsung found that if you rendered your graphical resources bit-for-bit using medium-density sources, they looked great, but most large-screen designs ended up looking sparse, with too much space between buttons and icons. At high resolution, the framework scales up the resources an amount that turns out to be just enough.\u003c/p\u003e\u003cp\u003eAs a photography hobbyist, Iâ€™m reminded of how you juggle aperture and shutter speed and ISO sensitivity. If, for example, you want a fast shutter speed to capture a dancer in mid-leap, youâ€™d better compensate with a wider aperture or more sensitivity. Similarly, the Galaxy Tabâ€™s screen is at the large end of â€œlargeâ€, so declaring it as high-density applies a useful compensation.\u003c/p\u003e\u003cp\u003eThe good news is that the scaling code in the framework is smart enough and fast enough that it comes out well; the graphics in my own apps look remarkably good on the Tab.  Here is the front page of my â€œLifeSaver 2â€ app; first the Nexus One, then the Galaxy Tab, resized for presentation here.  Different densities, different geometries, and the only important difference is that the version on the big screen looks prettier.\u003c/p\u003e\u003ca href\u003d\"http://3.bp.blogspot.com/_GTM_W5mVPTU/TIUI9DyzERI/AAAAAAAAAKo/T_9K5s9XTFU/s1600/N1-landscape.png\"\u003e\u003cimg style\u003d\"display:block;margin:0px auto 10px;text-align:center;width:320px;height:192px\" src\u003d\"http://3.bp.blogspot.com/_GTM_W5mVPTU/TIUI9DyzERI/AAAAAAAAAKo/T_9K5s9XTFU/s320/N1-landscape.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003ca href\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TIUJGPctlsI/AAAAAAAAAKw/TZa-LSbu8ZQ/s1600/P1-2.png\"\u003e\u003cimg style\u003d\"display:block;margin:0px auto 10px;text-align:center;width:320px;height:187px\" src\u003d\"http://1.bp.blogspot.com/_GTM_W5mVPTU/TIUJGPctlsI/AAAAAAAAAKw/TZa-LSbu8ZQ/s320/P1-2.png\" border\u003d\"0\" alt\u003d\"\"\u003e\u003c/a\u003e\u003cp\u003eYour take-away should be what I said above: Make sure you provide your graphics at all three resolutions, and chances are the Android framework will find a way to make them look great on a huge variety of devices.\u003c/p\u003e\u003ch3\u003eOther Ways To Go Wrong\u003c/h3\u003e\u003cp\u003eAs I noted, most apps work just fine on this kind of device, out of the box, no changes required. However, we have run across a few Worst Practices that can make your app look dorky or even broken; for example:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cp\u003eUsing AbsoluteLayout; this is a recipe for trouble.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eUsing absolute rather than density-independent pixels.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003eOne member of my group ran across a couple of apps that suffered a Null Pointer Exception because they were calculating screen size when their Activity started, and doing their own resource loading rather than letting the framework take care of it.  The problem was that they hadn't built in handling for the 1024x600 screen.  The problem would vanish if they'd hand the work to the framework (or at least make sure that all their \u003ccode\u003eswitch\u003c/code\u003e statements had \u003ccode\u003edefault\u003c/code\u003e cases).\u003c/p\u003e\u003c/li\u003e\u003c/ul\u003e\u003ch3\u003eEscape the Shoebox\u003c/h3\u003e\u003cp\u003eI've observed that a certain number of applications appear â€œshoeboxedâ€, running in a handset-like number of pixels in the center of the screen, surrounded by a wide black band. They work fine, but this is silly, and easy to avoid. It turns out that this happens when you have a \u003ca href\u003d\"http://developer.android.com/guide/topics/manifest/uses-sdk-element.html\"\u003e\u003ccode\u003etargetSdkVersion\u003c/code\u003e\u003c/a\u003e value less than four; this is interpreted to mean that youâ€™re targeting the legacy Cupcake flavor of Android, which only supported HVGA.\u003c/p\u003e\u003cp\u003eIn any case, if you want to make 100% sure that your app doesnâ€™t get pushed into the shoebox, the \u003ca href\u003d\"http://developer.android.com/guide/topics/manifest/supports-screens-element.html\"\u003e\u003ccode\u003esupports-screens\u003c/code\u003e\u003c/a\u003e element is your friend; hereâ€™s what we recommend:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u0026lt;supports-screens android:largeScreens\u003d\u0026quot;true\u0026quot; android:anyDensity\u003d\u0026quot;true\u0026quot; /\u0026gt;\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e(Both those attributes default to \"false\" for API levels less than 4.) Given a chance, the framework gets a good result on almost any Android screen imaginable.\u003c/p\u003e\u003ch3\u003eTesting\u003c/h3\u003e\u003cp\u003eWhen a device comes along thatâ€™s different in one way or another from whatâ€™s been available before, and you donâ€™t have one, the only way to be sure your app will treat it properly is to run it on an Android emulator; the emulator code is flexible enough to model anything weâ€™ve seen or know is coming down the pipe.\u003c/p\u003e\u003cp\u003eIn the case of the Galaxy Tab, Samsung will be providing an add-on including a custom AVD and skin as an SDK add-on, to make your life easier; I used a pre-release to make the LifeSaver screenshot above.\u003c/p\u003e\u003ch3\u003eWhy All the Extra Work?\u003c/h3\u003e\u003cp\u003eBecause, as 2010 winds down, Android \u003ca href\u003d\"http://android-developers.blogspot.com/2010/09/brace-for-future.html\"\u003eisnâ€™t just for phones\u003c/a\u003e, and isnâ€™t just for things that fit in your pocket. The minor effort required to deal with this should pay off big-time in terms of giving your apps access to a universe of new kinds of devices.\u003c/p\u003e\u003cdiv\u003e\u003cimg width\u003d\"1\" height\u003d\"1\" src\u003d\"https://blogger.googleusercontent.com/tracker/6755709643044947179-3608954705799938155?l\u003dandroid-developers.blogspot.com\" alt\u003d\"\"\u003e\u003c/div\u003e\u003cdiv\u003e\n\u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dJ3B2wPywoHg:3HP4wF6Zh9E:yIl2AUoC8zA\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d\u003dyIl2AUoC8zA\" border\u003d\"0\"\u003e\u003c/a\u003e \u003ca href\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a\u003dJ3B2wPywoHg:3HP4wF6Zh9E:-BTjWOF_DHI\"\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i\u003dJ3B2wPywoHg:3HP4wF6Zh9E:-BTjWOF_DHI\" border\u003d\"0\"\u003e\u003c/a\u003e\n\u003c/div\u003e\u003cimg src\u003d\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/J3B2wPywoHg\" height\u003d\"1\" width\u003d\"1\"\u003e"
},"author":"Tim Bray","likingUsers":[{"userId":"09273765339304887311"},{"userId":"03552833013083248876"},{"userId":"09307374418358312964"},{"userId":"03560200052926293134"},{"userId":"15552792864887276399"},{"userId":"17918575358728456095"},{"userId":"13600883944526870127"},{"userId":"01455726627654656550"},{"userId":"13236389836239072361"},{"userId":"12912579156415481593"},{"userId":"12257144297731287993"},{"userId":"07419001956748116803"},{"userId":"15316723648533920038"},{"userId":"10268680748316504917"
},{"userId":"15119679607770460213"},{"userId":"04458579394429260567"},{"userId":"13440859927054719372"},{"userId":"07031517960338820794"},{"userId":"15712234028002681488"},{"userId":"01078909911975297443"},{"userId":"10007038248327355005"},{"userId":"03790872424673868308"},{"userId":"02351731661371735405"},{"userId":"02042938872454209198"},{"userId":"00320933387269203904"},{"userId":"13653775339475947183"},{"userId":"17618782820034880795"}],"comments":[],"annotations":[],"origin":{"streamId":"feed/http://feeds.feedburner.com/blogspot/hsDu",
"title":"Android Developers Blog","htmlUrl":"http://android-developers.blogspot.com/"}}]}