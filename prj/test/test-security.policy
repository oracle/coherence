//
// This file contains the minimum set of security permissions necessary to run
// Coherence.
//
// To use this file you must turn on the Java Security Manager by defining the
// "java.security.manager" system property and setting the "java.security.policy"
// system property to the location of this security policy file. You must also
// set the "oracle.coherence.lib" system property to the location of your Coherence
// installation. Additionally, you need to grant some permissions to your
// application code by setting the "app.lib" property and changing the minimum
// permission set outlined below.
//
// For example:
//   java -Djava.security.manager
//        -Djava.security.policy=c:/oracle/coherence/lib/security/security.policy
//        -Doracle.coherence.lib=c:/oracle/coherence/lib
//        -Doracle.common=c:/oracle/Middleware/Oracle_Home/oracle_common
//
// You can edit this file and change the permissions for your application as
// necessary.
//
// NOTE: This security policy file assumes the default JRE security
// permissions have been granted. Therefore, you must be careful to use a
// single equals sign (=) and not two equals signs (==) when setting the
// java.security.policy system property.
//

grant codeBase "file:${oracle.coherence.lib}/coherence-${test.project.version}.jar" {
  permission com.tangosol.net.security.LocalPermission "*";
  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.io.FilePermission "${user.home}${/}coherence${/}-", "read, write, delete";
  permission java.io.FilePermission "http:/xmlns.oracle.com/coherence/-", "read";
  permission java.io.FilePermission "${test.tmp.dir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete";
  permission java.lang.management.ManagementPermission "control";
  permission java.lang.management.ManagementPermission "monitor";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.management.internal";
  permission java.lang.RuntimePermission "accessClassInPackage.jdk.internal.ref";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.management";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.reflect";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.rmi.server";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.security.provider";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.security.x509";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "accessSystemModules";
  permission java.lang.RuntimePermission "accessUserInformation"; // required by persistence examples
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getClassLoader";
  permission java.lang.RuntimePermission "getenv.*";
  permission java.lang.RuntimePermission "getFileSystemAttributes";
  permission java.lang.RuntimePermission "getProtectionDomain";
  permission java.lang.RuntimePermission "getStackTrace";
  permission java.lang.RuntimePermission "modifyThread";
  permission java.lang.RuntimePermission "modifyThreadGroup";
  permission java.lang.RuntimePermission "reflectionFactoryAccess";
  permission java.lang.RuntimePermission "selectorProvider";
  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.lang.RuntimePermission "shutdownHooks";
  permission java.net.NetPermission "getNetworkInformation";
  permission java.net.NetPermission "specifyStreamHandler";
  permission java.net.SocketPermission "*", "accept,connect,resolve,listen";
  permission java.security.SecurityPermission "insertProvider";
  permission java.security.SecurityPermission "putProviderProperty.CoherenceSecurityProvider";
  permission java.security.SecurityPermission "putProviderProperty.OracleCommonsSecurityProvider";
  permission java.util.logging.LoggingPermission "control";
  permission java.util.PropertyPermission "java.net.preferIPv4Stack", "read";
  permission java.util.PropertyPermission "java.net.preferIPv6Addresses", "read";
  permission java.util.PropertyPermission "java.version", "read";
  permission java.util.PropertyPermission "os.arch", "read";
  permission java.util.PropertyPermission "os.name", "read";
  permission java.util.PropertyPermission "sun.arch.data.model", "read";
  permission java.util.PropertyPermission "tangosol.*", "read";
  permission java.util.PropertyPermission "coherence.*", "read";
  permission java.util.PropertyPermission "user.dir", "read";
  permission java.util.PropertyPermission "user.home", "read";
  permission java.util.PropertyPermission "com.oracle.common.*", "read";
  permission java.util.PropertyPermission "com.oracle.coherence.common.*", "read";
  permission javax.management.MBeanPermission "*", "queryMBeans";
  permission javax.management.MBeanPermission "*", "getMBeanInfo";
  permission javax.management.MBeanPermission "*", "invoke";
  permission javax.management.MBeanPermission "*", "getAttribute";
  permission javax.management.MBeanPermission "*", "registerMBean";
  permission javax.management.MBeanPermission "com.sun.management.*", "*";
  permission javax.management.MBeanPermission "com.tangosol.*", "*";
  permission javax.management.MBeanPermission "sun.management.*", "*";
  permission javax.management.MBeanPermission "jmx.*", "*";
  permission javax.management.MBeanPermission "reporter.*","*";
  permission javax.management.MBeanPermission "com.sun.jmx.*", "*";
  permission javax.management.MBeanServerPermission "*";
  permission javax.management.MBeanTrustPermission "*";
  permission javax.security.auth.AuthPermission "doAs";
  permission javax.security.auth.AuthPermission "getSubject";

  // The following permissions are needed for recoverable caching
  // (note, that "<<ALL FILES>>" could be replaced with the persistent store location)
  permission java.io.FilePermission "<<ALL FILES>>", "read, write, delete, execute";
  permission java.util.PropertyPermission "*", "read";

  // The following is required to support serialization of lambdas
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";

  // The following permissions are needed to run with Coherence Console:
  permission java.util.PropertyPermission "*", "read, write";

  // To run with the Coherence security framework enabled, please uncomment
  // the following lines:

  permission javax.security.auth.AuthPermission "*";
  permission javax.security.auth.PrivateCredentialPermission "* * \"*\"", "read";

  // To run with Coherence POF annotations with access to non-public fields
  // or methods when using a security manager, please uncomment the following
  // lines:

  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";

  // The following permissions are needed if running in Oracle Exa* environments.
  // If you are running in a Oracle Exa* environment, uncomment the following:

  // permission java.io.FilePermission "${/}tmp${/}-", "read, write, delete";
  // permission java.lang.RuntimePermission "loadLibrary.*";
  // permission java.lang.RuntimePermission "accessClassInPackage.sun.nio.ch";

  // The following permissions are needed for Coherence REST. If you are using
  // Coherence REST, uncomment the following:
  permission java.security.SecurityPermission "getProperty.ssl.KeyManagerFactory.algorithm";
  permission java.security.SecurityPermission "getProperty.ssl.TrustManagerFactory.algorithm";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2.runtime.reflect";

  // The following permission is required for taking JFR.
  permission "jdk.jfr.FlightRecorderPermission" "accessFlightRecorder";
};

grant codeBase "file:${oracle.coherence.lib}/../../test/functional/json/target/json-${test.project.version}-tests.jar" {
  permission java.util.PropertyPermission "oracle.io.*", "read";
  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
};

// To allow the cluster node to run the HttpAdapter (by Sun Inc.),
// you will need to set the jmx.lib system property to the location of the
// jmxtools.jar library and uncomment the following two sections

// grant codeBase "file:${oracle.coherence.lib}/-" {
//   permission java.util.PropertyPermission "jmx.*", "read,write";
//   permission javax.management.MBeanPermission "com.sun.jdmk.comm.HtmlAdaptorServer", "*";
// };

// grant codeBase "file:${jmx.lib}${/}-" {
//   permission java.security.AllPermission;
// };

// Needed for persistence archiver test example
grant codeBase "file:${oracle.coherence.lib}/../../-" {
  permission java.io.FilePermission "${user.home}/.ssh/config", "read";
  permission java.io.FilePermission "${java.io.tmpdir}/-", "read,write,delete";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.net.SocketPermission "*", "connect,resolve";
  permission java.util.logging.LoggingPermission "control";
  permission java.util.PropertyPermission "user.home", "read";
  permission java.util.PropertyPermission "org.apache.sshd.security.registrars", "read";
  permission java.util.PropertyPermission "*", "read,write";
};

// The following grant block is needed by Coherence REST.

grant codeBase "file:${oracle.coherence.lib}/../../coherence-rest/-" {
  permission com.tangosol.net.security.LocalPermission "BackingMapManagerContext.getBackingMap";
  permission com.tangosol.net.security.LocalPermission "MBeanServerProxy.execute";
  permission com.tangosol.net.security.LocalPermission "Service.getInternalService";
  permission java.lang.RuntimePermission "getClassLoader";
  permission javax.security.auth.AuthPermission "doAs";
  permission javax.security.auth.AuthPermission "getSubject";
  permission java.lang.management.ManagementPermission "control";
  permission java.lang.management.ManagementPermission "monitor";

  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${test.tmp.dir}${/}-", "read, write, delete, execute";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2.runtime.reflect";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "accessSystemModules";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getFileSystemAttributes";
  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.net.SocketPermission "*", "accept,resolve,listen";
  permission java.security.SecurityPermission "getProperty.ssl.KeyManagerFactory.algorithm";
  permission java.security.SecurityPermission "getProperty.ssl.TrustManagerFactory.algorithm";
  permission java.util.PropertyPermission "*", "read,write";
  permission javax.security.auth.AuthPermission "createLoginContext.CoherenceREST";

  permission com.tangosol.net.security.LocalPermission "BackingMapManagerContext.getBackingMap";
  permission javax.management.MBeanPermission "*", "queryNames";
  permission javax.management.MBeanPermission "*", "queryMBeans";
  permission javax.management.MBeanPermission "*", "getMBeanInfo";
  permission javax.management.MBeanPermission "*", "invoke";
  permission javax.management.MBeanPermission "*", "getAttribute";

  permission javax.management.MBeanPermission "com.sun.management.*", "*";
  permission javax.management.MBeanPermission "com.tangosol.*", "*";
  permission javax.management.MBeanPermission "com.sun.jmx.*", "*";
  permission javax.management.MBeanPermission "sun.management.*", "*";
  permission javax.management.MBeanPermission "jmx.*", "*";
  permission javax.management.MBeanPermission "reporter.*","*";
  permission javax.management.MBeanServerPermission "*";
  permission javax.management.MBeanTrustPermission "*";
};

grant codeBase "file:${oracle.coherence.lib}/../../coherence-rest/target/coherence-rest-${test.project.version}.jar" {
  permission com.tangosol.net.security.LocalPermission "BackingMapManagerContext.getBackingMap";
  permission com.tangosol.net.security.LocalPermission "MBeanServerProxy.execute";
  permission com.tangosol.net.security.LocalPermission "Service.getInternalService";
  permission java.lang.RuntimePermission "getClassLoader";
  permission javax.security.auth.AuthPermission "doAs";
  permission javax.security.auth.AuthPermission "getSubject";
  permission java.lang.management.ManagementPermission "control";
  permission java.lang.management.ManagementPermission "monitor";

  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/rest/target", "read, write, delete, execute";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/rest/target/-", "read, write, delete, execute";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${test.tmp.dir}${/}-", "read, write, delete, execute";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2.runtime.reflect";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "accessSystemModules";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getFileSystemAttributes";
  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.net.SocketPermission "*", "accept,resolve,listen";
  permission java.security.SecurityPermission "getProperty.ssl.KeyManagerFactory.algorithm";
  permission java.security.SecurityPermission "getProperty.ssl.TrustManagerFactory.algorithm";
  permission java.util.PropertyPermission "*", "read,write";
  permission javax.security.auth.AuthPermission "createLoginContext.CoherenceREST";
  permission com.tangosol.net.security.LocalPermission "BackingMapManagerContext.getBackingMap";
  permission javax.management.MBeanPermission "*", "queryNames";
  permission javax.management.MBeanPermission "*", "queryMBeans";
  permission javax.management.MBeanPermission "*", "getMBeanInfo";
  permission javax.management.MBeanPermission "*", "invoke";
  permission javax.management.MBeanPermission "*", "getAttribute";

  permission javax.management.MBeanPermission "com.sun.management.*", "*";
  permission javax.management.MBeanPermission "com.tangosol.*", "*";
  permission javax.management.MBeanPermission "com.sun.jmx.*", "*";
  permission javax.management.MBeanPermission "sun.management.*", "*";
  permission javax.management.MBeanPermission "jmx.*", "*";
  permission javax.management.MBeanPermission "reporter.*","*";
  permission javax.management.MBeanServerPermission "*";
  permission javax.management.MBeanTrustPermission "*";
};

// The following grant block is needed by Coherence Management over REST.

grant codeBase "file:${oracle.coherence.lib}/../../coherence-management/-" {
  permission com.tangosol.net.security.LocalPermission "BackingMapManagerContext.getBackingMap";
  permission com.tangosol.net.security.LocalPermission "MBeanServerProxy.execute";
  permission com.tangosol.net.security.LocalPermission "Service.getInternalService";
  permission java.lang.RuntimePermission "getClassLoader";
  permission javax.security.auth.AuthPermission "doAs";
  permission javax.security.auth.AuthPermission "getSubject";
  permission java.lang.management.ManagementPermission "control";
  permission java.lang.management.ManagementPermission "monitor";

  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${test.tmp.dir}${/}-", "read, write, delete, execute";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2.runtime.reflect";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "accessSystemModules";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getFileSystemAttributes";
  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.net.SocketPermission "*", "accept,resolve,listen";
  permission java.security.SecurityPermission "getProperty.ssl.KeyManagerFactory.algorithm";
  permission java.security.SecurityPermission "getProperty.ssl.TrustManagerFactory.algorithm";
  permission java.util.PropertyPermission "*", "read,write";
  permission javax.security.auth.AuthPermission "createLoginContext.CoherenceREST";

  permission com.tangosol.net.security.LocalPermission "BackingMapManagerContext.getBackingMap";
  permission javax.management.MBeanPermission "*", "queryNames";
  permission javax.management.MBeanPermission "*", "queryMBeans";
  permission javax.management.MBeanPermission "*", "getMBeanInfo";
  permission javax.management.MBeanPermission "*", "invoke";
  permission javax.management.MBeanPermission "*", "getAttribute";

  permission javax.management.MBeanPermission "com.sun.management.*", "*";
  permission javax.management.MBeanPermission "com.tangosol.*", "*";
  permission javax.management.MBeanPermission "com.sun.jmx.*", "*";
  permission javax.management.MBeanPermission "sun.management.*", "*";
  permission javax.management.MBeanPermission "jmx.*", "*";
  permission javax.management.MBeanPermission "reporter.*","*";
  permission javax.management.MBeanServerPermission "*";
  permission javax.management.MBeanTrustPermission "*";

  // The following permission is required for taking JFR.
  permission "jdk.jfr.FlightRecorderPermission" "accessFlightRecorder";
};

grant codeBase "file:${oracle.coherence.lib}/../../coherence-management/target/coherence-management-${test.project.version}.jar" {
  permission java.lang.RuntimePermission "getClassLoader";
  permission javax.security.auth.AuthPermission "doAs";
  permission javax.security.auth.AuthPermission "getSubject";
  permission java.lang.management.ManagementPermission "control";
  permission java.lang.management.ManagementPermission "monitor";

  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/management/target", "read, write, delete, execute";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/management/target/-", "read, write, delete, execute";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${test.tmp.dir}${/}-", "read, write, delete, execute";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2.runtime.reflect";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "accessSystemModules";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getFileSystemAttributes";
  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.net.SocketPermission "*", "accept,resolve,listen";
  permission java.security.SecurityPermission "getProperty.ssl.KeyManagerFactory.algorithm";
  permission java.security.SecurityPermission "getProperty.ssl.TrustManagerFactory.algorithm";
  permission java.util.PropertyPermission "*", "read,write";
  permission javax.security.auth.AuthPermission "createLoginContext.CoherenceREST";
  permission com.tangosol.net.security.LocalPermission "BackingMapManagerContext.getBackingMap";
  permission javax.management.MBeanPermission "*", "queryNames";
  permission javax.management.MBeanPermission "*", "queryMBeans";
  permission javax.management.MBeanPermission "*", "getMBeanInfo";
  permission javax.management.MBeanPermission "*", "invoke";
  permission javax.management.MBeanPermission "*", "getAttribute";

  permission javax.management.MBeanPermission "com.sun.management.*", "*";
  permission javax.management.MBeanPermission "com.tangosol.*", "*";
  permission javax.management.MBeanPermission "com.sun.jmx.*", "*";
  permission javax.management.MBeanPermission "sun.management.*", "*";
  permission javax.management.MBeanPermission "jmx.*", "*";
  permission javax.management.MBeanPermission "reporter.*","*";
  permission javax.management.MBeanServerPermission "*";
  permission javax.management.MBeanTrustPermission "*";

  // The following permission is required for taking JFR.
  permission "jdk.jfr.FlightRecorderPermission" "accessFlightRecorder";
};

// The following grant block is needed by Coherence Metrics.

grant codeBase "file:${oracle.coherence.lib}/../../coherence-metrics/-" {
  permission com.tangosol.net.security.LocalPermission "BackingMapManagerContext.getBackingMap";
  permission com.tangosol.net.security.LocalPermission "MBeanServerProxy.execute";
  permission com.tangosol.net.security.LocalPermission "Service.getInternalService";
  permission java.lang.RuntimePermission "getClassLoader";
  permission javax.security.auth.AuthPermission "doAs";
  permission javax.security.auth.AuthPermission "getSubject";
  permission java.lang.management.ManagementPermission "control";
  permission java.lang.management.ManagementPermission "monitor";

  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${test.tmp.dir}${/}-", "read, write, delete, execute";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2.runtime.reflect";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getFileSystemAttributes";
  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.net.SocketPermission "*", "accept,resolve,listen";
  permission java.security.SecurityPermission "getProperty.ssl.KeyManagerFactory.algorithm";
  permission java.security.SecurityPermission "getProperty.ssl.TrustManagerFactory.algorithm";
  permission java.util.PropertyPermission "*", "read,write";
  permission javax.security.auth.AuthPermission "createLoginContext.CoherenceREST";

  permission com.tangosol.net.security.LocalPermission "BackingMapManagerContext.getBackingMap";
  permission javax.management.MBeanPermission "*", "queryNames";
  permission javax.management.MBeanPermission "*", "queryMBeans";
  permission javax.management.MBeanPermission "*", "getMBeanInfo";
  permission javax.management.MBeanPermission "*", "invoke";
  permission javax.management.MBeanPermission "*", "getAttribute";

  permission javax.management.MBeanPermission "com.sun.management.*", "*";
  permission javax.management.MBeanPermission "com.tangosol.*", "*";
  permission javax.management.MBeanPermission "com.sun.jmx.*", "*";
  permission javax.management.MBeanPermission "sun.management.*", "*";
  permission javax.management.MBeanPermission "jmx.*", "*";
  permission javax.management.MBeanPermission "reporter.*","*";
  permission javax.management.MBeanServerPermission "*";
  permission javax.management.MBeanTrustPermission "*";
};

grant codeBase "file:${oracle.coherence.lib}/../../coherence-metrics/target/coherence-metrics-${test.project.version}.jar" {
  permission java.lang.RuntimePermission "getClassLoader";
  permission javax.security.auth.AuthPermission "doAs";
  permission javax.security.auth.AuthPermission "getSubject";
  permission java.lang.management.ManagementPermission "control";
  permission java.lang.management.ManagementPermission "monitor";

  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/metrics/target", "read, write, delete, execute";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/metrics/target/-", "read, write, delete, execute";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${test.tmp.dir}${/}-", "read, write, delete, execute";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2.runtime.reflect";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getFileSystemAttributes";
  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.net.SocketPermission "*", "accept,resolve,listen";
  permission java.security.SecurityPermission "getProperty.ssl.KeyManagerFactory.algorithm";
  permission java.security.SecurityPermission "getProperty.ssl.TrustManagerFactory.algorithm";
  permission java.util.PropertyPermission "*", "read,write";
  permission javax.security.auth.AuthPermission "createLoginContext.CoherenceREST";
  permission com.tangosol.net.security.LocalPermission "BackingMapManagerContext.getBackingMap";
  permission javax.management.MBeanPermission "*", "queryNames";
  permission javax.management.MBeanPermission "*", "queryMBeans";
  permission javax.management.MBeanPermission "*", "getMBeanInfo";
  permission javax.management.MBeanPermission "*", "invoke";
  permission javax.management.MBeanPermission "*", "getAttribute";

  permission javax.management.MBeanPermission "com.sun.management.*", "*";
  permission javax.management.MBeanPermission "com.tangosol.*", "*";
  permission javax.management.MBeanPermission "com.sun.jmx.*", "*";
  permission javax.management.MBeanPermission "sun.management.*", "*";
  permission javax.management.MBeanPermission "jmx.*", "*";
  permission javax.management.MBeanPermission "reporter.*","*";
  permission javax.management.MBeanServerPermission "*";
  permission javax.management.MBeanTrustPermission "*";
};

grant codeBase "file:${oracle.coherence.lib}/../../coherence-http-grizzly/-" {
  permission java.lang.RuntimePermission "getClassLoader";
  permission javax.security.auth.AuthPermission "doAs";
  permission javax.security.auth.AuthPermission "getSubject";

  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${test.tmp.dir}${/}-", "read, write, delete, execute";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2.runtime.reflect";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "accessSystemModules";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getFileSystemAttributes";
  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.net.SocketPermission "*", "accept,resolve,listen";
  permission java.security.SecurityPermission "getProperty.ssl.KeyManagerFactory.algorithm";
  permission java.security.SecurityPermission "getProperty.ssl.TrustManagerFactory.algorithm";
  permission java.util.PropertyPermission "*", "read,write";
  permission javax.security.auth.AuthPermission "createLoginContext.CoherenceREST";
};

grant codeBase "file:${oracle.coherence.lib}/../../coherence-http-grizzly/target/coherence-http-grizzly-${test.project.version}.jar" {
  permission java.lang.RuntimePermission "getClassLoader";
  permission javax.security.auth.AuthPermission "doAs";
  permission javax.security.auth.AuthPermission "getSubject";

  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/rest-grizzly/target", "read, write, delete, execute";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/rest-grizzly/target/-", "read, write, delete, execute";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${test.tmp.dir}${/}-", "read, write, delete, execute";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2.runtime.reflect";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "accessSystemModules";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getFileSystemAttributes";
  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.net.SocketPermission "*", "accept,resolve,listen";
  permission java.security.SecurityPermission "getProperty.ssl.KeyManagerFactory.algorithm";
  permission java.security.SecurityPermission "getProperty.ssl.TrustManagerFactory.algorithm";
  permission java.util.PropertyPermission "*", "read,write";
};

grant codeBase "file:${oracle.coherence.lib}/../../coherence-http-jetty/-" {
  permission java.lang.RuntimePermission "getClassLoader";
  permission javax.security.auth.AuthPermission "doAs";
  permission javax.security.auth.AuthPermission "getSubject";

  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${test.tmp.dir}${/}-", "read, write, delete, execute";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2.runtime.reflect";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "accessSystemModules";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getFileSystemAttributes";
  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.net.SocketPermission "*", "accept,resolve,listen";
  permission java.security.SecurityPermission "getProperty.ssl.KeyManagerFactory.algorithm";
  permission java.security.SecurityPermission "getProperty.ssl.TrustManagerFactory.algorithm";
  permission java.util.PropertyPermission "*", "read,write";
  permission javax.security.auth.AuthPermission "createLoginContext.CoherenceREST";
};

grant codeBase "file:${oracle.coherence.lib}/../../coherence-http-jetty/target/coherence-http-jetty-${test.project.version}.jar" {
  permission java.lang.RuntimePermission "getClassLoader";
  permission javax.security.auth.AuthPermission "doAs";
  permission javax.security.auth.AuthPermission "getSubject";

  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/rest-jetty/target", "read, write, delete, execute";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/rest-jetty/target/-", "read, write, delete, execute";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${test.tmp.dir}${/}-", "read, write, delete, execute";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2.runtime.reflect";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "accessSystemModules";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getFileSystemAttributes";
  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.net.SocketPermission "*", "accept,resolve,listen";
  permission java.security.SecurityPermission "getProperty.ssl.KeyManagerFactory.algorithm";
  permission java.security.SecurityPermission "getProperty.ssl.TrustManagerFactory.algorithm";
  permission java.util.PropertyPermission "*", "read,write";
};

grant codeBase "file:${oracle.coherence.lib}/../../coherence-http-netty/-" {
  permission java.lang.RuntimePermission "getClassLoader";
  permission javax.security.auth.AuthPermission "doAs";
  permission javax.security.auth.AuthPermission "getSubject";

  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${test.tmp.dir}${/}-", "read, write, delete, execute";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2.runtime.reflect";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "accessSystemModules";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getFileSystemAttributes";
  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.net.SocketPermission "*", "accept,resolve,listen";
  permission java.security.SecurityPermission "getProperty.ssl.KeyManagerFactory.algorithm";
  permission java.security.SecurityPermission "getProperty.ssl.TrustManagerFactory.algorithm";
  permission java.util.PropertyPermission "*", "read,write";
  permission javax.security.auth.AuthPermission "createLoginContext.CoherenceREST";
};

grant codeBase "file:${oracle.coherence.lib}/../../coherence-http-netty/target/coherence-http-netty-${test.project.version}.jar" {
  permission java.lang.RuntimePermission "getClassLoader";
  permission javax.security.auth.AuthPermission "doAs";
  permission javax.security.auth.AuthPermission "getSubject";

  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/rest-netty/target", "read, write, delete, execute";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/rest-netty/target/-", "read, write, delete, execute";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${test.tmp.dir}${/}-", "read, write, delete, execute";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2.runtime.reflect";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "accessSystemModules";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getFileSystemAttributes";
  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.net.SocketPermission "*", "accept,resolve,listen";
  permission java.security.SecurityPermission "getProperty.ssl.KeyManagerFactory.algorithm";
  permission java.security.SecurityPermission "getProperty.ssl.TrustManagerFactory.algorithm";
  permission java.util.PropertyPermission "*", "read,write";
};

grant codeBase "file:${oracle.coherence.lib}/../../coherence-http-simple/-" {
  permission java.lang.RuntimePermission "getClassLoader";
  permission javax.security.auth.AuthPermission "doAs";
  permission javax.security.auth.AuthPermission "getSubject";

  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${test.tmp.dir}${/}-", "read, write, delete, execute";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2.runtime.reflect";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "accessSystemModules";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getFileSystemAttributes";
  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.net.SocketPermission "*", "accept,resolve,listen";
  permission java.security.SecurityPermission "getProperty.ssl.KeyManagerFactory.algorithm";
  permission java.security.SecurityPermission "getProperty.ssl.TrustManagerFactory.algorithm";
  permission java.util.PropertyPermission "*", "read,write";
  permission javax.security.auth.AuthPermission "createLoginContext.CoherenceREST";
};

grant codeBase "file:${oracle.coherence.lib}/../../coherence-http-simple/target/coherence-http-simple-${test.project.version}.jar" {
  permission java.lang.RuntimePermission "getClassLoader";
  permission javax.security.auth.AuthPermission "doAs";
  permission javax.security.auth.AuthPermission "getSubject";

  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/rest-simple/target", "read, write, delete, execute";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/rest-simple/target/-", "read, write, delete, execute";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${test.tmp.dir}${/}-", "read, write, delete, execute";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2";
  permission java.lang.RuntimePermission "accessClassInPackage.com.sun.xml.internal.bind.v2.runtime.reflect";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.resources";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "accessSystemModules";
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getFileSystemAttributes";
  permission java.lang.RuntimePermission "setContextClassLoader";
  permission java.net.SocketPermission "*", "accept,resolve,listen";
  permission java.security.SecurityPermission "getProperty.ssl.KeyManagerFactory.algorithm";
  permission java.security.SecurityPermission "getProperty.ssl.TrustManagerFactory.algorithm";
  permission java.util.PropertyPermission "*", "read,write";
};

grant codeBase "file:${oracle.coherence.lib}/../../coherence-json/-" {
  // The following is required to support serialization of lambdas
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
};

grant codeBase "file:${oracle.coherence.lib}/../../coherence-json/target/coherence-json-${test.project.version}.jar" {
  // The following is required to support serialization of lambdas
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
};

// Permissions for LoginModule (normally in the boot-class-path)

grant codeBase "file:${oracle.coherence.lib}/../../coherence-login/target/-" {
  permission java.security.AllPermission;
};

// Permissions added specifically for unit and functional tests (this portion
// is not shipped as part of the product)

grant codeBase "file:${oracle.coherence.lib}/../../coherence-testing-support/target/-" {
  // testing support classes use tons of internal APIs
  permission java.security.AllPermission;
};

grant codeBase "file:${test.project.dir}/target/-" {
  permission java.lang.RuntimePermission "createClassLoader";
  permission java.lang.RuntimePermission "getClassLoader";
  permission javax.security.auth.AuthPermission "getSubject";
  permission javax.security.auth.AuthPermission "doAs";

  // required by com.oracle.tools.runtime.network.AvailablePortIterator#isPortAvailable
  permission java.net.SocketPermission "localhost:30000-", "listen,resolve";

  // required by cache.CacheFactoryBuilderTests
  // calling into com.oracle.bedrock.runtime.*
  // as well as security.SysPropAuthorizedHostFilter
  permission java.util.PropertyPermission "bedrock.*", "read";
  permission java.util.PropertyPermission "coherence.*", "read";
  permission java.util.PropertyPermission "tangosol.*", "read";
  permission java.util.PropertyPermission "test.*", "read,write";

  // required by various usages of common.TestHelper methods
  permission com.tangosol.net.security.LocalPermission "*";

  // allow register of MockHotCacheMBean & MockCWebMBean
  permission javax.management.MBeanPermission "*", "registerMBean";
};

grant codeBase "file:${oracle.coherence.lib}/../../test/functional/rest/target/-" {
  // allow register of MockHotCacheMBean & MockCWebMBean
  permission javax.management.MBeanPermission "*", "registerMBean";
  permission javax.management.MBeanPermission "*", "queryMBeans";
  permission javax.management.MBeanPermission "*", "getAttribute";
  permission javax.management.MBeanPermission "*", "setAttribute";
  permission javax.management.MBeanServerPermission "findMBeanServer";
  permission java.lang.management.ManagementPermission "control";
  permission java.lang.management.ManagementPermission "monitor";
  permission javax.management.MBeanPermission "sun.management.*", "*";
  permission javax.management.MBeanPermission "*", "invoke";
  permission javax.management.MBeanServerPermission "createMBeanServer";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/rest/target", "read, write, delete, execute";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/rest/target/-", "read, write, delete, execute";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/persistence/target", "read, write, delete, execute";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/persistence/target/-", "read, write, delete, execute";
  permission java.util.logging.LoggingPermission "control";
  permission java.util.PropertyPermission "*", "read";
};

grant codeBase "file:${oracle.coherence.lib}/../../test/functional/extend/target/-" {
  // required by extend.AcceptorAddressProvider
  permission java.net.SocketPermission "*", "resolve";

  // required by the extend.JmxMBeanTests
  permission javax.management.MBeanPermission "*", "queryMBeans";
  permission javax.management.MBeanPermission "*", "getAttribute";
  permission javax.management.MBeanPermission "*", "setAttribute";
  permission javax.management.MBeanServerPermission "findMBeanServer";
};

grant codeBase "file:${oracle.coherence.lib}/../../test/functional/net/target/-" {
  // ServiceTests read the -tests.jar files explicitly
  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.lang.RuntimePermission "createClassLoader";
};

grant codeBase "file:${oracle.coherence.lib}/../../test/functional/persistence/target/-" {
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read, write, delete, execute";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/persistence/target", "read, write, delete, execute";
  permission java.io.FilePermission "${oracle.coherence.lib}/../../test/functional/persistence/target/-", "read, write, delete, execute";
  permission java.util.logging.LoggingPermission "control";
  permission java.util.PropertyPermission "*", "read";
  permission java.lang.management.ManagementPermission "monitor";
  permission javax.management.MBeanPermission "sun.management.*", "*";
  permission javax.management.MBeanPermission "com.tangosol.*", "getAttribute";
  permission javax.management.MBeanPermission "com.tangosol.*", "invoke";
  permission javax.management.MBeanServerPermission "createMBeanServer";
};

grant codeBase "file:${oracle.coherence.lib}/../../test/functional/processor/target/-" {
  // direct manipulation of the backing map also requires this:
  // (LocalCache.put->...->MapEvent.dispatch)
  permission "java.lang.RuntimePermission" "setContextClassLoader";

  // LiteTxnProcessorTests use the Oracle Tools on the server side
  permission java.security.AllPermission;
};

grant codeBase "file:${oracle.coherence.lib}/../../test/functional/tracing/jaeger-common/target/-" {
  permission java.util.PropertyPermission "*", "read, write";
  permission java.lang.RuntimePermission "getenv.*";
  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.net.SocketPermission "*", "connect,resolve,accept,listen";
  permission java.lang.RuntimePermission "shutdownHooks";
};

grant codeBase "file:${oracle.coherence.lib}/../../test/functional/tracing/jaeger-1.0.0/target/-" {
  permission java.util.PropertyPermission "*", "read, write";
  permission java.lang.RuntimePermission "getenv.*";
  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission java.net.SocketPermission "*", "connect,resolve,accept,listen";
  permission java.lang.RuntimePermission "shutdownHooks";
};

grant codeBase "file:${oracle.coherence.lib}/../../test/functional/transaction/target/-" {
  // these tests read the config files explicitly
  permission java.io.FilePermission "<<ALL FILES>>", "read";
  permission com.tangosol.net.security.LocalPermission "Cluster.shutdown";
};

grant codeBase "file:${oracle.coherence.lib}/../../test/functional/io/target/-" {
  // allow shaded bdb to access its log files in tmp directory.
  permission java.io.FilePermission "${test.bdb.directory}${/}-", "read, write, delete, execute";
};

grant codeBase "file:${oracle.coherence.lib}/../../coherence-examples/examples-java/target/-" {
  permission java.util.PropertyPermission "*", "read, write";
  permission java.lang.RuntimePermission "getProtectionDomain";
  permission java.lang.RuntimePermission "accessDeclaredMembers";
  permission java.lang.RuntimePermission "accessUserInformation";
  permission java.io.FilePermission "${user.home}${/}.ssh${/}config", "read";
  permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read,write,delete";
  permission java.net.SocketPermission "127.0.0.1:30000", "connect,resolve";
  permission java.util.logging.LoggingPermission "control";
};

grant codeBase "file:${test.maven.repository}/-" {
  permission java.security.AllPermission; // third-party libraries: bdb, toplink, etc.
};
